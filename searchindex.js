Search.setIndex({"alltitles": {"0.10": [[0, "id177"]], "0.10.0": [[0, "id189"]], "0.10.1": [[0, "id188"]], "0.10.10": [[0, "id179"]], "0.10.11": [[0, "id178"]], "0.10.2": [[0, "id187"]], "0.10.3": [[0, "id186"]], "0.10.4": [[0, "id185"]], "0.10.5": [[0, "id184"]], "0.10.6": [[0, "id183"]], "0.10.7": [[0, "id182"]], "0.10.8": [[0, "id181"]], "0.10.9": [[0, "id180"]], "0.11": [[0, "id162"]], "0.11.0": [[0, "id176"]], "0.11.1": [[0, "id175"]], "0.11.10": [[0, "id166"]], "0.11.11": [[0, "id165"]], "0.11.12": [[0, "id164"]], "0.11.13": [[0, "id163"]], "0.11.2": [[0, "id174"]], "0.11.3": [[0, "id173"]], "0.11.4": [[0, "id172"]], "0.11.5": [[0, "id171"]], "0.11.6": [[0, "id170"]], "0.11.7": [[0, "id169"]], "0.11.8": [[0, "id168"]], "0.11.9": [[0, "id167"]], "0.12": [[0, "id154"]], "0.12.0": [[0, "id161"]], "0.12.1": [[0, "id160"]], "0.12.2": [[0, "id159"]], "0.12.3": [[0, "id158"]], "0.12.4": [[0, "id157"]], "0.12.5": [[0, "id156"]], "0.12.6 / 0.12.8": [[0, "id155"]], "0.12.7 (retracted)": [[0, "retracted"]], "0.13": [[0, "id138"]], "0.13.0": [[0, "id151"]], "0.13.1": [[0, "id150"]], "0.13.10": [[0, "id141"]], "0.13.11": [[0, "id140"]], "0.13.12": [[0, "id139"]], "0.13.2": [[0, "id149"]], "0.13.3": [[0, "id148"]], "0.13.4": [[0, "id147"]], "0.13.5": [[0, "id146"]], "0.13.6": [[0, "id145"]], "0.13.7": [[0, "id144"]], "0.13.8": [[0, "id143"]], "0.13.9": [[0, "id142"]], "0.14": [[0, "id131"]], "0.14.0": [[0, "id134"]], "0.14.1": [[0, "id133"]], "0.14.2": [[0, "id132"]], "0.15": [[0, "id103"]], "0.15.0": [[0, "id128"]], "0.15.1": [[0, "id127"]], "0.15.10": [[0, "id118"]], "0.15.11": [[0, "id117"]], "0.15.12": [[0, "id116"]], "0.15.13": [[0, "id115"]], "0.15.14": [[0, "id114"]], "0.15.15": [[0, "id113"]], "0.15.16": [[0, "id112"]], "0.15.17": [[0, "id111"]], "0.15.18": [[0, "id110"]], "0.15.19": [[0, "id109"]], "0.15.2": [[0, "id126"]], "0.15.20": [[0, "id108"]], "0.15.21": [[0, "id107"]], "0.15.22": [[0, "id106"]], "0.15.23": [[0, "id105"]], "0.15.24": [[0, "id104"]], "0.15.3": [[0, "id125"]], "0.15.4": [[0, "id124"]], "0.15.5": [[0, "id123"]], "0.15.6": [[0, "id122"]], "0.15.7": [[0, "id121"]], "0.15.8": [[0, "id120"]], "0.15.9": [[0, "id119"]], "0.16": [[0, "id73"]], "0.16.0": [[0, "id102"]], "0.16.1": [[0, "id97"]], "0.16.10": [[0, "id86"]], "0.16.11": [[0, "id85"]], "0.16.12": [[0, "id84"]], "0.16.13": [[0, "id83"]], "0.16.14": [[0, "id82"]], "0.16.15": [[0, "id81"]], "0.16.16": [[0, "id80"]], "0.16.17": [[0, "id79"]], "0.16.18": [[0, "id77"]], "0.16.19": [[0, "id76"]], "0.16.2": [[0, "id96"]], "0.16.20": [[0, "id75"]], "0.16.21": [[0, "id74"]], "0.16.3": [[0, "id95"]], "0.16.4": [[0, "id94"]], "0.16.5": [[0, "id93"]], "0.16.6": [[0, "id90"]], "0.16.7": [[0, "id89"]], "0.16.8": [[0, "id88"]], "0.16.9": [[0, "id87"]], "0.17": [[0, "id58"]], "0.17.0": [[0, "id72"]], "0.17.1": [[0, "id71"]], "0.17.2": [[0, "id70"]], "0.17.3": [[0, "id69"]], "0.17.4": [[0, "id68"]], "0.17.5": [[0, "id67"]], "0.17.6": [[0, "id66"]], "0.17.7": [[0, "id65"]], "0.17.8": [[0, "id59"]], "0.18.0": [[0, "id54"]], "0.18.1": [[0, "id51"]], "0.19": [[0, "id35"]], "0.19.0": [[0, "id46"]], "0.19.1": [[0, "id42"]], "0.19.2": [[0, "id39"]], "0.19.3": [[0, "id36"]], "0.2.0": [[0, "id201"]], "0.20": [[0, "id27"]], "0.20.0": [[0, "id31"]], "0.20.1": [[0, "id28"]], "0.21": [[0, "id2"]], "0.21.0 - 2024-05-23": [[0, "id23"]], "0.21.1 - 2024-05-24": [[0, "id20"]], "0.21.2 - 2024-05-25": [[0, "id17"]], "0.21.3 - 2024-06-01": [[0, "id14"]], "0.21.4 - 2024-07-03": [[0, "id10"]], "0.21.5 - 2024-07-18": [[0, "id7"]], "0.21.6": [[0, "id4"]], "0.21.7": [[0, "id3"]], "0.3.0": [[0, "id200"]], "0.4.0": [[0, "id199"]], "0.5.0": [[0, "id198"]], "0.6.0": [[0, "id197"]], "0.7.0": [[0, "id196"]], "0.8.0": [[0, "id195"]], "0.9 & older": [[0, "older"]], "0.9.0": [[0, "id194"]], "0.9.1": [[0, "id193"]], "0.9.2": [[0, "id192"]], "0.9.3": [[0, "id191"]], "0.9.4": [[0, "id190"]], "1: \u57fa\u672c\u7528\u6cd5": [[13, "id2"], [24, "example-pydantic-tut1"]], "2: Querysets & Lists": [[24, "querysets-lists"]], "2: Queryset\u548cList": [[13, "querysetlist"]], "3: Relations & Early-init": [[24, "relations-early-init"]], "3: \u5173\u7cfb\u548c\u521d\u59cb\u5316": [[13, "id6"]], "4: PydanticMeta & Callables": [[24, "pydanticmeta-callables"]], "4: PydanticMeta \u548c Callables": [[13, "pydanticmeta-callables"]], "AIOHTTP \u6837\u4f8b": [[20, null]], "API Reference": [[5, "api-reference"]], "Added": [[0, "added"], [0, "id8"], [0, "id11"], [0, "id18"], [0, "id24"], [0, "id29"], [0, "id32"], [0, "id37"], [0, "id40"], [0, "id43"], [0, "id47"], [0, "id52"], [0, "id55"], [0, "id60"]], "Attribution": [[1, "attribution"]], "BlackSheep \u6837\u4f8b": [[22, null]], "Breaking Changes": [[0, "breaking-changes"], [0, "id34"]], "Breaking Changes:": [[0, "id137"]], "Bugfixes:": [[0, "bugfixes"], [0, "id130"], [0, "id135"], [0, "id153"]], "Case-When \u8868\u8fbe\u5f0f": [[29, "case-when"]], "Caution": [[0, null], [0, null], [0, null], [0, null], [18, null], [18, null]], "Changed": [[0, "changed"], [0, "id26"], [0, "id50"], [0, "id57"], [0, "id64"]], "Contributor Covenant Code of Conduct": [[1, null]], "DB_URL": [[18, "db-url"]], "DB\u7279\u5b9a\u5b57\u6bb5": [[30, "db"]], "Deprecated": [[0, "deprecated"]], "Deprecations:": [[0, "deprecations"], [0, "id136"]], "Docs/examples:": [[0, "docs-examples"]], "Enforcement": [[1, "enforcement"]], "Enhancements:": [[0, "enhancements"]], "Example": [[7, null], [8, null], [9, null], [9, null], [14, null], [15, null], [16, null], [44, null]], "F \u8868\u8fbe\u5f0f": [[29, "f"]], "FastAPI \u6837\u4f8b": [[23, null]], "Fixed": [[0, "fixed"], [0, "id5"], [0, "id12"], [0, "id15"], [0, "id21"], [0, "id25"], [0, "id30"], [0, "id33"], [0, "id38"], [0, "id41"], [0, "id45"], [0, "id49"], [0, "id53"], [0, "id56"], [0, "id63"]], "Important": [[5, null], [5, null], [5, null]], "Linters": [[10, null]], "Logging": [[35, null]], "MSSQL/Oracle": [[18, "mssql-oracle"]], "Manager": [[36, null]], "Meta\u7c7b": [[38, "meta"]], "MySQL": [[11, null], [30, "module-tortoise.contrib.mysql.fields"]], "MySQL/MariaDB": [[18, "mysql-mariadb"]], "New Features:": [[0, "id152"]], "New features:": [[0, "new-features"], [0, "id129"]], "Nose2": [[17, "nose2"]], "Note": [[0, null], [0, null], [0, null], [5, null], [13, null], [13, null], [13, null], [17, null], [17, null], [17, null], [29, null], [29, null], [32, null], [32, null], [32, null], [33, null], [33, null], [38, null], [38, null], [38, null], [38, null], [38, null], [39, null], [39, null], [44, null]], "ORM \u6709\u4f55\u7528\u5904\uff1f": [[33, "orm"]], "Oracle\u4e2d\u7684\u7f16\u7801": [[18, "oracle"]], "Other changes": [[0, "other-changes"]], "Our Pledge": [[1, "our-pledge"]], "Our Responsibilities": [[1, "our-responsibilities"]], "Our Standards": [[1, "our-standards"]], "PostgreSQL": [[18, "postgresql"]], "Postgres": [[12, null], [30, "module-tortoise.contrib.postgres.fields"]], "Py.test": [[17, "py-test"]], "PyLint \u63d2\u4ef6": [[10, "pylint"]], "Pydantic \u5e8f\u5217\u5316": [[13, null]], "Pydantic \u6837\u4f8b": [[24, null]], "PydanticMeta": [[13, "pydanticmeta"]], "Quart \u6837\u4f8b": [[25, null]], "QuerySet": [[39, "queryset"]], "Q\u8868\u8fbe\u5f0f": [[29, "q"]], "Removals:": [[0, "removals"]], "Removed": [[0, "removed"]], "SQLite": [[18, "sqlite"]], "Sanic \u6837\u4f8b": [[26, null]], "Schema \u521b\u5efa": [[43, null]], "Schema\u521b\u5efa(Schema creation)": [[21, "schema-schema-creation"]], "Scope": [[1, "scope"]], "Security fixes": [[0, "security-fixes"]], "Starlette \u6837\u4f8b": [[27, null]], "Tortoise ORM": [[33, null]], "Tortoise-ORM BlackSheep \u96c6\u6210": [[8, null]], "Tortoise-ORM FastAPI \u96c6\u6210": [[9, null]], "Tortoise-ORM Quart \u96c6\u6210": [[14, null]], "Tortoise-ORM Sanic \u96c6\u6210": [[15, null]], "Tortoise-ORM Starlette \u96c6\u6210": [[16, null]], "Tortoise-ORM aiohttp \u96c6\u6210": [[7, null]], "TortoiseCLI": [[4, null]], "Warning": [[0, null], [0, null], [0, null], [44, null], [44, null], [44, null]], "__models__ \u7684\u7528\u6cd5": [[38, "id3"]], "main.py": [[20, "main-py"], [23, "main-py"], [25, "main-py"], [26, "main-py"], [27, "main-py"]], "models.py": [[20, "models-py"], [22, "models-py"], [23, "models-py"], [25, "models-py"], [26, "models-py"], [27, "models-py"]], "server.py": [[22, "server-py"]], "test_api.py": [[22, "test-api-py"]], "tests.py": [[23, "tests-py"]], "timezone": [[46, "id3"]], "use_tz": [[46, "use-tz"]], "\u4e00\u5bf9\u4e00": [[39, "one-to-one"]], "\u4e2d\u671f\u8ba1\u5212": [[41, "id3"]], "\u4e3a\u4ec0\u4e48\u8981\u6784\u5efa Tortoise ORM\uff1f": [[33, "id3"]], "\u4e3b\u952e": [[38, "id4"]], "\u4e8b\u52a1": [[48, null]], "\u4e8b\u52a1(Transactions)": [[21, "transactions"]], "\u4ea4\u4e92\u5f0f shell": [[4, "shell"]], "\u4ee5\u53ca\u66f4\u591a": [[33, "id7"]], "\u4f18\u5148\u4e8b\u9879": [[2, "id7"]], "\u4f20\u9012\u81ea\u5b9a\u4e49SSL\u8bc1\u4e66": [[18, "ssl"]], "\u4f7f\u7528\u65b9\u6cd5": [[38, "id2"]], "\u4fe1\u53f7": [[45, null]], "\u5173\u7cfb(Relations)": [[21, "relations"]], "\u5173\u7cfb\u5b57\u6bb5": [[30, "id6"]], "\u5185\u7f6e\u6821\u9a8c\u5668": [[49, "id3"]], "\u51fd\u6570": [[12, "id3"], [31, "id2"]], "\u51fd\u6570(Functions)": [[21, "functions"]], "\u51fd\u6570\u548c\u805a\u5408": [[31, null]], "\u5206\u7ec4(Group By)": [[21, "group-by"]], "\u521b\u5efa\u5668": [[13, "id7"]], "\u521d\u59cb\u5316": [[37, "id5"]], "\u521d\u59cb\u5316app": [[44, "app"]], "\u521d\u59cb\u5316db": [[37, "db"]], "\u524d\u8a00": [[46, "timezone"]], "\u529f\u80fd": [[18, "id3"], [33, "id4"]], "\u5347\u7ea7\u5230\u6700\u65b0\u7248\u672c": [[37, "id7"]], "\u5355\u5143\u6d4b\u8bd5\u652f\u6301": [[17, null]], "\u539f\u751fSQL": [[29, "sql"]], "\u53c2\u8003": [[7, "id1"], [8, "id1"], [9, "id1"], [14, "id2"], [15, "id1"], [16, "id1"], [17, "id5"], [30, "id3"], [38, "id19"], [40, null], [44, "id3"], [46, "id4"]], "\u53d8\u66f4\u65e5\u5fd7": [[0, null]], "\u53ef\u63d2\u5165\u6570\u636e\u5e93\u540e\u7aef": [[33, "id5"]], "\u53ef\u9009\u52a0\u901f\u5668": [[32, "id3"]], "\u53ef\u9009\u53c2\u6570": [[18, "id5"], [18, "id7"], [18, "id9"], [18, "id11"]], "\u542f\u52a8": [[44, null]], "\u552f\u4e00\u5b57\u6bb5\u5173\u7cfb(Relations with Unique field)": [[21, "relations-with-unique-field"]], "\u57fa\u672cDB\u5ba2\u6237\u7aef": [[18, "db"]], "\u57fa\u672c\u4f7f\u7528(Basic)": [[21, "basic"]], "\u57fa\u672c\u5b57\u6bb5": [[30, "id4"]], "\u57fa\u672c\u7528\u6cd5": [[24, "example-pydantic-basic"]], "\u57fa\u672c\u975e\u5173\u7cfb\u793a\u4f8b": [[22, "id1"], [23, "id1"]], "\u57fa\u7840\u51fd\u6570\u7c7b": [[31, "id4"]], "\u5907\u6ce8(Comments)": [[21, "comments"]], "\u590d\u6742\u7684\u9884\u83b7\u53d6": [[39, "id67"]], "\u5916\u952e": [[38, "id14"], [39, "foreign-key"]], "\u591a\u5bf9\u591a": [[39, "many-to-many"]], "\u591a\u5bf9\u591a\u5173\u7cfb": [[38, "id17"]], "\u591a\u6570\u636e\u5e93(Two Databases)": [[21, "two-databases"]], "\u5b50\u67e5\u8be2": [[29, "id2"]], "\u5b57\u6bb5": [[11, "id2"], [12, "id2"], [30, null]], "\u5b89\u88c5": [[32, "id2"]], "\u5b9a\u4e49\u8def\u7531": [[42, "id3"]], "\u5e2e\u52a9\u51fd\u6570": [[43, "id2"]], "\u5e72\u51c0\u3001\u719f\u6089\u7684 Python \u754c\u9762": [[33, "python"]], "\u5f00\u59cb\u5165\u95e8": [[32, null]], "\u5f02\u5e38": [[28, null]], "\u5f15\u8a00": [[33, "id2"]], "\u5fc5\u9009\u53c2\u6570": [[18, "id4"], [18, "id6"], [18, "id8"]], "\u5fc5\u987b\u53c2\u6570": [[18, "id10"]], "\u5feb\u901f\u5f00\u59cb": [[4, "id2"], [37, "id3"]], "\u611f\u8c22": [[3, null]], "\u624b\u5199SQL(Manual SQL)": [[21, "sql-manual-sql"]], "\u6269\u5c55\u4e00\u4e2a\u5b57\u6bb5": [[30, "id7"]], "\u6269\u5c55\u7d22\u5f15": [[34, "id3"]], "\u63d0\u4ea4\u9519\u8bef\u6216\u8bf7\u6c42\u529f\u80fd": [[2, "id2"]], "\u641c\u7d22": [[11, "id3"], [12, "id4"]], "\u6539\u8fdb\u5173\u7cfb\u7c7b\u578b\u63d0\u793a": [[38, "id18"]], "\u6559\u7a0b": [[13, "id1"], [32, "id7"]], "\u6559\u7a0b\u6765\u6e90": [[24, "example-pydantic-tutorials"]], "\u6570\u636e\u5b57\u6bb5": [[30, "id5"]], "\u6570\u636e\u5e93": [[18, null]], "\u6570\u636e\u5e93\u5b57\u6bb5": [[38, "id15"]], "\u65e9\u671f\u6a21\u578b\u521d\u59cb\u5316": [[24, "example-pydantic-early-init"]], "\u65f6\u533a": [[46, null]], "\u663e\u793a\u5386\u53f2": [[37, "id9"]], "\u663e\u793a\u5df2\u8fc1\u79fb\u7684\u5934(header)": [[37, "header"]], "\u66f4\u65b0\u6a21\u578b\u5e76\u751f\u6210\u8fc1\u79fb\u6587\u4ef6": [[37, "id6"]], "\u679a\u4e3e\u5b57\u6bb5(Enumeration Fields)": [[21, "enumeration-fields"]], "\u67e5\u8be2API": [[39, null]], "\u6821\u9a8c": [[49, null]], "\u6837\u4f8b": [[19, null]], "\u6837\u5f0f": [[2, "id8"]], "\u6a21\u578b": [[38, null]], "\u6a21\u578b\u4fe1\u53f7(Model Signals)": [[21, "model-signals"]], "\u6a21\u578b\u7c7b": [[13, "id8"]], "\u6d4b\u8bd5\u7684\u4e0d\u540c\u79cd\u7c7b": [[2, "id10"]], "\u6d4b\u8bd5\u8fd0\u884c\u5668": [[17, "id3"]], "\u6e05\u7406\u7684\u91cd\u8981\u6027": [[44, "cleaningup"]], "\u7279\u522b\u611f\u8c22": [[3, "id3"]], "\u7528\u6cd5": [[4, "id3"], [10, "id2"], [14, "id1"], [17, "id2"], [30, "id2"], [34, "id2"], [36, "id2"], [37, "id4"], [42, "id2"], [49, "id2"]], "\u76ee\u5f55": [[47, null]], "\u77ed\u671f\u8ba1\u5212": [[41, "id2"]], "\u7b80\u5355\u6837\u4f8b": [[21, null]], "\u7d22\u5f15": [[11, "id1"], [12, "id1"], [34, null]], "\u7ee7\u627f": [[38, "id5"]], "\u7eff\u8272": [[17, "id4"]], "\u7f16\u7801\u6307\u5357": [[2, "id6"]], "\u804a\u5929": [[2, "id3"]], "\u805a\u5408": [[31, "id3"]], "\u81ea\u5b9a\u4e49\u51fd\u6570": [[31, "id5"]], "\u81ea\u5b9a\u4e49\u6821\u9a8c\u5668": [[49, "id4"]], "\u83b7\u53d6\u5916\u952e\u5bf9\u8c61": [[38, "id16"]], "\u8868\u8fbe\u5f0f": [[29, null]], "\u8d21\u732e\u5217\u8868": [[3, "id2"]], "\u8d21\u732e\u6307\u5357": [[2, null]], "\u8def\u7531": [[42, null]], "\u8def\u7531(Router)": [[21, "router"]], "\u8def\u7ebf\u56fe": [[41, null]], "\u8fc1\u79fb": [[37, null]], "\u8fc7\u6ee4": [[39, "filtering-queries"]], "\u8fc7\u6ee4(Filtering)": [[21, "filtering"]], "\u8fd0\u884c\u6d4b\u8bd5": [[2, "id9"]], "\u8fd0\u884c\u6d4b\u8bd5\u5957\u4ef6\u65f6\u9700\u8981\u6ce8\u610f\u7684\u4e8b\u9879": [[2, "id11"]], "\u8fde\u63a5": [[5, null]], "\u9012\u5f52\u5173\u7cfb(Recursive Relations)": [[21, "recursive-relations"]], "\u9012\u5f52\u6a21\u578b + \u8ba1\u7b97\u5b57\u6bb5": [[24, "example-pydantic-recursive"]], "\u914d\u7f6e\u8def\u7531": [[42, "id4"]], "\u957f\u671f\u8ba1\u5212": [[41, "id4"]], "\u964d\u7ea7\u5230\u6307\u5b9a\u7248\u672c": [[37, "id8"]], "\u96c6\u6210/\u63d2\u4ef6": [[6, null]], "\u9879\u76ee\u7ed3\u6784": [[2, "id5"]], "\u9884\u53d6(Prefetching)": [[21, "prefetching"]]}, "docurls": ["CHANGELOG.html", "CODE_OF_CONDUCT.html", "CONTRIBUTING.html", "CONTRIBUTORS.html", "cli.html", "connections.html", "contrib.html", "contrib/aiohttp.html", "contrib/blacksheep.html", "contrib/fastapi.html", "contrib/linters.html", "contrib/mysql.html", "contrib/postgres.html", "contrib/pydantic.html", "contrib/quart.html", "contrib/sanic.html", "contrib/starlette.html", "contrib/unittest.html", "databases.html", "examples.html", "examples/aiohttp.html", "examples/basic.html", "examples/blacksheep.html", "examples/fastapi.html", "examples/pydantic.html", "examples/quart.html", "examples/sanic.html", "examples/starlette.html", "exceptions.html", "expressions.html", "fields.html", "functions.html", "getting_started.html", "index.html", "indexes.html", "logging.html", "manager.html", "migration.html", "models.html", "query.html", "reference.html", "roadmap.html", "router.html", "schema.html", "setup.html", "signals.html", "timezone.html", "toc.html", "transactions.html", "validators.html"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "indexentries": {"__and__() (tortoise.expressions.q method)": [[29, "tortoise.expressions.Q.__and__", false]], "__call__() (tortoise.validators.validator method)": [[49, "tortoise.validators.Validator.__call__", false]], "__class_getitem__() (tortoise.fields.relational.manytomanyrelation class method)": [[39, "id57", false], [39, "tortoise.fields.relational.ManyToManyRelation.__class_getitem__", false]], "__class_getitem__() (tortoise.queryset.queryset class method)": [[39, "id4", false], [39, "tortoise.queryset.QuerySet.__class_getitem__", false]], "__getitem__() (tortoise.queryset.queryset method)": [[39, "id5", false], [39, "tortoise.queryset.QuerySet.__getitem__", false]], "__invert__() (tortoise.expressions.q method)": [[29, "tortoise.expressions.Q.__invert__", false]], "__or__() (tortoise.expressions.q method)": [[29, "tortoise.expressions.Q.__or__", false]], "abstract (tortoise.models.model.meta attribute)": [[38, "id6", false], [38, "tortoise.models.Model.Meta.abstract", false]], "acquire_connection() (tortoise.backends.base.client.basedbasyncclient method)": [[18, "tortoise.backends.base.client.BaseDBAsyncClient.acquire_connection", false]], "acquire_connection() (tortoise.basedbasyncclient method)": [[44, "tortoise.BaseDBAsyncClient.acquire_connection", false]], "add() (tortoise.fields.relational.manytomanyrelation method)": [[39, "id58", false], [39, "tortoise.fields.relational.ManyToManyRelation.add", false]], "aggregate (class in tortoise.functions)": [[31, "tortoise.functions.Aggregate", false]], "all() (tortoise.connection.connectionhandler method)": [[5, "tortoise.connection.ConnectionHandler.all", false]], "all() (tortoise.fields.relational.manytomanyrelation method)": [[39, "id59", false], [39, "tortoise.fields.relational.ManyToManyRelation.all", false]], "all() (tortoise.fields.relational.reverserelation method)": [[39, "tortoise.fields.relational.ReverseRelation.all", false]], "all() (tortoise.model class method)": [[44, "tortoise.Model.all", false]], "all() (tortoise.models.model class method)": [[38, "tortoise.models.Model.all", false]], "all() (tortoise.queryset.queryset method)": [[39, "id6", false], [39, "tortoise.queryset.QuerySet.all", false]], "allow_cycles (tortoise.contrib.pydantic.creator.pydanticmeta attribute)": [[13, "tortoise.contrib.pydantic.creator.PydanticMeta.allow_cycles", false]], "allows_generated (tortoise.fields.base.field attribute)": [[30, "tortoise.fields.base.Field.allows_generated", false]], "and (tortoise.expressions.q attribute)": [[29, "tortoise.expressions.Q.AND", false]], "annotate() (tortoise.model class method)": [[44, "tortoise.Model.annotate", false]], "annotate() (tortoise.models.model class method)": [[38, "tortoise.models.Model.annotate", false]], "annotate() (tortoise.queryset.queryset method)": [[39, "id7", false], [39, "tortoise.queryset.QuerySet.annotate", false]], "apps (tortoise.tortoise attribute)": [[44, "tortoise.Tortoise.apps", false]], "arrayfield (class in tortoise.contrib.postgres.fields)": [[12, "tortoise.contrib.postgres.fields.ArrayField", false]], "as_query() (tortoise.queryset.queryset method)": [[39, "id8", false], [39, "tortoise.queryset.QuerySet.as_query", false]], "assertlistsortequal() (tortoise.contrib.test.simpletestcase method)": [[17, "tortoise.contrib.test.SimpleTestCase.assertListSortEqual", false]], "asyncsetup() (tortoise.contrib.test.simpletestcase method)": [[17, "tortoise.contrib.test.SimpleTestCase.asyncSetUp", false]], "asyncsetup() (tortoise.contrib.test.testcase method)": [[17, "tortoise.contrib.test.TestCase.asyncSetUp", false]], "asyncteardown() (tortoise.contrib.test.simpletestcase method)": [[17, "tortoise.contrib.test.SimpleTestCase.asyncTearDown", false]], "asyncteardown() (tortoise.contrib.test.testcase method)": [[17, "tortoise.contrib.test.TestCase.asyncTearDown", false]], "atomic() (in module tortoise.transactions)": [[48, "tortoise.transactions.atomic", false]], "avg (class in tortoise.functions)": [[31, "tortoise.functions.Avg", false]], "backward_relations (tortoise.contrib.pydantic.creator.pydanticmeta attribute)": [[13, "tortoise.contrib.pydantic.creator.PydanticMeta.backward_relations", false]], "basedbasyncclient (class in tortoise)": [[44, "tortoise.BaseDBAsyncClient", false]], "basedbasyncclient (class in tortoise.backends.base.client)": [[18, "tortoise.backends.base.client.BaseDBAsyncClient", false]], "baseormexception": [[28, "tortoise.exceptions.BaseORMException", false]], "bigintfield (class in tortoise.fields.data)": [[30, "tortoise.fields.data.BigIntField", false]], "binaryfield (class in tortoise.fields.data)": [[30, "tortoise.fields.data.BinaryField", false]], "bloomindex (class in tortoise.contrib.postgres.indexes)": [[12, "tortoise.contrib.postgres.indexes.BloomIndex", false]], "booleanfield (class in tortoise.fields.data)": [[30, "tortoise.fields.data.BooleanField", false]], "brinindex (class in tortoise.contrib.postgres.indexes)": [[12, "tortoise.contrib.postgres.indexes.BrinIndex", false]], "bulk_create() (tortoise.model class method)": [[44, "tortoise.Model.bulk_create", false]], "bulk_create() (tortoise.models.model class method)": [[38, "tortoise.models.Model.bulk_create", false]], "bulk_create() (tortoise.queryset.queryset method)": [[39, "id9", false], [39, "tortoise.queryset.QuerySet.bulk_create", false]], "bulk_update() (tortoise.model class method)": [[44, "tortoise.Model.bulk_update", false]], "bulk_update() (tortoise.models.model class method)": [[38, "tortoise.models.Model.bulk_update", false]], "bulk_update() (tortoise.queryset.queryset method)": [[39, "id10", false], [39, "tortoise.queryset.QuerySet.bulk_update", false]], "bulkcreatequery (class in tortoise.queryset)": [[39, "id40", false], [39, "tortoise.queryset.BulkCreateQuery", false]], "bulkupdatequery (class in tortoise.queryset)": [[39, "id42", false], [39, "tortoise.queryset.BulkUpdateQuery", false]], "capabilities (class in tortoise.backends.base.client)": [[18, "tortoise.backends.base.client.Capabilities", false]], "capabilities (tortoise.backends.base.client.basedbasyncclient attribute)": [[18, "tortoise.backends.base.client.BaseDBAsyncClient.capabilities", false]], "capabilities (tortoise.basedbasyncclient attribute)": [[44, "id0", false], [44, "tortoise.BaseDBAsyncClient.capabilities", false]], "cascade (tortoise.fields.base.ondelete attribute)": [[30, "tortoise.fields.base.OnDelete.CASCADE", false]], "case (class in tortoise.expressions)": [[29, "tortoise.expressions.Case", false]], "charenumfield() (in module tortoise.fields.data)": [[30, "tortoise.fields.data.CharEnumField", false]], "charfield (class in tortoise.fields.data)": [[30, "tortoise.fields.data.CharField", false]], "children (tortoise.expressions.q attribute)": [[29, "tortoise.expressions.Q.children", false]], "clear() (tortoise.fields.relational.manytomanyrelation method)": [[39, "id60", false], [39, "tortoise.fields.relational.ManyToManyRelation.clear", false]], "clone() (tortoise.model method)": [[44, "tortoise.Model.clone", false]], "clone() (tortoise.models.model method)": [[38, "tortoise.models.Model.clone", false]], "close() (tortoise.backends.base.client.basedbasyncclient method)": [[18, "tortoise.backends.base.client.BaseDBAsyncClient.close", false]], "close() (tortoise.basedbasyncclient method)": [[44, "tortoise.BaseDBAsyncClient.close", false]], "close_all() (tortoise.connection.connectionhandler method)": [[5, "tortoise.connection.ConnectionHandler.close_all", false]], "close_connections() (tortoise.tortoise class method)": [[44, "tortoise.Tortoise.close_connections", false]], "close_orm() (tortoise.contrib.fastapi.registertortoise static method)": [[9, "tortoise.contrib.fastapi.RegisterTortoise.close_orm", false]], "coalesce (class in tortoise.functions)": [[31, "tortoise.functions.Coalesce", false]], "commaseparatedintegerlistvalidator (class in tortoise.validators)": [[49, "tortoise.validators.CommaSeparatedIntegerListValidator", false]], "computed (tortoise.contrib.pydantic.creator.pydanticmeta attribute)": [[13, "tortoise.contrib.pydantic.creator.PydanticMeta.computed", false]], "concat (class in tortoise.functions)": [[31, "tortoise.functions.Concat", false]], "configurationerror": [[28, "tortoise.exceptions.ConfigurationError", false]], "connectionhandler (class in tortoise.connection)": [[5, "tortoise.connection.ConnectionHandler", false]], "constraints (tortoise.fields.base.field property)": [[30, "tortoise.fields.base.Field.constraints", false]], "constraints (tortoise.fields.data.bigintfield property)": [[30, "tortoise.fields.data.BigIntField.constraints", false]], "constraints (tortoise.fields.data.charfield property)": [[30, "tortoise.fields.data.CharField.constraints", false]], "constraints (tortoise.fields.data.datetimefield property)": [[30, "tortoise.fields.data.DatetimeField.constraints", false]], "constraints (tortoise.fields.data.intfield property)": [[30, "tortoise.fields.data.IntField.constraints", false]], "constraints (tortoise.fields.data.smallintfield property)": [[30, "tortoise.fields.data.SmallIntField.constraints", false]], "count (class in tortoise.functions)": [[31, "tortoise.functions.Count", false]], "count() (tortoise.queryset.queryset method)": [[39, "id11", false], [39, "tortoise.queryset.QuerySet.count", false]], "countquery (class in tortoise.queryset)": [[39, "id44", false], [39, "tortoise.queryset.CountQuery", false]], "create() (tortoise.model class method)": [[44, "tortoise.Model.create", false]], "create() (tortoise.models.model class method)": [[38, "tortoise.models.Model.create", false]], "create_connection() (tortoise.backends.base.client.basedbasyncclient method)": [[18, "tortoise.backends.base.client.BaseDBAsyncClient.create_connection", false]], "create_connection() (tortoise.basedbasyncclient method)": [[44, "tortoise.BaseDBAsyncClient.create_connection", false]], "database_func (tortoise.functions.function attribute)": [[31, "tortoise.functions.Function.database_func", false]], "datefield (class in tortoise.fields.data)": [[30, "tortoise.fields.data.DateField", false]], "datetimefield (class in tortoise.fields.data)": [[30, "tortoise.fields.data.DatetimeField", false]], "db_config (tortoise.connection.connectionhandler property)": [[5, "tortoise.connection.ConnectionHandler.db_config", false]], "db_create() (tortoise.backends.base.client.basedbasyncclient method)": [[18, "tortoise.backends.base.client.BaseDBAsyncClient.db_create", false]], "db_create() (tortoise.basedbasyncclient method)": [[44, "tortoise.BaseDBAsyncClient.db_create", false]], "db_delete() (tortoise.backends.base.client.basedbasyncclient method)": [[18, "tortoise.backends.base.client.BaseDBAsyncClient.db_delete", false]], "db_delete() (tortoise.basedbasyncclient method)": [[44, "tortoise.BaseDBAsyncClient.db_delete", false]], "dbconnectionerror": [[28, "tortoise.exceptions.DBConnectionError", false]], "decimalfield (class in tortoise.fields.data)": [[30, "tortoise.fields.data.DecimalField", false]], "delete() (tortoise.model method)": [[44, "tortoise.Model.delete", false]], "delete() (tortoise.models.model method)": [[38, "tortoise.models.Model.delete", false]], "delete() (tortoise.queryset.queryset method)": [[39, "id12", false], [39, "tortoise.queryset.QuerySet.delete", false]], "deletequery (class in tortoise.queryset)": [[39, "id45", false], [39, "tortoise.queryset.DeleteQuery", false]], "describe() (tortoise.fields.base.field method)": [[30, "tortoise.fields.base.Field.describe", false]], "describe() (tortoise.fields.data.datetimefield method)": [[30, "tortoise.fields.data.DatetimeField.describe", false]], "describe() (tortoise.model class method)": [[44, "tortoise.Model.describe", false]], "describe() (tortoise.models.model class method)": [[38, "tortoise.models.Model.describe", false]], "describe_model() (tortoise.tortoise class method)": [[44, "tortoise.Tortoise.describe_model", false]], "describe_models() (tortoise.tortoise class method)": [[44, "tortoise.Tortoise.describe_models", false]], "detail (tortoise.contrib.fastapi.httpnotfounderror attribute)": [[9, "tortoise.contrib.fastapi.HTTPNotFoundError.detail", false]], "discard() (tortoise.connection.connectionhandler method)": [[5, "tortoise.connection.ConnectionHandler.discard", false]], "distinct() (tortoise.queryset.queryset method)": [[39, "id13", false], [39, "tortoise.queryset.QuerySet.distinct", false]], "doesnotexist": [[28, "tortoise.exceptions.DoesNotExist", false]], "env_initializer() (in module tortoise.contrib.test)": [[17, "tortoise.contrib.test.env_initializer", false]], "exclude (tortoise.contrib.pydantic.creator.pydanticmeta attribute)": [[13, "tortoise.contrib.pydantic.creator.PydanticMeta.exclude", false]], "exclude() (tortoise.model class method)": [[44, "tortoise.Model.exclude", false]], "exclude() (tortoise.models.model class method)": [[38, "tortoise.models.Model.exclude", false]], "exclude() (tortoise.queryset.queryset method)": [[39, "id14", false], [39, "tortoise.queryset.QuerySet.exclude", false]], "exclude_raw_fields (tortoise.contrib.pydantic.creator.pydanticmeta attribute)": [[13, "tortoise.contrib.pydantic.creator.PydanticMeta.exclude_raw_fields", false]], "execute_insert() (tortoise.backends.base.client.basedbasyncclient method)": [[18, "tortoise.backends.base.client.BaseDBAsyncClient.execute_insert", false]], "execute_insert() (tortoise.basedbasyncclient method)": [[44, "tortoise.BaseDBAsyncClient.execute_insert", false]], "execute_many() (tortoise.backends.base.client.basedbasyncclient method)": [[18, "tortoise.backends.base.client.BaseDBAsyncClient.execute_many", false]], "execute_many() (tortoise.basedbasyncclient method)": [[44, "tortoise.BaseDBAsyncClient.execute_many", false]], "execute_query() (tortoise.backends.base.client.basedbasyncclient method)": [[18, "tortoise.backends.base.client.BaseDBAsyncClient.execute_query", false]], "execute_query() (tortoise.basedbasyncclient method)": [[44, "tortoise.BaseDBAsyncClient.execute_query", false]], "execute_query_dict() (tortoise.backends.base.client.basedbasyncclient method)": [[18, "tortoise.backends.base.client.BaseDBAsyncClient.execute_query_dict", false]], "execute_query_dict() (tortoise.basedbasyncclient method)": [[44, "tortoise.BaseDBAsyncClient.execute_query_dict", false]], "execute_script() (tortoise.backends.base.client.basedbasyncclient method)": [[18, "tortoise.backends.base.client.BaseDBAsyncClient.execute_script", false]], "execute_script() (tortoise.basedbasyncclient method)": [[44, "tortoise.BaseDBAsyncClient.execute_script", false]], "executor_class (tortoise.backends.base.client.basedbasyncclient attribute)": [[18, "tortoise.backends.base.client.BaseDBAsyncClient.executor_class", false]], "executor_class (tortoise.basedbasyncclient attribute)": [[44, "id4", false], [44, "tortoise.BaseDBAsyncClient.executor_class", false]], "exists() (tortoise.model class method)": [[44, "tortoise.Model.exists", false]], "exists() (tortoise.models.model class method)": [[38, "tortoise.models.Model.exists", false]], "exists() (tortoise.queryset.queryset method)": [[39, "id15", false], [39, "tortoise.queryset.QuerySet.exists", false]], "existsquery (class in tortoise.queryset)": [[39, "id46", false], [39, "tortoise.queryset.ExistsQuery", false]], "expectedfailure() (in module tortoise.contrib.test)": [[17, "tortoise.contrib.test.expectedFailure", false]], "explain() (tortoise.queryset.queryset method)": [[39, "id16", false], [39, "tortoise.queryset.QuerySet.explain", false]], "fetch_for_list() (tortoise.model class method)": [[44, "tortoise.Model.fetch_for_list", false]], "fetch_for_list() (tortoise.models.model class method)": [[38, "tortoise.models.Model.fetch_for_list", false]], "fetch_related() (tortoise.model method)": [[44, "tortoise.Model.fetch_related", false]], "fetch_related() (tortoise.models.model method)": [[38, "tortoise.models.Model.fetch_related", false]], "field (class in tortoise.fields.base)": [[30, "tortoise.fields.base.Field", false]], "field_type (tortoise.fields.base.field attribute)": [[30, "tortoise.fields.base.Field.field_type", false]], "field_type (tortoise.fields.data.binaryfield attribute)": [[30, "tortoise.fields.data.BinaryField.field_type", false]], "field_type (tortoise.fields.data.booleanfield attribute)": [[30, "tortoise.fields.data.BooleanField.field_type", false]], "field_type (tortoise.fields.data.charfield attribute)": [[30, "tortoise.fields.data.CharField.field_type", false]], "field_type (tortoise.fields.data.datefield attribute)": [[30, "tortoise.fields.data.DateField.field_type", false]], "field_type (tortoise.fields.data.datetimefield attribute)": [[30, "tortoise.fields.data.DatetimeField.field_type", false]], "field_type (tortoise.fields.data.decimalfield attribute)": [[30, "tortoise.fields.data.DecimalField.field_type", false]], "field_type (tortoise.fields.data.floatfield attribute)": [[30, "tortoise.fields.data.FloatField.field_type", false]], "field_type (tortoise.fields.data.intfield attribute)": [[30, "tortoise.fields.data.IntField.field_type", false]], "field_type (tortoise.fields.data.textfield attribute)": [[30, "tortoise.fields.data.TextField.field_type", false]], "field_type (tortoise.fields.data.timedeltafield attribute)": [[30, "tortoise.fields.data.TimeDeltaField.field_type", false]], "field_type (tortoise.fields.data.uuidfield attribute)": [[30, "tortoise.fields.data.UUIDField.field_type", false]], "fielderror": [[28, "tortoise.exceptions.FieldError", false]], "fieldselectquery (class in tortoise.queryset)": [[39, "id47", false], [39, "tortoise.queryset.FieldSelectQuery", false]], "filter() (tortoise.fields.relational.manytomanyrelation method)": [[39, "id61", false], [39, "tortoise.fields.relational.ManyToManyRelation.filter", false]], "filter() (tortoise.fields.relational.reverserelation method)": [[39, "tortoise.fields.relational.ReverseRelation.filter", false]], "filter() (tortoise.model class method)": [[44, "tortoise.Model.filter", false]], "filter() (tortoise.models.model class method)": [[38, "tortoise.models.Model.filter", false]], "filter() (tortoise.queryset.queryset method)": [[39, "id17", false], [39, "tortoise.queryset.QuerySet.filter", false]], "filters (tortoise.expressions.q attribute)": [[29, "tortoise.expressions.Q.filters", false]], "finalizer() (in module tortoise.contrib.test)": [[17, "tortoise.contrib.test.finalizer", false]], "first() (tortoise.model class method)": [[44, "tortoise.Model.first", false]], "first() (tortoise.models.model class method)": [[38, "tortoise.models.Model.first", false]], "first() (tortoise.queryset.queryset method)": [[39, "id18", false], [39, "tortoise.queryset.QuerySet.first", false]], "floatfield (class in tortoise.fields.data)": [[30, "tortoise.fields.data.FloatField", false]], "force_index() (tortoise.queryset.queryset method)": [[39, "id19", false], [39, "tortoise.queryset.QuerySet.force_index", false]], "foreignkeyfield() (in module tortoise.fields.relational)": [[30, "tortoise.fields.relational.ForeignKeyField", false]], "foreignkeynullablerelation (in module tortoise.fields.relational)": [[39, "tortoise.fields.relational.ForeignKeyNullableRelation", false]], "foreignkeyrelation (in module tortoise.fields.relational)": [[39, "tortoise.fields.relational.ForeignKeyRelation", false]], "from_queryset() (tortoise.contrib.pydantic.base.pydanticlistmodel class method)": [[13, "tortoise.contrib.pydantic.base.PydanticListModel.from_queryset", false]], "from_queryset() (tortoise.contrib.pydantic.base.pydanticmodel class method)": [[13, "tortoise.contrib.pydantic.base.PydanticModel.from_queryset", false]], "from_queryset_single() (tortoise.contrib.pydantic.base.pydanticmodel class method)": [[13, "tortoise.contrib.pydantic.base.PydanticModel.from_queryset_single", false]], "from_tortoise_orm() (tortoise.contrib.pydantic.base.pydanticmodel class method)": [[13, "tortoise.contrib.pydantic.base.PydanticModel.from_tortoise_orm", false]], "fulltextindex (class in tortoise.contrib.mysql.indexes)": [[11, "tortoise.contrib.mysql.indexes.FullTextIndex", false]], "function (class in tortoise.functions)": [[31, "tortoise.functions.Function", false]], "function_cast (tortoise.fields.base.field attribute)": [[30, "tortoise.fields.base.Field.function_cast", false]], "generate_schema_for_client() (in module tortoise.utils)": [[43, "tortoise.utils.generate_schema_for_client", false]], "generate_schemas() (tortoise.tortoise class method)": [[44, "tortoise.Tortoise.generate_schemas", false]], "generated_sql (tortoise.fields.base.field attribute)": [[30, "tortoise.fields.base.Field.GENERATED_SQL", false]], "geometryfield (class in tortoise.contrib.mysql.fields)": [[11, "tortoise.contrib.mysql.fields.GeometryField", false], [30, "tortoise.contrib.mysql.fields.GeometryField", false]], "get() (tortoise.connection.connectionhandler method)": [[5, "tortoise.connection.ConnectionHandler.get", false]], "get() (tortoise.model class method)": [[44, "tortoise.Model.get", false]], "get() (tortoise.models.model class method)": [[38, "tortoise.models.Model.get", false]], "get() (tortoise.queryset.queryset method)": [[39, "id20", false], [39, "tortoise.queryset.QuerySet.get", false]], "get_connection() (tortoise.tortoise class method)": [[44, "tortoise.Tortoise.get_connection", false]], "get_db_field_types() (tortoise.fields.base.field method)": [[30, "tortoise.fields.base.Field.get_db_field_types", false]], "get_default_timezone() (in module tortoise.timezone)": [[46, "tortoise.timezone.get_default_timezone", false]], "get_for_dialect() (tortoise.fields.base.field method)": [[30, "tortoise.fields.base.Field.get_for_dialect", false]], "get_or_create() (tortoise.model class method)": [[44, "tortoise.Model.get_or_create", false]], "get_or_create() (tortoise.models.model class method)": [[38, "tortoise.models.Model.get_or_create", false]], "get_or_none() (tortoise.model class method)": [[44, "tortoise.Model.get_or_none", false]], "get_or_none() (tortoise.models.model class method)": [[38, "tortoise.models.Model.get_or_none", false]], "get_or_none() (tortoise.queryset.queryset method)": [[39, "id21", false], [39, "tortoise.queryset.QuerySet.get_or_none", false]], "get_schema_sql() (in module tortoise.utils)": [[43, "tortoise.utils.get_schema_sql", false]], "get_timezone() (in module tortoise.timezone)": [[46, "tortoise.timezone.get_timezone", false]], "get_use_tz() (in module tortoise.timezone)": [[46, "tortoise.timezone.get_use_tz", false]], "getdbconfig() (in module tortoise.contrib.test)": [[17, "tortoise.contrib.test.getDBConfig", false]], "ginindex (class in tortoise.contrib.postgres.indexes)": [[12, "tortoise.contrib.postgres.indexes.GinIndex", false]], "gistindex (class in tortoise.contrib.postgres.indexes)": [[12, "tortoise.contrib.postgres.indexes.GistIndex", false]], "group_by() (tortoise.queryset.queryset method)": [[39, "id22", false], [39, "tortoise.queryset.QuerySet.group_by", false]], "has_db_field (tortoise.fields.base.field attribute)": [[30, "tortoise.fields.base.Field.has_db_field", false]], "hashindex (class in tortoise.contrib.postgres.indexes)": [[12, "tortoise.contrib.postgres.indexes.HashIndex", false]], "httpnotfounderror (class in tortoise.contrib.fastapi)": [[9, "tortoise.contrib.fastapi.HTTPNotFoundError", false]], "in_bulk() (tortoise.model class method)": [[44, "tortoise.Model.in_bulk", false]], "in_bulk() (tortoise.models.model class method)": [[38, "tortoise.models.Model.in_bulk", false]], "in_bulk() (tortoise.queryset.queryset method)": [[39, "id23", false], [39, "tortoise.queryset.QuerySet.in_bulk", false]], "in_transaction() (in module tortoise.transactions)": [[48, "tortoise.transactions.in_transaction", false]], "include (tortoise.contrib.pydantic.creator.pydanticmeta attribute)": [[13, "tortoise.contrib.pydantic.creator.PydanticMeta.include", false]], "incompleteinstanceerror": [[28, "tortoise.exceptions.IncompleteInstanceError", false]], "indexable (tortoise.fields.base.field attribute)": [[30, "tortoise.fields.base.Field.indexable", false]], "indexes (tortoise.models.model.meta attribute)": [[38, "id11", false], [38, "tortoise.models.Model.Meta.indexes", false]], "init() (tortoise.tortoise class method)": [[44, "tortoise.Tortoise.init", false]], "init_memory_sqlite() (in module tortoise.contrib.test)": [[17, "tortoise.contrib.test.init_memory_sqlite", false]], "init_models() (tortoise.tortoise class method)": [[44, "tortoise.Tortoise.init_models", false]], "init_orm() (tortoise.contrib.fastapi.registertortoise method)": [[9, "tortoise.contrib.fastapi.RegisterTortoise.init_orm", false]], "initializer() (in module tortoise.contrib.test)": [[17, "tortoise.contrib.test.initializer", false]], "integrityerror": [[28, "tortoise.exceptions.IntegrityError", false]], "intenumfield() (in module tortoise.fields.data)": [[30, "tortoise.fields.data.IntEnumField", false]], "intfield (class in tortoise.fields.data)": [[30, "tortoise.fields.data.IntField", false]], "is_aware() (in module tortoise.timezone)": [[46, "tortoise.timezone.is_aware", false]], "is_naive() (in module tortoise.timezone)": [[46, "tortoise.timezone.is_naive", false]], "isolatedtestcase (class in tortoise.contrib.test)": [[17, "tortoise.contrib.test.IsolatedTestCase", false]], "join_type (tortoise.expressions.q attribute)": [[29, "tortoise.expressions.Q.join_type", false]], "jsonfield (class in tortoise.fields.data)": [[30, "tortoise.fields.data.JSONField", false]], "length (class in tortoise.functions)": [[31, "tortoise.functions.Length", false]], "limit() (tortoise.fields.relational.manytomanyrelation method)": [[39, "id62", false], [39, "tortoise.fields.relational.ManyToManyRelation.limit", false]], "limit() (tortoise.fields.relational.reverserelation method)": [[39, "tortoise.fields.relational.ReverseRelation.limit", false]], "limit() (tortoise.queryset.queryset method)": [[39, "id24", false], [39, "tortoise.queryset.QuerySet.limit", false]], "localtime() (in module tortoise.timezone)": [[46, "tortoise.timezone.localtime", false]], "lower (class in tortoise.functions)": [[31, "tortoise.functions.Lower", false]], "make_aware() (in module tortoise.timezone)": [[46, "tortoise.timezone.make_aware", false]], "make_naive() (in module tortoise.timezone)": [[46, "tortoise.timezone.make_naive", false]], "manager (tortoise.models.model.meta attribute)": [[38, "id13", false], [38, "tortoise.models.Model.Meta.manager", false]], "manytomanyfield() (in module tortoise.fields.relational)": [[30, "tortoise.fields.relational.ManyToManyField", false]], "manytomanyrelation (class in tortoise.fields.relational)": [[39, "id56", false], [39, "tortoise.fields.relational.ManyToManyRelation", false]], "max (class in tortoise.functions)": [[31, "tortoise.functions.Max", false]], "max_recursion (tortoise.contrib.pydantic.creator.pydanticmeta attribute)": [[13, "tortoise.contrib.pydantic.creator.PydanticMeta.max_recursion", false]], "maxlengthvalidator (class in tortoise.validators)": [[49, "tortoise.validators.MaxLengthValidator", false]], "maxvaluevalidator (class in tortoise.validators)": [[49, "tortoise.validators.MaxValueValidator", false]], "meta (class in tortoise.models.model)": [[38, "id0", false], [38, "tortoise.models.Model.Meta", false]], "min (class in tortoise.functions)": [[31, "tortoise.functions.Min", false]], "minlengthvalidator (class in tortoise.validators)": [[49, "tortoise.validators.MinLengthValidator", false]], "minvaluevalidator (class in tortoise.validators)": [[49, "tortoise.validators.MinValueValidator", false]], "model (class in tortoise)": [[44, "tortoise.Model", false]], "model (class in tortoise.models)": [[38, "tortoise.models.Model", false]], "model.meta (class in tortoise)": [[44, "tortoise.Model.Meta", false]], "model.meta (class in tortoise.models)": [[38, "id20", false]], "model_computed_fields (tortoise.contrib.fastapi.httpnotfounderror attribute)": [[9, "tortoise.contrib.fastapi.HTTPNotFoundError.model_computed_fields", false]], "model_computed_fields (tortoise.contrib.pydantic.base.pydanticlistmodel attribute)": [[13, "tortoise.contrib.pydantic.base.PydanticListModel.model_computed_fields", false]], "model_computed_fields (tortoise.contrib.pydantic.base.pydanticmodel attribute)": [[13, "tortoise.contrib.pydantic.base.PydanticModel.model_computed_fields", false]], "model_config (tortoise.contrib.fastapi.httpnotfounderror attribute)": [[9, "tortoise.contrib.fastapi.HTTPNotFoundError.model_config", false]], "model_config (tortoise.contrib.pydantic.base.pydanticlistmodel attribute)": [[13, "tortoise.contrib.pydantic.base.PydanticListModel.model_config", false]], "model_config (tortoise.contrib.pydantic.base.pydanticmodel attribute)": [[13, "tortoise.contrib.pydantic.base.PydanticModel.model_config", false]], "model_config (tortoise.contrib.pydantic.creator.pydanticmeta attribute)": [[13, "tortoise.contrib.pydantic.creator.PydanticMeta.model_config", false]], "model_fields (tortoise.contrib.fastapi.httpnotfounderror attribute)": [[9, "tortoise.contrib.fastapi.HTTPNotFoundError.model_fields", false]], "model_fields (tortoise.contrib.pydantic.base.pydanticlistmodel attribute)": [[13, "tortoise.contrib.pydantic.base.PydanticListModel.model_fields", false]], "model_fields (tortoise.contrib.pydantic.base.pydanticmodel attribute)": [[13, "tortoise.contrib.pydantic.base.PydanticModel.model_fields", false]], "module": [[5, "module-tortoise.connection", false], [7, "module-tortoise.contrib.aiohttp", false], [8, "module-tortoise.contrib.blacksheep", false], [9, "module-tortoise.contrib.fastapi", false], [13, "module-tortoise.contrib.pydantic.base", false], [13, "module-tortoise.contrib.pydantic.creator", false], [14, "module-tortoise.contrib.quart", false], [15, "module-tortoise.contrib.sanic", false], [16, "module-tortoise.contrib.starlette", false], [17, "module-tortoise.contrib.test", false], [18, "module-tortoise.backends.base.client", false], [28, "module-tortoise.exceptions", false], [29, "module-tortoise.expressions", false], [30, "module-tortoise.contrib.mysql.fields", false], [30, "module-tortoise.contrib.postgres.fields", false], [30, "module-tortoise.fields.base", false], [30, "module-tortoise.fields.data", false], [30, "module-tortoise.fields.relational", false], [31, "module-tortoise.functions", false], [38, "module-tortoise.models", false], [39, "module-0", false], [39, "module-tortoise.queryset", false], [43, "module-tortoise.utils", false], [44, "module-tortoise", false], [45, "module-tortoise.signals", false], [46, "module-tortoise.timezone", false], [48, "module-tortoise.transactions", false], [49, "module-tortoise.validators", false]], "multipleobjectsreturned": [[28, "tortoise.exceptions.MultipleObjectsReturned", false]], "negate() (tortoise.expressions.q method)": [[29, "tortoise.expressions.Q.negate", false]], "no_action (tortoise.fields.base.ondelete attribute)": [[30, "tortoise.fields.base.OnDelete.NO_ACTION", false]], "notexistormultiple": [[28, "tortoise.exceptions.NotExistOrMultiple", false]], "novaluesfetched": [[28, "tortoise.exceptions.NoValuesFetched", false]], "now() (in module tortoise.timezone)": [[46, "tortoise.timezone.now", false]], "objectdoesnotexisterror": [[28, "tortoise.exceptions.ObjectDoesNotExistError", false]], "offset() (tortoise.fields.relational.manytomanyrelation method)": [[39, "id63", false], [39, "tortoise.fields.relational.ManyToManyRelation.offset", false]], "offset() (tortoise.fields.relational.reverserelation method)": [[39, "tortoise.fields.relational.ReverseRelation.offset", false]], "offset() (tortoise.queryset.queryset method)": [[39, "id25", false], [39, "tortoise.queryset.QuerySet.offset", false]], "ondelete (class in tortoise.fields.base)": [[30, "tortoise.fields.base.OnDelete", false]], "onetoonefield() (in module tortoise.fields.relational)": [[30, "tortoise.fields.relational.OneToOneField", false]], "onetoonenullablerelation (in module tortoise.fields.relational)": [[39, "tortoise.fields.relational.OneToOneNullableRelation", false]], "onetoonerelation (in module tortoise.fields.relational)": [[39, "tortoise.fields.relational.OneToOneRelation", false]], "only() (tortoise.queryset.queryset method)": [[39, "id26", false], [39, "tortoise.queryset.QuerySet.only", false]], "operationalerror": [[28, "tortoise.exceptions.OperationalError", false]], "or (tortoise.expressions.q attribute)": [[29, "tortoise.expressions.Q.OR", false]], "order_by() (tortoise.fields.relational.manytomanyrelation method)": [[39, "id64", false], [39, "tortoise.fields.relational.ManyToManyRelation.order_by", false]], "order_by() (tortoise.fields.relational.reverserelation method)": [[39, "tortoise.fields.relational.ReverseRelation.order_by", false]], "order_by() (tortoise.queryset.queryset method)": [[39, "id27", false], [39, "tortoise.queryset.QuerySet.order_by", false]], "ordering (tortoise.models.model.meta attribute)": [[38, "id12", false], [38, "tortoise.models.Model.Meta.ordering", false]], "paramserror": [[28, "tortoise.exceptions.ParamsError", false]], "pk (tortoise.model property)": [[44, "tortoise.Model.pk", false]], "pk (tortoise.models.model property)": [[38, "tortoise.models.Model.pk", false]], "plaintotsquery (class in tortoise.contrib.postgres.functions)": [[12, "tortoise.contrib.postgres.functions.PlainToTsQuery", false]], "populate_field_object (tortoise.functions.function attribute)": [[31, "tortoise.functions.Function.populate_field_object", false]], "post_delete (tortoise.signals.signals attribute)": [[45, "tortoise.signals.Signals.post_delete", false]], "post_delete() (in module tortoise.signals)": [[45, "tortoise.signals.post_delete", false]], "post_save (tortoise.signals.signals attribute)": [[45, "tortoise.signals.Signals.post_save", false]], "post_save() (in module tortoise.signals)": [[45, "tortoise.signals.post_save", false]], "pre_delete (tortoise.signals.signals attribute)": [[45, "tortoise.signals.Signals.pre_delete", false]], "pre_delete() (in module tortoise.signals)": [[45, "tortoise.signals.pre_delete", false]], "pre_save (tortoise.signals.signals attribute)": [[45, "tortoise.signals.Signals.pre_save", false]], "pre_save() (in module tortoise.signals)": [[45, "tortoise.signals.pre_save", false]], "prefetch (class in tortoise.query_utils)": [[39, "tortoise.query_utils.Prefetch", false]], "prefetch_related() (tortoise.queryset.queryset method)": [[39, "id28", false], [39, "tortoise.queryset.QuerySet.prefetch_related", false]], "pydantic_model_creator() (in module tortoise.contrib.pydantic.creator)": [[13, "tortoise.contrib.pydantic.creator.pydantic_model_creator", false]], "pydantic_queryset_creator() (in module tortoise.contrib.pydantic.creator)": [[13, "tortoise.contrib.pydantic.creator.pydantic_queryset_creator", false]], "pydanticlistmodel (class in tortoise.contrib.pydantic.base)": [[13, "tortoise.contrib.pydantic.base.PydanticListModel", false]], "pydanticmeta (class in tortoise.contrib.pydantic.creator)": [[13, "tortoise.contrib.pydantic.creator.PydanticMeta", false]], "pydanticmodel (class in tortoise.contrib.pydantic.base)": [[13, "tortoise.contrib.pydantic.base.PydanticModel", false]], "q (class in tortoise.expressions)": [[29, "tortoise.expressions.Q", false]], "query_class (tortoise.backends.base.client.basedbasyncclient attribute)": [[18, "tortoise.backends.base.client.BaseDBAsyncClient.query_class", false]], "query_class (tortoise.basedbasyncclient attribute)": [[44, "id5", false], [44, "tortoise.BaseDBAsyncClient.query_class", false]], "queryset (class in tortoise.queryset)": [[39, "id3", false], [39, "tortoise.queryset.QuerySet", false]], "querysetsingle (class in tortoise.queryset)": [[39, "id0", false], [39, "tortoise.queryset.QuerySetSingle", false]], "rand (class in tortoise.contrib.mysql.functions)": [[31, "tortoise.contrib.mysql.functions.Rand", false]], "random (class in tortoise.contrib.postgres.functions)": [[31, "tortoise.contrib.postgres.functions.Random", false]], "random (class in tortoise.contrib.sqlite.functions)": [[31, "tortoise.contrib.sqlite.functions.Random", false]], "raw() (tortoise.model class method)": [[44, "tortoise.Model.raw", false]], "raw() (tortoise.models.model class method)": [[38, "tortoise.models.Model.raw", false]], "raw() (tortoise.queryset.queryset method)": [[39, "id29", false], [39, "tortoise.queryset.QuerySet.raw", false]], "rawsqlquery (class in tortoise.queryset)": [[39, "id48", false], [39, "tortoise.queryset.RawSQLQuery", false]], "refresh_from_db() (tortoise.model method)": [[44, "tortoise.Model.refresh_from_db", false]], "refresh_from_db() (tortoise.models.model method)": [[38, "tortoise.models.Model.refresh_from_db", false]], "regexvalidator (class in tortoise.validators)": [[49, "tortoise.validators.RegexValidator", false]], "register_listener() (tortoise.model class method)": [[44, "tortoise.Model.register_listener", false]], "register_listener() (tortoise.models.model class method)": [[38, "tortoise.models.Model.register_listener", false]], "register_tortoise() (in module tortoise.contrib.aiohttp)": [[7, "tortoise.contrib.aiohttp.register_tortoise", false]], "register_tortoise() (in module tortoise.contrib.blacksheep)": [[8, "tortoise.contrib.blacksheep.register_tortoise", false]], "register_tortoise() (in module tortoise.contrib.fastapi)": [[9, "tortoise.contrib.fastapi.register_tortoise", false]], "register_tortoise() (in module tortoise.contrib.quart)": [[14, "tortoise.contrib.quart.register_tortoise", false]], "register_tortoise() (in module tortoise.contrib.sanic)": [[15, "tortoise.contrib.sanic.register_tortoise", false]], "register_tortoise() (in module tortoise.contrib.starlette)": [[16, "tortoise.contrib.starlette.register_tortoise", false]], "registertortoise (class in tortoise.contrib.fastapi)": [[9, "tortoise.contrib.fastapi.RegisterTortoise", false]], "remove() (tortoise.fields.relational.manytomanyrelation method)": [[39, "id65", false], [39, "tortoise.fields.relational.ManyToManyRelation.remove", false]], "requirecapability() (in module tortoise.contrib.test)": [[17, "tortoise.contrib.test.requireCapability", false]], "required (tortoise.fields.base.field property)": [[30, "tortoise.fields.base.Field.required", false]], "reset() (tortoise.connection.connectionhandler method)": [[5, "tortoise.connection.ConnectionHandler.reset", false]], "resolve() (tortoise.expressions.q method)": [[29, "tortoise.expressions.Q.resolve", false]], "resolve() (tortoise.functions.function method)": [[31, "tortoise.functions.Function.resolve", false]], "resolve_filters() (tortoise.queryset.queryset method)": [[39, "id30", false], [39, "tortoise.queryset.QuerySet.resolve_filters", false]], "resolve_for_queryset() (tortoise.query_utils.prefetch method)": [[39, "tortoise.query_utils.Prefetch.resolve_for_queryset", false]], "resolve_ordering() (tortoise.queryset.queryset method)": [[39, "id31", false], [39, "tortoise.queryset.QuerySet.resolve_ordering", false]], "restrict (tortoise.fields.base.ondelete attribute)": [[30, "tortoise.fields.base.OnDelete.RESTRICT", false]], "reverserelation (class in tortoise.fields.relational)": [[39, "tortoise.fields.relational.ReverseRelation", false]], "save() (tortoise.model method)": [[44, "tortoise.Model.save", false]], "save() (tortoise.models.model method)": [[38, "tortoise.models.Model.save", false]], "schema (tortoise.models.model.meta attribute)": [[38, "id7", false], [38, "tortoise.models.Model.Meta.schema", false]], "schema_generator (tortoise.backends.base.client.basedbasyncclient attribute)": [[18, "tortoise.backends.base.client.BaseDBAsyncClient.schema_generator", false]], "schema_generator (tortoise.basedbasyncclient attribute)": [[44, "id6", false], [44, "tortoise.BaseDBAsyncClient.schema_generator", false]], "searchcriterion (class in tortoise.contrib.mysql.search)": [[11, "tortoise.contrib.mysql.search.SearchCriterion", false]], "searchcriterion (class in tortoise.contrib.postgres.search)": [[12, "tortoise.contrib.postgres.search.SearchCriterion", false]], "select_for_update() (tortoise.model class method)": [[44, "tortoise.Model.select_for_update", false]], "select_for_update() (tortoise.models.model class method)": [[38, "tortoise.models.Model.select_for_update", false]], "select_for_update() (tortoise.queryset.queryset method)": [[39, "id32", false], [39, "tortoise.queryset.QuerySet.select_for_update", false]], "select_related() (tortoise.queryset.queryset method)": [[39, "id33", false], [39, "tortoise.queryset.QuerySet.select_related", false]], "set() (tortoise.connection.connectionhandler method)": [[5, "tortoise.connection.ConnectionHandler.set", false]], "set_default (tortoise.fields.base.ondelete attribute)": [[30, "tortoise.fields.base.OnDelete.SET_DEFAULT", false]], "set_null (tortoise.fields.base.ondelete attribute)": [[30, "tortoise.fields.base.OnDelete.SET_NULL", false]], "signals (class in tortoise.signals)": [[45, "tortoise.signals.Signals", false]], "simpletestcase (class in tortoise.contrib.test)": [[17, "tortoise.contrib.test.SimpleTestCase", false]], "skip() (in module tortoise.contrib.test)": [[17, "tortoise.contrib.test.skip", false]], "skip_to_python_if_native (tortoise.fields.base.field attribute)": [[30, "tortoise.fields.base.Field.skip_to_python_if_native", false]], "skipif() (in module tortoise.contrib.test)": [[17, "tortoise.contrib.test.skipIf", false]], "skiptest": [[17, "tortoise.contrib.test.SkipTest", false]], "skipunless() (in module tortoise.contrib.test)": [[17, "tortoise.contrib.test.skipUnless", false]], "smallintfield (class in tortoise.fields.data)": [[30, "tortoise.fields.data.SmallIntField", false]], "sort_alphabetically (tortoise.contrib.pydantic.creator.pydanticmeta attribute)": [[13, "tortoise.contrib.pydantic.creator.PydanticMeta.sort_alphabetically", false]], "spatialindex (class in tortoise.contrib.mysql.indexes)": [[11, "tortoise.contrib.mysql.indexes.SpatialIndex", false]], "spgistindex (class in tortoise.contrib.postgres.indexes)": [[12, "tortoise.contrib.postgres.indexes.SpGistIndex", false]], "sql() (tortoise.queryset.bulkcreatequery method)": [[39, "id41", false], [39, "tortoise.queryset.BulkCreateQuery.sql", false]], "sql() (tortoise.queryset.bulkupdatequery method)": [[39, "id43", false], [39, "tortoise.queryset.BulkUpdateQuery.sql", false]], "sql() (tortoise.queryset.queryset method)": [[39, "id34", false], [39, "tortoise.queryset.QuerySet.sql", false]], "sql_type (tortoise.fields.base.field attribute)": [[30, "tortoise.fields.base.Field.SQL_TYPE", false]], "sum (class in tortoise.functions)": [[31, "tortoise.functions.Sum", false]], "table (tortoise.models.model.meta attribute)": [[38, "id8", false], [38, "tortoise.models.Model.Meta.table", false]], "table_description (tortoise.models.model.meta attribute)": [[38, "id9", false], [38, "tortoise.models.Model.Meta.table_description", false]], "template (tortoise.exceptions.doesnotexist attribute)": [[28, "tortoise.exceptions.DoesNotExist.TEMPLATE", false]], "template (tortoise.exceptions.multipleobjectsreturned attribute)": [[28, "tortoise.exceptions.MultipleObjectsReturned.TEMPLATE", false]], "template (tortoise.exceptions.notexistormultiple attribute)": [[28, "tortoise.exceptions.NotExistOrMultiple.TEMPLATE", false]], "testcase (class in tortoise.contrib.test)": [[17, "tortoise.contrib.test.TestCase", false]], "textfield (class in tortoise.fields.data)": [[30, "tortoise.fields.data.TextField", false]], "timedeltafield (class in tortoise.fields.data)": [[30, "tortoise.fields.data.TimeDeltaField", false]], "to_db_value() (tortoise.contrib.mysql.fields.uuidfield method)": [[30, "tortoise.contrib.mysql.fields.UUIDField.to_db_value", false]], "to_db_value() (tortoise.fields.base.field method)": [[30, "tortoise.fields.base.Field.to_db_value", false]], "to_python_value() (tortoise.contrib.mysql.fields.uuidfield method)": [[30, "tortoise.contrib.mysql.fields.UUIDField.to_python_value", false]], "to_python_value() (tortoise.fields.base.field method)": [[30, "tortoise.fields.base.Field.to_python_value", false]], "tortoise": [[44, "module-tortoise", false]], "tortoise (class in tortoise)": [[44, "tortoise.Tortoise", false]], "tortoise.backends.base.client": [[18, "module-tortoise.backends.base.client", false]], "tortoise.connection": [[5, "module-tortoise.connection", false]], "tortoise.contrib.aiohttp": [[7, "module-tortoise.contrib.aiohttp", false]], "tortoise.contrib.blacksheep": [[8, "module-tortoise.contrib.blacksheep", false]], "tortoise.contrib.fastapi": [[9, "module-tortoise.contrib.fastapi", false]], "tortoise.contrib.mysql.fields": [[30, "module-tortoise.contrib.mysql.fields", false]], "tortoise.contrib.postgres.fields": [[30, "module-tortoise.contrib.postgres.fields", false]], "tortoise.contrib.pydantic.base": [[13, "module-tortoise.contrib.pydantic.base", false]], "tortoise.contrib.pydantic.creator": [[13, "module-tortoise.contrib.pydantic.creator", false]], "tortoise.contrib.quart": [[14, "module-tortoise.contrib.quart", false]], "tortoise.contrib.sanic": [[15, "module-tortoise.contrib.sanic", false]], "tortoise.contrib.starlette": [[16, "module-tortoise.contrib.starlette", false]], "tortoise.contrib.test": [[17, "module-tortoise.contrib.test", false]], "tortoise.exceptions": [[28, "module-tortoise.exceptions", false]], "tortoise.expressions": [[29, "module-tortoise.expressions", false]], "tortoise.fields.base": [[30, "module-tortoise.fields.base", false]], "tortoise.fields.data": [[30, "module-tortoise.fields.data", false]], "tortoise.fields.relational": [[30, "module-tortoise.fields.relational", false]], "tortoise.functions": [[31, "module-tortoise.functions", false]], "tortoise.models": [[38, "module-tortoise.models", false]], "tortoise.queryset": [[39, "module-0", false], [39, "module-tortoise.queryset", false]], "tortoise.signals": [[45, "module-tortoise.signals", false]], "tortoise.timezone": [[46, "module-tortoise.timezone", false]], "tortoise.transactions": [[48, "module-tortoise.transactions", false]], "tortoise.utils": [[43, "module-tortoise.utils", false]], "tortoise.validators": [[49, "module-tortoise.validators", false]], "tortoise_test_modules (tortoise.contrib.test.isolatedtestcase attribute)": [[17, "tortoise.contrib.test.IsolatedTestCase.tortoise_test_modules", false]], "totsquery (class in tortoise.contrib.postgres.functions)": [[12, "tortoise.contrib.postgres.functions.ToTsQuery", false]], "totsvector (class in tortoise.contrib.postgres.functions)": [[12, "tortoise.contrib.postgres.functions.ToTsVector", false]], "transactionmanagementerror": [[28, "tortoise.exceptions.TransactionManagementError", false]], "trim (class in tortoise.functions)": [[31, "tortoise.functions.Trim", false]], "truncationtestcase (class in tortoise.contrib.test)": [[17, "tortoise.contrib.test.TruncationTestCase", false]], "tsvectorfield (class in tortoise.contrib.postgres.fields)": [[12, "tortoise.contrib.postgres.fields.TSVectorField", false], [30, "tortoise.contrib.postgres.fields.TSVectorField", false]], "unique_together (tortoise.models.model.meta attribute)": [[38, "id10", false], [38, "tortoise.models.Model.Meta.unique_together", false]], "unsupportederror": [[28, "tortoise.exceptions.UnSupportedError", false]], "update() (tortoise.queryset.queryset method)": [[39, "id35", false], [39, "tortoise.queryset.QuerySet.update", false]], "update_from_dict() (tortoise.model method)": [[44, "tortoise.Model.update_from_dict", false]], "update_from_dict() (tortoise.models.model method)": [[38, "tortoise.models.Model.update_from_dict", false]], "update_or_create() (tortoise.model class method)": [[44, "tortoise.Model.update_or_create", false]], "update_or_create() (tortoise.models.model class method)": [[38, "tortoise.models.Model.update_or_create", false]], "updatequery (class in tortoise.queryset)": [[39, "id49", false], [39, "tortoise.queryset.UpdateQuery", false]], "upper (class in tortoise.functions)": [[31, "tortoise.functions.Upper", false]], "use_index() (tortoise.queryset.queryset method)": [[39, "id36", false], [39, "tortoise.queryset.QuerySet.use_index", false]], "using_db() (tortoise.queryset.queryset method)": [[39, "id37", false], [39, "tortoise.queryset.QuerySet.using_db", false]], "uuidfield (class in tortoise.contrib.mysql.fields)": [[11, "tortoise.contrib.mysql.fields.UUIDField", false], [30, "tortoise.contrib.mysql.fields.UUIDField", false]], "uuidfield (class in tortoise.fields.data)": [[30, "tortoise.fields.data.UUIDField", false]], "validate() (tortoise.fields.base.field method)": [[30, "tortoise.fields.base.Field.validate", false]], "validate_ipv46_address() (in module tortoise.validators)": [[49, "tortoise.validators.validate_ipv46_address", false]], "validate_ipv4_address() (in module tortoise.validators)": [[49, "tortoise.validators.validate_ipv4_address", false]], "validate_ipv6_address() (in module tortoise.validators)": [[49, "tortoise.validators.validate_ipv6_address", false]], "validationerror": [[28, "tortoise.exceptions.ValidationError", false]], "validator (class in tortoise.validators)": [[49, "tortoise.validators.Validator", false]], "values() (tortoise.queryset.queryset method)": [[39, "id38", false], [39, "tortoise.queryset.QuerySet.values", false]], "values_list() (tortoise.queryset.queryset method)": [[39, "id39", false], [39, "tortoise.queryset.QuerySet.values_list", false]], "valueslistquery (class in tortoise.queryset)": [[39, "id50", false], [39, "tortoise.queryset.ValuesListQuery", false]], "valuesquery (class in tortoise.queryset)": [[39, "id51", false], [39, "tortoise.queryset.ValuesQuery", false]], "when (class in tortoise.expressions)": [[29, "tortoise.expressions.When", false]]}, "objects": {"": [[44, 0, 0, 1, "tortoise", ""]], "tortoise": [[44, 1, 1, 0, "BaseDBAsyncClient", "Base class for containing a DB connection."], [44, 1, 1, 0, "Model", "Base class for all Tortoise ORM Models."], [44, 1, 1, 0, "Tortoise", "Close all connections cleanly."], [5, 0, 0, 1, "connection", ""], [28, 0, 0, 1, "exceptions", ""], [29, 0, 0, 1, "expressions", ""], [31, 0, 0, 1, "functions", ""], [38, 0, 0, 1, "models", ""], [39, 0, 0, "module-0", "queryset", ""], [45, 0, 0, 1, "signals", ""], [46, 0, 0, 1, "timezone", ""], [48, 0, 0, 1, "transactions", ""], [43, 0, 0, 1, "utils", ""], [49, 0, 0, 1, "validators", ""]], "tortoise.BaseDBAsyncClient": [[44, 3, 1, 0, "acquire_connection", "Acquires a connection from the pool. Will return the current context connection if already in a transaction."], [44, 4, 1, "id0", "capabilities", "Contains the connection capabilities"], [44, 3, 1, 0, "close", "Closes the DB connection."], [44, 3, 1, 0, "create_connection", "Establish a DB connection."], [44, 3, 1, 0, "db_create", "Created the database in the server. Typically only called by the test runner."], [44, 3, 1, 0, "db_delete", "Delete the database from the Server. Typically only called by the test runner."], [44, 3, 1, 0, "execute_insert", "Executes a RAW SQL insert statement, with provided parameters."], [44, 3, 1, 0, "execute_many", "Executes a RAW bulk insert statement, like execute_insert, but returns no data."], [44, 3, 1, 0, "execute_query", "Executes a RAW SQL query statement, and returns the resultset."], [44, 3, 1, 0, "execute_query_dict", "Executes a RAW SQL query statement, and returns the resultset as a list of dicts."], [44, 3, 1, 0, "execute_script", "Executes a RAW SQL script with multiple statements, and returns nothing."], [44, 4, 1, "id4", "executor_class", "alias of BaseExecutor"], [44, 4, 1, "id5", "query_class", "alias of Query"], [44, 4, 1, "id6", "schema_generator", "alias of BaseSchemaGenerator"]], "tortoise.BaseDBAsyncClient.__init__": [[44, 2, 2, "tortoise.BaseDBAsyncClient", "connection_name", "Base class for containing a DB connection."], [44, 2, 2, "tortoise.BaseDBAsyncClient", "fetch_inserted", "Base class for containing a DB connection."], [44, 2, 2, "tortoise.BaseDBAsyncClient", "kwargs", "Base class for containing a DB connection."]], "tortoise.BaseDBAsyncClient.create_connection": [[44, 2, 2, 0, "with_db", "If True, then select the DB to use, else use default. Use case for this is to create/drop a database."]], "tortoise.BaseDBAsyncClient.execute_insert": [[44, 2, 2, 0, "query", "The SQL string, pre-parametrized for the target DB dialect."], [44, 2, 2, 0, "values", "A sequence of positional DB parameters."]], "tortoise.BaseDBAsyncClient.execute_many": [[44, 2, 2, 0, "query", "The SQL string, pre-parametrized for the target DB dialect."], [44, 2, 2, 0, "values", "A sequence of positional DB parameters."]], "tortoise.BaseDBAsyncClient.execute_query": [[44, 2, 2, 0, "query", "The SQL string, pre-parametrized for the target DB dialect."], [44, 2, 2, 0, "values", "A sequence of positional DB parameters."]], "tortoise.BaseDBAsyncClient.execute_query_dict": [[44, 2, 2, 0, "query", "The SQL string, pre-parametrized for the target DB dialect."], [44, 2, 2, 0, "values", "A sequence of positional DB parameters."]], "tortoise.BaseDBAsyncClient.execute_script": [[44, 2, 2, 0, "query", "The SQL string, which will be passed on verbatim. Semicolons is supported here."]], "tortoise.Model": [[44, 1, 1, 0, "Meta", "The Meta class is used to configure metadata for the Model."], [44, 3, 1, 0, "all", "Returns the complete QuerySet."], [44, 3, 1, 0, "annotate", "Annotates the result set with extra Functions/Aggregations/Expressions."], [44, 3, 1, 0, "bulk_create", "Bulk insert operation:"], [44, 3, 1, 0, "bulk_update", "Update the given fields in each of the given objects in the database. This method efficiently updates the given fields on the provided model instances, generally with one query."], [44, 3, 1, 0, "clone", "Create a new clone of the object that when you do a .save() will create a new record."], [44, 3, 1, 0, "create", "Create a record in the DB and returns the object."], [44, 3, 1, 0, "delete", "Deletes the current model object."], [44, 3, 1, 0, "describe", "Describes the given list of models or ALL registered models."], [44, 3, 1, 0, "exclude", "Generates a QuerySet with the exclude applied."], [44, 3, 1, 0, "exists", "Return True/False whether record exists with the provided filter parameters."], [44, 3, 1, 0, "fetch_for_list", "Fetches related models for provided list of Model objects."], [44, 3, 1, 0, "fetch_related", "Fetch related fields."], [44, 3, 1, 0, "filter", "Generates a QuerySet with the filter applied."], [44, 3, 1, 0, "first", "Generates a QuerySet that returns the first record."], [44, 3, 1, 0, "get", "Fetches a single record for a Model type using the provided filter parameters."], [44, 3, 1, 0, "get_or_create", "Fetches the object if exists (filtering on the provided parameters), else creates an instance with any unspecified parameters as default values."], [44, 3, 1, 0, "get_or_none", "Fetches a single record for a Model type using the provided filter parameters or None."], [44, 3, 1, 0, "in_bulk", "Return a dictionary mapping each of the given IDs to the object with that ID. If id_list isn't provided, evaluate the entire QuerySet."], [44, 5, 1, 0, "pk", "Alias to the models Primary Key. Can be used as a field name when doing filtering e.g. .filter(pk=...) etc..."], [44, 3, 1, 0, "raw", "Executes a RAW SQL and returns the result"], [44, 3, 1, 0, "refresh_from_db", "Refresh latest data from db. When this method is called without arguments all db fields of the model are updated to the values currently present in the database."], [44, 3, 1, 0, "register_listener", "Register listener to current model class for special Signal."], [44, 3, 1, 0, "save", "Creates/Updates the current model object."], [44, 3, 1, 0, "select_for_update", "Make QuerySet select for update."], [44, 3, 1, 0, "update_from_dict", "Updates the current model with the provided dict. This can allow mass-updating a model from a dict, also ensuring that datatype conversions happen."], [44, 3, 1, 0, "update_or_create", "A convenience method for updating an object with the given kwargs, creating a new one if necessary."]], "tortoise.Model.__init__": [[44, 2, 2, "tortoise.Model", "kwargs", "Base class for all Tortoise ORM Models."]], "tortoise.Model.all": [[44, 2, 2, "tortoise.Model.all", "using_db", "Returns the complete QuerySet."]], "tortoise.Model.annotate": [[44, 2, 2, 0, "kwargs", "Parameter name and the Function/Aggregation to annotate with."]], "tortoise.Model.bulk_create": [[44, 2, 2, 0, "batch_size", "How many objects are created in a single query"], [44, 2, 2, 0, "ignore_conflicts", "Ignore conflicts when inserting"], [44, 2, 2, 0, "objects", "List of objects to bulk create"], [44, 2, 2, 0, "on_conflict", "On conflict index name"], [44, 2, 2, 0, "update_fields", "Update fields when conflicts"], [44, 2, 2, 0, "using_db", "Specific DB connection to use instead of default bound"]], "tortoise.Model.bulk_update": [[44, 2, 2, 0, "batch_size", "How many objects are created in a single query"], [44, 2, 2, 0, "fields", "The fields to update"], [44, 2, 2, 0, "objects", "List of objects to bulk create"], [44, 2, 2, 0, "using_db", "Specific DB connection to use instead of default bound"]], "tortoise.Model.clone": [[44, 2, 2, "tortoise.Model.clone", "pk=&lt;object object&gt;", "Create a new clone of the object that when you do a .save() will create a new record."]], "tortoise.Model.create": [[44, 2, 2, 0, "kwargs", "Model parameters."], [44, 2, 2, 0, "using_db", "Specific DB connection to use instead of default bound"]], "tortoise.Model.delete": [[44, 2, 2, 0, "using_db", "Specific DB connection to use instead of default bound"]], "tortoise.Model.describe": [[44, 2, 2, 0, "serializable", "False if you want raw python objects, True for JSON-serializable data."]], "tortoise.Model.exclude": [[44, 2, 2, 0, "args", "Q functions containing constraints."], [44, 2, 2, 0, "kwargs", "Simple filter constraints."]], "tortoise.Model.exists": [[44, 2, 2, 0, "args", "Q functions containing constraints."], [44, 2, 2, 0, "kwargs", "Simple filter constraints."], [44, 2, 2, 0, "using_db", "The specific DB connection to use."]], "tortoise.Model.fetch_for_list": [[44, 2, 2, 0, "args", "Relation names to fetch."], [44, 2, 2, 0, "instance_list", "List of Model objects to fetch relations for."], [44, 2, 2, 0, "using_db", "DO NOT USE"]], "tortoise.Model.fetch_related": [[44, 2, 2, 0, "args", "The related fields that should be fetched."], [44, 2, 2, 0, "using_db", "Specific DB connection to use instead of default bound"]], "tortoise.Model.filter": [[44, 2, 2, 0, "args", "Q functions containing constraints."], [44, 2, 2, 0, "kwargs", "Simple filter constraints."]], "tortoise.Model.first": [[44, 2, 2, "tortoise.Model.first", "using_db", "Generates a QuerySet that returns the first record."]], "tortoise.Model.get": [[44, 2, 2, 0, "args", "Q functions containing constraints."], [44, 2, 2, 0, "kwargs", "Simple filter constraints."], [44, 2, 2, 0, "using_db", "The DB connection to use"]], "tortoise.Model.get_or_create": [[44, 2, 2, 0, "defaults", "Default values to be added to a created instance if it can't be fetched."], [44, 2, 2, 0, "kwargs", "Query parameters."], [44, 2, 2, 0, "using_db", "Specific DB connection to use instead of default bound"]], "tortoise.Model.get_or_none": [[44, 2, 2, 0, "args", "Q functions containing constraints."], [44, 2, 2, 0, "kwargs", "Simple filter constraints."], [44, 2, 2, 0, "using_db", "The specific DB connection to use."]], "tortoise.Model.in_bulk": [[44, 2, 2, 0, "field_name", "Must be a unique field"], [44, 2, 2, 0, "id_list", "A list of field values"], [44, 2, 2, 0, "using_db", "Specific DB connection to use instead of default bound"]], "tortoise.Model.raw": [[44, 2, 2, 0, "sql", "The raw sql."], [44, 2, 2, 0, "using_db", "The specific DB connection to use"]], "tortoise.Model.refresh_from_db": [[44, 2, 2, 0, "fields", "The special fields that to be refreshed."], [44, 2, 2, 0, "using_db", "Specific DB connection to use instead of default bound."]], "tortoise.Model.register_listener": [[44, 2, 2, 0, "listener", "callable listener"], [44, 2, 2, 0, "signal", "one of tortoise.signals.Signals"]], "tortoise.Model.save": [[44, 2, 2, 0, "force_create", "Forces creation of the record"], [44, 2, 2, 0, "force_update", "Forces updating of the record"], [44, 2, 2, 0, "update_fields", "If provided, it should be a tuple/list of fields by name."], [44, 2, 2, 0, "using_db", "Specific DB connection to use instead of default bound"]], "tortoise.Model.select_for_update": [[44, 2, 2, "tortoise.Model.select_for_update", "nowait", "Make QuerySet select for update."], [44, 2, 2, "tortoise.Model.select_for_update", "of", "Make QuerySet select for update."], [44, 2, 2, "tortoise.Model.select_for_update", "skip_locked", "Make QuerySet select for update."], [44, 2, 2, "tortoise.Model.select_for_update", "using_db", "Make QuerySet select for update."]], "tortoise.Model.update_from_dict": [[44, 2, 2, 0, "data", "The parameters you want to update in a dict format"]], "tortoise.Model.update_or_create": [[44, 2, 2, 0, "defaults", "Default values used to update the object."], [44, 2, 2, 0, "kwargs", "Query parameters."], [44, 2, 2, 0, "using_db", "Specific DB connection to use instead of default bound"]], "tortoise.Tortoise": [[44, 4, 1, 0, "apps", ""], [44, 3, 1, 0, "close_connections", "Close all connections cleanly."], [44, 3, 1, 0, "describe_model", "Describes the given list of models or ALL registered models."], [44, 3, 1, 0, "describe_models", "Describes the given list of models or ALL registered models."], [44, 3, 1, 0, "generate_schemas", "Generate schemas according to models provided to .init() method. Will fail if schemas already exists, so it's not recommended to be used as part of application workflow"], [44, 3, 1, 0, "get_connection", "Returns the connection by name."], [44, 3, 1, 0, "init", "Sets up Tortoise-ORM."], [44, 3, 1, 0, "init_models", "Early initialisation of Tortoise ORM Models."]], "tortoise.Tortoise.describe_model": [[44, 2, 2, 0, "model", "The Model to describe"], [44, 2, 2, 0, "serializable", "False if you want raw python objects, True for JSON-serializable data."]], "tortoise.Tortoise.describe_models": [[44, 2, 2, 0, "models", "List of models to describe, if not provided then describes ALL registered models"], [44, 2, 2, 0, "serializable", "False if you want raw python objects, True for JSON-serializable data."]], "tortoise.Tortoise.generate_schemas": [[44, 2, 2, 0, "safe", "When set to true, creates the table only when it does not already exist."]], "tortoise.Tortoise.get_connection": [[44, 2, 2, "tortoise.Tortoise.get_connection", "connection_name", "Returns the connection by name."]], "tortoise.Tortoise.init": [[44, 2, 2, 0, "_create_db", "If True tries to create database for specified connections, could be used for testing purposes."], [44, 2, 2, 0, "config", "Dict containing config:"], [44, 2, 2, 0, "config_file", "Path to .json or .yml (if PyYAML installed) file containing config with same format as above."], [44, 2, 2, 0, "db_url", "Use a DB_URL string."], [44, 2, 2, 0, "modules", "Dictionary of key: [list_of_modules] that defined \"apps\" and modules that should be discovered for models."], [44, 2, 2, 0, "routers", "A list of db routers str path or module."], [44, 2, 2, 0, "timezone", "Timezone to use, default is UTC."], [44, 2, 2, 0, "use_tz", "A boolean that specifies if datetime will be timezone-aware by default or not."]], "tortoise.Tortoise.init_models": [[44, 2, 2, 0, "_init_relations", "Whether to init relations or not"], [44, 2, 2, 0, "app_label", "The app label, e.g."], [44, 2, 2, 0, "models_paths", "Models paths to initialise"]], "tortoise.backends.base": [[18, 0, 0, 1, "client", ""]], "tortoise.backends.base.client": [[18, 1, 1, 0, "BaseDBAsyncClient", "Base class for containing a DB connection."], [18, 1, 1, 0, "Capabilities", "DB Client Capabilities indicates the supported feature-set, and is also used to note common workarounds to deficiencies."]], "tortoise.backends.base.client.BaseDBAsyncClient": [[18, 3, 1, 0, "acquire_connection", "Acquires a connection from the pool. Will return the current context connection if already in a transaction."], [18, 4, 1, 0, "capabilities", "Contains the connection capabilities"], [18, 3, 1, 0, "close", "Closes the DB connection."], [18, 3, 1, 0, "create_connection", "Establish a DB connection."], [18, 3, 1, 0, "db_create", "Created the database in the server. Typically only called by the test runner."], [18, 3, 1, 0, "db_delete", "Delete the database from the Server. Typically only called by the test runner."], [18, 3, 1, 0, "execute_insert", "Executes a RAW SQL insert statement, with provided parameters."], [18, 3, 1, 0, "execute_many", "Executes a RAW bulk insert statement, like execute_insert, but returns no data."], [18, 3, 1, 0, "execute_query", "Executes a RAW SQL query statement, and returns the resultset."], [18, 3, 1, 0, "execute_query_dict", "Executes a RAW SQL query statement, and returns the resultset as a list of dicts."], [18, 3, 1, 0, "execute_script", "Executes a RAW SQL script with multiple statements, and returns nothing."], [18, 4, 1, 0, "executor_class", "The executor dialect class (high level dialect)"], [18, 4, 1, 0, "query_class", "The PyPika Query dialect (low level dialect)"], [18, 4, 1, 0, "schema_generator", "The DDL schema generator"]], "tortoise.backends.base.client.BaseDBAsyncClient.__init__": [[18, 2, 2, "tortoise.backends.base.client.BaseDBAsyncClient", "connection_name", "Base class for containing a DB connection."], [18, 2, 2, "tortoise.backends.base.client.BaseDBAsyncClient", "fetch_inserted", "Base class for containing a DB connection."], [18, 2, 2, "tortoise.backends.base.client.BaseDBAsyncClient", "kwargs", "Base class for containing a DB connection."]], "tortoise.backends.base.client.BaseDBAsyncClient.create_connection": [[18, 2, 2, 0, "with_db", "If True, then select the DB to use, else use default. Use case for this is to create/drop a database."]], "tortoise.backends.base.client.BaseDBAsyncClient.execute_insert": [[18, 2, 2, 0, "query", "The SQL string, pre-parametrized for the target DB dialect."], [18, 2, 2, 0, "values", "A sequence of positional DB parameters."]], "tortoise.backends.base.client.BaseDBAsyncClient.execute_many": [[18, 2, 2, 0, "query", "The SQL string, pre-parametrized for the target DB dialect."], [18, 2, 2, 0, "values", "A sequence of positional DB parameters."]], "tortoise.backends.base.client.BaseDBAsyncClient.execute_query": [[18, 2, 2, 0, "query", "The SQL string, pre-parametrized for the target DB dialect."], [18, 2, 2, 0, "values", "A sequence of positional DB parameters."]], "tortoise.backends.base.client.BaseDBAsyncClient.execute_query_dict": [[18, 2, 2, 0, "query", "The SQL string, pre-parametrized for the target DB dialect."], [18, 2, 2, 0, "values", "A sequence of positional DB parameters."]], "tortoise.backends.base.client.BaseDBAsyncClient.execute_script": [[18, 2, 2, 0, "query", "The SQL string, which will be passed on verbatim. Semicolons is supported here."]], "tortoise.backends.base.client.Capabilities.__init__": [[18, 2, 2, 0, "daemon", "Is the DB an external Daemon we connect to?"], [18, 2, 2, 0, "dialect", "Dialect name of the DB Client driver."], [18, 2, 2, 0, "inline_comment", "Indicates that comments should be rendered in line with the DDL statement, and not as a separate statement."], [18, 2, 2, 0, "requires_limit", "Indicates that this DB requires a LIMIT statement for an OFFSET statement to work."], [18, 2, 2, 0, "support_for_update", "Indicates that this DB supports SELECT ..."], [18, 2, 2, 0, "support_index_hint", "Support force index or use index."], [18, 2, 2, 0, "support_update_limit_order_by", "support update/delete with limit and order by."], [18, 2, 2, 0, "supports_transactions", "Indicates that this DB supports transactions."]], "tortoise.connection": [[5, 1, 1, 0, "ConnectionHandler", "Returns a list of connection objects from the storage in the current context."]], "tortoise.connection.ConnectionHandler": [[5, 3, 1, 0, "all", "Returns a list of connection objects from the storage in the current context."], [5, 3, 1, 0, "close_all", "Closes all connections in the storage in the current context."], [5, 5, 1, 0, "db_config", "Return the DB config."], [5, 3, 1, 0, "discard", "Discards the given alias from the storage in the current context."], [5, 3, 1, 0, "get", "Return the connection object for the given alias, creating it if needed."], [5, 3, 1, 0, "reset", "Reset the underlying storage to the previous context state."], [5, 3, 1, 0, "set", "Sets the given alias to the provided connection object."]], "tortoise.connection.ConnectionHandler.close_all": [[5, 2, 2, 0, "discard", "If False, all connection objects are closed but retained in the storage."]], "tortoise.connection.ConnectionHandler.discard": [[5, 2, 2, 0, "conn_alias", "The alias for which the connection object should be discarded."]], "tortoise.connection.ConnectionHandler.get": [[5, 2, 2, 0, "conn_alias", "The alias for which the connection has to be fetched"]], "tortoise.connection.ConnectionHandler.reset": [[5, 2, 2, 0, "token", "The token corresponding to the context to which the storage state has to be reset."]], "tortoise.connection.ConnectionHandler.set": [[5, 2, 2, 0, "conn_alias", "The alias to set the connection for."], [5, 2, 2, 0, "conn_obj", "The connection object that needs to be set for this alias."]], "tortoise.contrib": [[7, 0, 0, 1, "aiohttp", ""], [8, 0, 0, 1, "blacksheep", ""], [9, 0, 0, 1, "fastapi", ""], [14, 0, 0, 1, "quart", ""], [15, 0, 0, 1, "sanic", ""], [16, 0, 0, 1, "starlette", ""], [17, 0, 0, 1, "test", ""]], "tortoise.contrib.aiohttp": [[7, 6, 1, 0, "register_tortoise", "Registers on_startup and on_shutdown hooks to set-up and tear-down Tortoise-ORM inside a Aiohttp webserver."]], "tortoise.contrib.aiohttp.register_tortoise": [[7, 2, 2, 0, "app", "Aiohttp app."], [7, 2, 2, 0, "config", "Dict containing config:"], [7, 2, 2, 0, "config_file", "Path to .json or .yml (if PyYAML installed) file containing config with same format as above."], [7, 2, 2, 0, "db_url", "Use a DB_URL string."], [7, 2, 2, 0, "generate_schemas", "True to generate schema immediately."], [7, 2, 2, 0, "modules", "Dictionary of key: [list_of_modules] that defined \"apps\" and modules that should be discovered for models."]], "tortoise.contrib.blacksheep": [[8, 6, 1, 0, "register_tortoise", "Registers startup and shutdown events to set-up and tear-down Tortoise-ORM inside a BlackSheep application."]], "tortoise.contrib.blacksheep.register_tortoise": [[8, 2, 2, 0, "add_exception_handlers", "True to add some automatic exception handlers for DoesNotExist & IntegrityError. This is not recommended for production systems as it may leak data."], [8, 2, 2, 0, "app", "BlackSheep app."], [8, 2, 2, 0, "config", "Dict containing config:"], [8, 2, 2, 0, "config_file", "Path to .json or .yml (if PyYAML installed) file containing config with same format as above."], [8, 2, 2, 0, "db_url", "Use a DB_URL string."], [8, 2, 2, 0, "generate_schemas", "True to generate schema immediately."], [8, 2, 2, 0, "modules", "Dictionary of key: [list_of_modules] that defined \"apps\" and modules that should be discovered for models."]], "tortoise.contrib.fastapi": [[9, 1, 1, 0, "HTTPNotFoundError", "Bases: BaseModel"], [9, 1, 1, 0, "RegisterTortoise", "Bases: AbstractAsyncContextManager"], [9, 6, 1, 0, "register_tortoise", "Registers startup and shutdown events to set-up and tear-down Tortoise-ORM inside a FastAPI application."]], "tortoise.contrib.fastapi.HTTPNotFoundError": [[9, 4, 1, 0, "detail", ""], [9, 4, 1, 0, "model_computed_fields", "A dictionary of computed field names and their corresponding ComputedFieldInfo objects."], [9, 4, 1, 0, "model_config", "Configuration for the model, should be a dictionary conforming to [ConfigDict][pydantic.config.ConfigDict]."], [9, 4, 1, 0, "model_fields", "Metadata about the fields defined on the model, mapping of field names to [FieldInfo][pydantic.fields.FieldInfo] objects."]], "tortoise.contrib.fastapi.HTTPNotFoundError.__init__": [[9, 2, 2, "tortoise.contrib.fastapi.HTTPNotFoundError", "data", "Bases: BaseModel"]], "tortoise.contrib.fastapi.RegisterTortoise": [[9, 3, 1, 0, "close_orm", "None"], [9, 3, 1, 0, "init_orm", "None"]], "tortoise.contrib.fastapi.RegisterTortoise.__init__": [[9, 2, 2, "tortoise.contrib.fastapi.RegisterTortoise", "_create_db", "Bases: AbstractAsyncContextManager"], [9, 2, 2, 0, "add_exception_handlers", "True to add some automatic exception handlers for DoesNotExist & IntegrityError. This is not recommended for production systems as it may leak data."], [9, 2, 2, 0, "app", "FastAPI app."], [9, 2, 2, 0, "config", "Dict containing config:"], [9, 2, 2, 0, "config_file", "Path to .json or .yml (if PyYAML installed) file containing config with same format as above."], [9, 2, 2, 0, "db_url", "Use a DB_URL string."], [9, 2, 2, 0, "generate_schemas", "True to generate schema immediately."], [9, 2, 2, 0, "modules", "Dictionary of key: [list_of_modules] that defined \"apps\" and modules that should be discovered for models."], [9, 2, 2, 0, "timezone", "Timezone to use, default is UTC."], [9, 2, 2, 0, "use_tz", "A boolean that specifies if datetime will be timezone-aware by default or not."]], "tortoise.contrib.fastapi.register_tortoise": [[9, 2, 2, 0, "add_exception_handlers", "True to add some automatic exception handlers for DoesNotExist & IntegrityError. This is not recommended for production systems as it may leak data."], [9, 2, 2, 0, "app", "FastAPI app."], [9, 2, 2, 0, "config", "Dict containing config:"], [9, 2, 2, 0, "config_file", "Path to .json or .yml (if PyYAML installed) file containing config with same format as above."], [9, 2, 2, 0, "db_url", "Use a DB_URL string."], [9, 2, 2, 0, "generate_schemas", "True to generate schema immediately."], [9, 2, 2, 0, "modules", "Dictionary of key: [list_of_modules] that defined \"apps\" and modules that should be discovered for models."]], "tortoise.contrib.mysql": [[30, 0, 0, 1, "fields", ""]], "tortoise.contrib.mysql.fields": [[30, 1, 1, 0, "GeometryField", ""], [30, 1, 1, 0, "UUIDField", "UUID Field"]], "tortoise.contrib.mysql.fields.GeometryField.__init__": [[30, 2, 2, "tortoise.contrib.mysql.fields.GeometryField", "db_index", ""], [30, 2, 2, "tortoise.contrib.mysql.fields.GeometryField", "default", ""], [30, 2, 2, "tortoise.contrib.mysql.fields.GeometryField", "description", ""], [30, 2, 2, "tortoise.contrib.mysql.fields.GeometryField", "generated", ""], [30, 2, 2, "tortoise.contrib.mysql.fields.GeometryField", "kwargs", ""], [30, 2, 2, "tortoise.contrib.mysql.fields.GeometryField", "model", ""], [30, 2, 2, "tortoise.contrib.mysql.fields.GeometryField", "null", ""], [30, 2, 2, "tortoise.contrib.mysql.fields.GeometryField", "primary_key", ""], [30, 2, 2, "tortoise.contrib.mysql.fields.GeometryField", "source_field", ""], [30, 2, 2, "tortoise.contrib.mysql.fields.GeometryField", "unique", ""], [30, 2, 2, "tortoise.contrib.mysql.fields.GeometryField", "validators", ""]], "tortoise.contrib.mysql.fields.UUIDField": [[30, 3, 1, 0, "to_db_value", "Converts from the Python type to the DB type."], [30, 3, 1, 0, "to_python_value", "Converts from the DB type to the Python type."]], "tortoise.contrib.mysql.fields.UUIDField.__init__": [[30, 2, 2, "tortoise.contrib.mysql.fields.UUIDField", "binary_compression", "UUID Field"], [30, 2, 2, "tortoise.contrib.mysql.fields.UUIDField", "kwargs", "UUID Field"]], "tortoise.contrib.mysql.fields.UUIDField.to_db_value": [[30, 2, 2, 0, "instance", "Model class or Model instance provided to look up."], [30, 2, 2, 0, "value", "Current python value in model."]], "tortoise.contrib.mysql.fields.UUIDField.to_python_value": [[30, 2, 2, 0, "value", "Value from DB"]], "tortoise.contrib.mysql.functions": [[31, 1, 1, 0, "Rand", "Generate random number, with optional seed."]], "tortoise.contrib.mysql.functions.Rand.__init__": [[31, 2, 2, "tortoise.contrib.mysql.functions.Rand", "alias", "Generate random number, with optional seed."], [31, 2, 2, "tortoise.contrib.mysql.functions.Rand", "seed", "Generate random number, with optional seed."]], "tortoise.contrib.mysql.indexes": [[11, 1, 1, 0, "FullTextIndex", ""], [11, 1, 1, 0, "SpatialIndex", ""]], "tortoise.contrib.mysql.indexes.FullTextIndex.__init__": [[11, 2, 2, "tortoise.contrib.mysql.indexes.FullTextIndex", "expressions", ""], [11, 2, 2, "tortoise.contrib.mysql.indexes.FullTextIndex", "fields", ""], [11, 2, 2, "tortoise.contrib.mysql.indexes.FullTextIndex", "name", ""], [11, 2, 2, "tortoise.contrib.mysql.indexes.FullTextIndex", "parser_name", ""]], "tortoise.contrib.mysql.indexes.SpatialIndex.__init__": [[11, 2, 2, "tortoise.contrib.mysql.indexes.SpatialIndex", "expressions", ""], [11, 2, 2, "tortoise.contrib.mysql.indexes.SpatialIndex", "fields", ""], [11, 2, 2, "tortoise.contrib.mysql.indexes.SpatialIndex", "name", ""]], "tortoise.contrib.mysql.search": [[11, 1, 1, 0, "SearchCriterion", "Only support for CharField, TextField with full search indexes."]], "tortoise.contrib.mysql.search.SearchCriterion.__init__": [[11, 2, 2, "tortoise.contrib.mysql.search.SearchCriterion", "columns", "Only support for CharField, TextField with full search indexes."], [11, 2, 2, "tortoise.contrib.mysql.search.SearchCriterion", "expr", "Only support for CharField, TextField with full search indexes."], [11, 2, 2, "tortoise.contrib.mysql.search.SearchCriterion", "mode", "Only support for CharField, TextField with full search indexes."]], "tortoise.contrib.postgres": [[30, 0, 0, 1, "fields", ""]], "tortoise.contrib.postgres.fields": [[12, 1, 1, 0, "ArrayField", ""], [30, 1, 1, 0, "TSVectorField", ""]], "tortoise.contrib.postgres.fields.ArrayField.__init__": [[12, 2, 2, "tortoise.contrib.postgres.fields.ArrayField", "element_type", ""], [12, 2, 2, "tortoise.contrib.postgres.fields.ArrayField", "kwargs", ""]], "tortoise.contrib.postgres.fields.TSVectorField.__init__": [[30, 2, 2, "tortoise.contrib.postgres.fields.TSVectorField", "db_index", ""], [30, 2, 2, "tortoise.contrib.postgres.fields.TSVectorField", "default", ""], [30, 2, 2, "tortoise.contrib.postgres.fields.TSVectorField", "description", ""], [30, 2, 2, "tortoise.contrib.postgres.fields.TSVectorField", "generated", ""], [30, 2, 2, "tortoise.contrib.postgres.fields.TSVectorField", "kwargs", ""], [30, 2, 2, "tortoise.contrib.postgres.fields.TSVectorField", "model", ""], [30, 2, 2, "tortoise.contrib.postgres.fields.TSVectorField", "null", ""], [30, 2, 2, "tortoise.contrib.postgres.fields.TSVectorField", "primary_key", ""], [30, 2, 2, "tortoise.contrib.postgres.fields.TSVectorField", "source_field", ""], [30, 2, 2, "tortoise.contrib.postgres.fields.TSVectorField", "unique", ""], [30, 2, 2, "tortoise.contrib.postgres.fields.TSVectorField", "validators", ""]], "tortoise.contrib.postgres.functions": [[12, 1, 1, 0, "PlainToTsQuery", "plainto_tsquery function"], [31, 1, 1, 0, "Random", "Generate random number."], [12, 1, 1, 0, "ToTsQuery", "to_tsquery function"], [12, 1, 1, 0, "ToTsVector", "to to_tsvector function"]], "tortoise.contrib.postgres.functions.PlainToTsQuery.__init__": [[12, 2, 2, "tortoise.contrib.postgres.functions.PlainToTsQuery", "field", "plainto_tsquery function"]], "tortoise.contrib.postgres.functions.Random.__init__": [[31, 2, 2, "tortoise.contrib.postgres.functions.Random", "alias", "Generate random number."]], "tortoise.contrib.postgres.functions.ToTsQuery.__init__": [[12, 2, 2, "tortoise.contrib.postgres.functions.ToTsQuery", "field", "to_tsquery function"]], "tortoise.contrib.postgres.functions.ToTsVector.__init__": [[12, 2, 2, "tortoise.contrib.postgres.functions.ToTsVector", "field", "to to_tsvector function"]], "tortoise.contrib.postgres.indexes": [[12, 1, 1, 0, "BloomIndex", ""], [12, 1, 1, 0, "BrinIndex", ""], [12, 1, 1, 0, "GinIndex", ""], [12, 1, 1, 0, "GistIndex", ""], [12, 1, 1, 0, "HashIndex", ""], [12, 1, 1, 0, "SpGistIndex", ""]], "tortoise.contrib.postgres.indexes.BloomIndex.__init__": [[12, 2, 2, "tortoise.contrib.postgres.indexes.BloomIndex", "condition", ""], [12, 2, 2, "tortoise.contrib.postgres.indexes.BloomIndex", "expressions", ""], [12, 2, 2, "tortoise.contrib.postgres.indexes.BloomIndex", "fields", ""], [12, 2, 2, "tortoise.contrib.postgres.indexes.BloomIndex", "name", ""]], "tortoise.contrib.postgres.indexes.BrinIndex.__init__": [[12, 2, 2, "tortoise.contrib.postgres.indexes.BrinIndex", "condition", ""], [12, 2, 2, "tortoise.contrib.postgres.indexes.BrinIndex", "expressions", ""], [12, 2, 2, "tortoise.contrib.postgres.indexes.BrinIndex", "fields", ""], [12, 2, 2, "tortoise.contrib.postgres.indexes.BrinIndex", "name", ""]], "tortoise.contrib.postgres.indexes.GinIndex.__init__": [[12, 2, 2, "tortoise.contrib.postgres.indexes.GinIndex", "condition", ""], [12, 2, 2, "tortoise.contrib.postgres.indexes.GinIndex", "expressions", ""], [12, 2, 2, "tortoise.contrib.postgres.indexes.GinIndex", "fields", ""], [12, 2, 2, "tortoise.contrib.postgres.indexes.GinIndex", "name", ""]], "tortoise.contrib.postgres.indexes.GistIndex.__init__": [[12, 2, 2, "tortoise.contrib.postgres.indexes.GistIndex", "condition", ""], [12, 2, 2, "tortoise.contrib.postgres.indexes.GistIndex", "expressions", ""], [12, 2, 2, "tortoise.contrib.postgres.indexes.GistIndex", "fields", ""], [12, 2, 2, "tortoise.contrib.postgres.indexes.GistIndex", "name", ""]], "tortoise.contrib.postgres.indexes.HashIndex.__init__": [[12, 2, 2, "tortoise.contrib.postgres.indexes.HashIndex", "condition", ""], [12, 2, 2, "tortoise.contrib.postgres.indexes.HashIndex", "expressions", ""], [12, 2, 2, "tortoise.contrib.postgres.indexes.HashIndex", "fields", ""], [12, 2, 2, "tortoise.contrib.postgres.indexes.HashIndex", "name", ""]], "tortoise.contrib.postgres.indexes.SpGistIndex.__init__": [[12, 2, 2, "tortoise.contrib.postgres.indexes.SpGistIndex", "condition", ""], [12, 2, 2, "tortoise.contrib.postgres.indexes.SpGistIndex", "expressions", ""], [12, 2, 2, "tortoise.contrib.postgres.indexes.SpGistIndex", "fields", ""], [12, 2, 2, "tortoise.contrib.postgres.indexes.SpGistIndex", "name", ""]], "tortoise.contrib.postgres.search": [[12, 1, 1, 0, "SearchCriterion", ""]], "tortoise.contrib.postgres.search.SearchCriterion.__init__": [[12, 2, 2, "tortoise.contrib.postgres.search.SearchCriterion", "expr", ""], [12, 2, 2, "tortoise.contrib.postgres.search.SearchCriterion", "field", ""]], "tortoise.contrib.pydantic": [[13, 0, 0, 1, "base", ""], [13, 0, 0, 1, "creator", ""]], "tortoise.contrib.pydantic.base": [[13, 1, 1, 0, "PydanticListModel", "Pydantic BaseModel for List of Tortoise Models"], [13, 1, 1, 0, "PydanticModel", "Pydantic BaseModel for Tortoise objects."]], "tortoise.contrib.pydantic.base.PydanticListModel": [[13, 3, 1, 0, "from_queryset", "Returns a serializable pydantic model instance that contains a list of models, from the provided queryset."], [13, 4, 1, 0, "model_computed_fields", "A dictionary of computed field names and their corresponding ComputedFieldInfo objects."], [13, 4, 1, 0, "model_config", "Configuration for the model, should be a dictionary conforming to [ConfigDict][pydantic.config.ConfigDict]."], [13, 4, 1, 0, "model_fields", "Metadata about the fields defined on the model, mapping of field names to [FieldInfo][pydantic.fields.FieldInfo] objects."]], "tortoise.contrib.pydantic.base.PydanticListModel.__init__": [[13, 2, 2, "tortoise.contrib.pydantic.base.PydanticListModel", "data", "Pydantic BaseModel for List of Tortoise Models"], [13, 2, 2, "tortoise.contrib.pydantic.base.PydanticListModel", "root", "Pydantic BaseModel for List of Tortoise Models"]], "tortoise.contrib.pydantic.base.PydanticListModel.from_queryset": [[13, 2, 2, 0, "queryset", "a queryset on the model this PydanticListModel is based on."]], "tortoise.contrib.pydantic.base.PydanticModel": [[13, 3, 1, 0, "from_queryset", "Returns a serializable pydantic model instance that contains a list of models, from the provided queryset."], [13, 3, 1, 0, "from_queryset_single", "Returns a serializable pydantic model instance for a single model from the provided queryset."], [13, 3, 1, 0, "from_tortoise_orm", "Returns a serializable pydantic model instance built from the provided model instance."], [13, 4, 1, 0, "model_computed_fields", "A dictionary of computed field names and their corresponding ComputedFieldInfo objects."], [13, 4, 1, 0, "model_config", "Configuration for the model, should be a dictionary conforming to [ConfigDict][pydantic.config.ConfigDict]."], [13, 4, 1, 0, "model_fields", "Metadata about the fields defined on the model, mapping of field names to [FieldInfo][pydantic.fields.FieldInfo] objects."]], "tortoise.contrib.pydantic.base.PydanticModel.__init__": [[13, 2, 2, "tortoise.contrib.pydantic.base.PydanticModel", "data", "Pydantic BaseModel for Tortoise objects."]], "tortoise.contrib.pydantic.base.PydanticModel.from_queryset": [[13, 2, 2, 0, "queryset", "a queryset on the model this PydanticModel is based on."]], "tortoise.contrib.pydantic.base.PydanticModel.from_queryset_single": [[13, 2, 2, 0, "queryset", "a queryset on the model this PydanticModel is based on."]], "tortoise.contrib.pydantic.base.PydanticModel.from_tortoise_orm": [[13, 2, 2, 0, "obj", "The Model instance you want serialized."]], "tortoise.contrib.pydantic.creator": [[13, 1, 1, 0, "PydanticMeta", "The PydanticMeta class is used to configure metadata for generating the pydantic Model."], [13, 6, 1, 0, "pydantic_model_creator", "Function to build Pydantic Model off Tortoise Model."], [13, 6, 1, 0, "pydantic_queryset_creator", "Function to build a Pydantic Model list off Tortoise Model."]], "tortoise.contrib.pydantic.creator.PydanticMeta": [[13, 4, 1, 0, "allow_cycles", "Allow cycles in recursion - This can result in HUGE data - Be careful! Please use this with exclude/include and sane max_recursion"], [13, 4, 1, 0, "backward_relations", "Use backward relations without annotations - not recommended, it can be huge data without control"], [13, 4, 1, 0, "computed", "Computed fields can be listed here to use in pydantic model"], [13, 4, 1, 0, "exclude", "Fields listed in this property will be excluded from pydantic model"], [13, 4, 1, 0, "exclude_raw_fields", "If we should exclude raw fields (the ones have _id suffixes) of relations"], [13, 4, 1, 0, "include", "If not empty, only fields this property contains will be in the pydantic model"], [13, 4, 1, 0, "max_recursion", "Maximum recursion level allowed"], [13, 4, 1, 0, "model_config", "Allows user to specify custom config for generated model"], [13, 4, 1, 0, "sort_alphabetically", "Sort fields alphabetically. If not set (or False) then leave fields in declaration order"]], "tortoise.contrib.pydantic.creator.pydantic_model_creator": [[13, 2, 2, 0, "_stack", "Internal parameter to track recursion"], [13, 2, 2, 0, "allow_cycles", "Do we allow any cycles in the generated model? This is only useful for recursive/self-referential models."], [13, 2, 2, 0, "cls", "The Tortoise Model"], [13, 2, 2, 0, "computed", "Extra computed fields to include from the provided model."], [13, 2, 2, 0, "exclude", "Extra fields to exclude from the provided model."], [13, 2, 2, 0, "exclude_readonly", "Build a subset model that excludes any readonly fields"], [13, 2, 2, 0, "include", "Extra fields to include from the provided model."], [13, 2, 2, 0, "meta_override", "A PydanticMeta class to override model's values."], [13, 2, 2, 0, "model_config", "A custom config to use as pydantic config."], [13, 2, 2, 0, "module", "The name of the module that the model belongs to."], [13, 2, 2, 0, "name", "Specify a custom name explicitly, instead of a generated name."], [13, 2, 2, 0, "optional", "Extra optional fields for the provided model."], [13, 2, 2, 0, "sort_alphabetically", "Sort the parameters alphabetically instead of Field-definition order."], [13, 2, 2, 0, "validators", "A dictionary of methods that validate fields."]], "tortoise.contrib.pydantic.creator.pydantic_queryset_creator": [[13, 2, 2, 0, "allow_cycles", "Do we allow any cycles in the generated model? This is only useful for recursive/self-referential models."], [13, 2, 2, 0, "cls", "The Tortoise Model to put in a list."], [13, 2, 2, 0, "computed", "Extra computed fields to include from the provided model."], [13, 2, 2, 0, "exclude", "Extra fields to exclude from the provided model."], [13, 2, 2, 0, "include", "Extra fields to include from the provided model."], [13, 2, 2, 0, "name", "Specify a custom name explicitly, instead of a generated name."], [13, 2, 2, 0, "sort_alphabetically", "Sort the parameters alphabetically instead of Field-definition order."]], "tortoise.contrib.quart": [[14, 6, 1, 0, "register_tortoise", "Registers before_serving and after_serving hooks to set-up and tear-down Tortoise-ORM inside a Quart service. It also registers a CLI command generate_schemas that will generate the schemas."]], "tortoise.contrib.quart.register_tortoise": [[14, 2, 2, 0, "app", "Quart app."], [14, 2, 2, 0, "config", "Dict containing config:"], [14, 2, 2, 0, "config_file", "Path to .json or .yml (if PyYAML installed) file containing config with same format as above."], [14, 2, 2, 0, "db_url", "Use a DB_URL string."], [14, 2, 2, 0, "generate_schemas", "True to generate schema immediately."], [14, 2, 2, 0, "modules", "Dictionary of key: [list_of_modules] that defined \"apps\" and modules that should be discovered for models."]], "tortoise.contrib.sanic": [[15, 6, 1, 0, "register_tortoise", "Registers before_server_start and after_server_stop hooks to set-up and tear-down Tortoise-ORM inside a Sanic webserver."]], "tortoise.contrib.sanic.register_tortoise": [[15, 2, 2, 0, "app", "Sanic app."], [15, 2, 2, 0, "config", "Dict containing config:"], [15, 2, 2, 0, "config_file", "Path to .json or .yml (if PyYAML installed) file containing config with same format as above."], [15, 2, 2, 0, "db_url", "Use a DB_URL string."], [15, 2, 2, 0, "generate_schemas", "True to generate schema immediately."], [15, 2, 2, 0, "modules", "Dictionary of key: [list_of_modules] that defined \"apps\" and modules that should be discovered for models."]], "tortoise.contrib.sqlite.functions": [[31, 1, 1, 0, "Random", "Generate random number."]], "tortoise.contrib.sqlite.functions.Random.__init__": [[31, 2, 2, "tortoise.contrib.sqlite.functions.Random", "alias", "Generate random number."]], "tortoise.contrib.starlette": [[16, 6, 1, 0, "register_tortoise", "Registers startup and shutdown events to set-up and tear-down Tortoise-ORM inside a Starlette application."]], "tortoise.contrib.starlette.register_tortoise": [[16, 2, 2, 0, "app", "Starlette app."], [16, 2, 2, 0, "config", "Dict containing config:"], [16, 2, 2, 0, "config_file", "Path to .json or .yml (if PyYAML installed) file containing config with same format as above."], [16, 2, 2, 0, "db_url", "Use a DB_URL string."], [16, 2, 2, 0, "generate_schemas", "True to generate schema immediately."], [16, 2, 2, 0, "modules", "Dictionary of key: [list_of_modules] that defined \"apps\" and modules that should be discovered for models."]], "tortoise.contrib.test": [[17, 1, 1, 0, "IsolatedTestCase", "Bases: SimpleTestCase"], [17, 1, 1, 0, "SimpleTestCase", "Bases: IsolatedAsyncioTestCase"], [17, 7, 1, 0, "SkipTest", "Bases: Exception"], [17, 1, 1, 0, "TestCase", "Bases: TruncationTestCase"], [17, 1, 1, 0, "TruncationTestCase", "Bases: SimpleTestCase"], [17, 6, 1, 0, "env_initializer", "Calls initializer() with parameters mapped from environment variables."], [17, 6, 1, 0, "expectedFailure", "Mark test as expecting failure."], [17, 6, 1, 0, "finalizer", "Cleans up the DB after testing. Must be called as part of the test environment teardown."], [17, 6, 1, 0, "getDBConfig", "DB Config factory, for use in testing."], [17, 6, 1, 0, "init_memory_sqlite", "For single file style to run code with memory sqlite"], [17, 6, 1, 0, "initializer", "Sets up the DB for testing. Must be called as part of test environment setup."], [17, 6, 1, 0, "requireCapability", "Skip a test if the required capabilities are not matched."], [17, 6, 1, 0, "skip", "Unconditionally skip a test."], [17, 6, 1, 0, "skipIf", "Skip a test if the condition is true."], [17, 6, 1, 0, "skipUnless", "Skip a test unless the condition is true."]], "tortoise.contrib.test.IsolatedTestCase": [[17, 4, 1, 0, "tortoise_test_modules", ""]], "tortoise.contrib.test.IsolatedTestCase.__init__": [[17, 2, 2, "tortoise.contrib.test.IsolatedTestCase", "methodName", "Bases: SimpleTestCase"]], "tortoise.contrib.test.SimpleTestCase": [[17, 3, 1, 0, "assertListSortEqual", "None"], [17, 3, 1, 0, "asyncSetUp", "None"], [17, 3, 1, 0, "asyncTearDown", "None"]], "tortoise.contrib.test.SimpleTestCase.__init__": [[17, 2, 2, "tortoise.contrib.test.SimpleTestCase", "methodName", "Bases: IsolatedAsyncioTestCase"]], "tortoise.contrib.test.SimpleTestCase.assertListSortEqual": [[17, 2, 2, "tortoise.contrib.test.SimpleTestCase.assertListSortEqual", "list1", "None"], [17, 2, 2, "tortoise.contrib.test.SimpleTestCase.assertListSortEqual", "list2", "None"], [17, 2, 2, "tortoise.contrib.test.SimpleTestCase.assertListSortEqual", "msg", "None"], [17, 2, 2, "tortoise.contrib.test.SimpleTestCase.assertListSortEqual", "sorted_key", "None"]], "tortoise.contrib.test.TestCase": [[17, 3, 1, 0, "asyncSetUp", "None"], [17, 3, 1, 0, "asyncTearDown", "None"]], "tortoise.contrib.test.TestCase.__init__": [[17, 2, 2, "tortoise.contrib.test.TestCase", "methodName", "Bases: TruncationTestCase"]], "tortoise.contrib.test.TruncationTestCase.__init__": [[17, 2, 2, "tortoise.contrib.test.TruncationTestCase", "methodName", "Bases: SimpleTestCase"]], "tortoise.contrib.test.expectedFailure": [[17, 2, 2, "tortoise.contrib.test.expectedFailure", "test_item", "Mark test as expecting failure."]], "tortoise.contrib.test.getDBConfig": [[17, 2, 2, 0, "app_label", "Label of the app (must be distinct for multiple apps)."], [17, 2, 2, 0, "modules", "List of modules to look for models in."]], "tortoise.contrib.test.init_memory_sqlite": [[17, 2, 2, 0, "models", "list_of_modules that should be discovered for models, default to ['__main__']."]], "tortoise.contrib.test.initializer": [[17, 2, 2, 0, "app_label", "The name of the APP to initialise the modules in, defaults to \"models\""], [17, 2, 2, 0, "db_url", "The db_url, defaults to sqlite://:memory."], [17, 2, 2, 0, "loop", "Optional event loop."], [17, 2, 2, 0, "modules", "List of modules to look for models in."]], "tortoise.contrib.test.requireCapability": [[17, 2, 2, 0, "conditions", "capability tests which must all pass for the test to run."], [17, 2, 2, 0, "connection_name", "name of the connection to retrieve capabilities from."]], "tortoise.contrib.test.skip": [[17, 2, 2, "tortoise.contrib.test.skip", "reason", "Unconditionally skip a test."]], "tortoise.contrib.test.skipIf": [[17, 2, 2, "tortoise.contrib.test.skipIf", "condition", "Skip a test if the condition is true."], [17, 2, 2, "tortoise.contrib.test.skipIf", "reason", "Skip a test if the condition is true."]], "tortoise.contrib.test.skipUnless": [[17, 2, 2, "tortoise.contrib.test.skipUnless", "condition", "Skip a test unless the condition is true."], [17, 2, 2, "tortoise.contrib.test.skipUnless", "reason", "Skip a test unless the condition is true."]], "tortoise.exceptions": [[28, 7, 1, 0, "BaseORMException", "Bases: Exception"], [28, 7, 1, 0, "ConfigurationError", "Bases: BaseORMException"], [28, 7, 1, 0, "DBConnectionError", "Bases: BaseORMException, ConnectionError"], [28, 7, 1, 0, "DoesNotExist", "Bases: NotExistOrMultiple"], [28, 7, 1, 0, "FieldError", "Bases: BaseORMException"], [28, 7, 1, 0, "IncompleteInstanceError", "Bases: OperationalError"], [28, 7, 1, 0, "IntegrityError", "Bases: OperationalError"], [28, 7, 1, 0, "MultipleObjectsReturned", "Bases: NotExistOrMultiple"], [28, 7, 1, 0, "NoValuesFetched", "Bases: OperationalError"], [28, 7, 1, 0, "NotExistOrMultiple", "Bases: OperationalError"], [28, 7, 1, 0, "ObjectDoesNotExistError", "Bases: OperationalError, KeyError"], [28, 7, 1, 0, "OperationalError", "Bases: BaseORMException"], [28, 7, 1, 0, "ParamsError", "Bases: BaseORMException"], [28, 7, 1, 0, "TransactionManagementError", "Bases: BaseORMException"], [28, 7, 1, 0, "UnSupportedError", "Bases: BaseORMException"], [28, 7, 1, 0, "ValidationError", "Bases: BaseORMException"]], "tortoise.exceptions.DoesNotExist": [[28, 4, 1, 0, "TEMPLATE", ""]], "tortoise.exceptions.DoesNotExist.__init__": [[28, 2, 2, "tortoise.exceptions.DoesNotExist", "args", "Bases: NotExistOrMultiple"], [28, 2, 2, "tortoise.exceptions.DoesNotExist", "model", "Bases: NotExistOrMultiple"]], "tortoise.exceptions.MultipleObjectsReturned": [[28, 4, 1, 0, "TEMPLATE", ""]], "tortoise.exceptions.MultipleObjectsReturned.__init__": [[28, 2, 2, "tortoise.exceptions.MultipleObjectsReturned", "args", "Bases: NotExistOrMultiple"], [28, 2, 2, "tortoise.exceptions.MultipleObjectsReturned", "model", "Bases: NotExistOrMultiple"]], "tortoise.exceptions.NotExistOrMultiple": [[28, 4, 1, 0, "TEMPLATE", ""]], "tortoise.exceptions.NotExistOrMultiple.__init__": [[28, 2, 2, "tortoise.exceptions.NotExistOrMultiple", "args", "Bases: OperationalError"], [28, 2, 2, "tortoise.exceptions.NotExistOrMultiple", "model", "Bases: OperationalError"]], "tortoise.exceptions.ObjectDoesNotExistError.__init__": [[28, 2, 2, "tortoise.exceptions.ObjectDoesNotExistError", "model", "Bases: OperationalError, KeyError"], [28, 2, 2, "tortoise.exceptions.ObjectDoesNotExistError", "pk_name", "Bases: OperationalError, KeyError"], [28, 2, 2, "tortoise.exceptions.ObjectDoesNotExistError", "pk_val", "Bases: OperationalError, KeyError"]], "tortoise.expressions": [[29, 1, 1, 0, "Case", "Case expression."], [29, 1, 1, 0, "Q", "Q Expression container. Q Expressions are a useful tool to compose a query from many small parts."], [29, 1, 1, 0, "When", "When expression."]], "tortoise.expressions.Case.__init__": [[29, 2, 2, 0, "args", "When objects"], [29, 2, 2, 0, "default", "value for 'CASE WHEN ..."]], "tortoise.expressions.Q": [[29, 4, 1, 0, "AND", ""], [29, 4, 1, 0, "OR", ""], [29, 3, 1, 0, "__and__", "Returns a binary AND of Q objects, use AND operator."], [29, 3, 1, 0, "__invert__", "Returns a negated instance of the Q object, use ~ operator."], [29, 3, 1, 0, "__or__", "Returns a binary OR of Q objects, use OR operator."], [29, 4, 1, 0, "children", "Contains the sub-Q's that this Q is made up of"], [29, 4, 1, 0, "filters", "Contains the filters applied to this Q"], [29, 4, 1, 0, "join_type", "Specifies if this Q does an AND or OR on its children"], [29, 3, 1, 0, "negate", "Negates the current Q object. (mutation)"], [29, 3, 1, 0, "resolve", "Resolves the logical Q chain into the parts of a SQL statement."]], "tortoise.expressions.Q.__and__": [[29, 2, 2, "tortoise.expressions.Q.__and__", "other", "Returns a binary AND of Q objects, use AND operator."]], "tortoise.expressions.Q.__init__": [[29, 2, 2, 0, "args", "Inner Q expressions that you want to wrap."], [29, 2, 2, 0, "join_type", "Is the join an AND or OR join type?"], [29, 2, 2, 0, "kwargs", "Filter statements that this Q object should encapsulate."]], "tortoise.expressions.Q.__or__": [[29, 2, 2, "tortoise.expressions.Q.__or__", "other", "Returns a binary OR of Q objects, use OR operator."]], "tortoise.expressions.Q.resolve": [[29, 2, 2, 0, "model", "The Model this Q Expression should be resolved on."], [29, 2, 2, 0, "table", "pypika.Table to keep track of the virtual SQL table (to allow self referential joins)"]], "tortoise.expressions.When.__init__": [[29, 2, 2, 0, "args", "Q objects"], [29, 2, 2, 0, "kwargs", "keyword criterion like filter"], [29, 2, 2, 0, "negate", "false (default)"], [29, 2, 2, 0, "then", "value for criterion"]], "tortoise.fields": [[30, 0, 0, 1, "base", ""], [30, 0, 0, 1, "data", ""], [30, 0, 0, 1, "relational", ""]], "tortoise.fields.base": [[30, 1, 1, 0, "Field", "Base Field type."], [30, 1, 1, 0, "OnDelete", "CASCADE = 'CASCADE'      NO_ACTION = 'NO ACTION'      RESTRICT = 'RESTRICT'      SET_DEFAULT = 'SET DEFAULT'      SET_NULL = 'SET NULL'"]], "tortoise.fields.base.Field": [[30, 4, 1, 0, "GENERATED_SQL", "The SQL that instructs the DB to auto-generate this field. Required if allows_generated is True."], [30, 4, 1, 0, "SQL_TYPE", "The SQL type as a string that the DB will use."], [30, 4, 1, 0, "allows_generated", "Is this field able to be DB-generated?"], [30, 5, 1, 0, "constraints", "Returns a dict with constraints defined in the Pydantic/JSONSchema format."], [30, 3, 1, 0, "describe", "Describes the field."], [30, 4, 1, 0, "field_type", "The Python type the field is. If adding a type as a mixin, _FieldMeta will automatically set this to that."], [30, 4, 1, 0, "function_cast", "A casting term that we need to apply in case the DB needs emulation help."], [30, 3, 1, 0, "get_db_field_types", "Returns the DB types for this field."], [30, 3, 1, 0, "get_for_dialect", "Returns a field by dialect override."], [30, 4, 1, 0, "has_db_field", "Does this field have a direct corresponding DB column? Or is the field virtualized?"], [30, 4, 1, 0, "indexable", "Is the field indexable? Set to False if this field can't be indexed reliably."], [30, 5, 1, 0, "required", "Returns True if the field is required to be provided."], [30, 4, 1, 0, "skip_to_python_if_native", "If the DB driver natively supports this Python type, should we skip it? This is for optimization purposes only, where we don't need to force type conversion between Python and the DB."], [30, 3, 1, 0, "to_db_value", "Converts from the Python type to the DB type."], [30, 3, 1, 0, "to_python_value", "Converts from the DB type to the Python type."], [30, 3, 1, 0, "validate", "Validate whether given value is valid"]], "tortoise.fields.base.Field.__init__": [[30, 2, 2, 0, "db_index", "Should this field be indexed by itself?"], [30, 2, 2, 0, "default", "A default value for the field if not specified on Model creation. This can also be a callable for dynamic defaults in which case we will call it. The default value will not be part of the schema."], [30, 2, 2, 0, "description", "Field description."], [30, 2, 2, 0, "generated", "Is this field DB-generated?"], [30, 2, 2, "tortoise.fields.base.Field", "kwargs", "Base Field type."], [30, 2, 2, "tortoise.fields.base.Field", "model", "Base Field type."], [30, 2, 2, 0, "null", "Is this field nullable?"], [30, 2, 2, 0, "primary_key", "Is this field a Primary Key? Can only have a single such field on the Model, and if none is specified it will autogenerate a default primary key called id."], [30, 2, 2, 0, "source_field", "Provide a source_field name if the DB column name needs to be something specific instead of generated off the field name."], [30, 2, 2, 0, "unique", "Is this field unique?"], [30, 2, 2, 0, "validators", "Validators for this field."]], "tortoise.fields.base.Field.describe": [[30, 2, 2, 0, "serializable", "False if you want raw python objects, True for JSON-serializable data."]], "tortoise.fields.base.Field.get_for_dialect": [[30, 2, 2, 0, "dialect", "The requested SQL Dialect."], [30, 2, 2, 0, "key", "The attribute/method name."]], "tortoise.fields.base.Field.to_db_value": [[30, 2, 2, 0, "instance", "Model class or Model instance provided to look up."], [30, 2, 2, 0, "value", "Current python value in model."]], "tortoise.fields.base.Field.to_python_value": [[30, 2, 2, 0, "value", "Value from DB"]], "tortoise.fields.base.Field.validate": [[30, 2, 2, 0, "value", "Value to be validation"]], "tortoise.fields.base.OnDelete": [[30, 4, 1, 0, "CASCADE", ""], [30, 4, 1, 0, "NO_ACTION", ""], [30, 4, 1, 0, "RESTRICT", ""], [30, 4, 1, 0, "SET_DEFAULT", ""], [30, 4, 1, 0, "SET_NULL", ""]], "tortoise.fields.base.OnDelete.__init__": [[30, 2, 2, "tortoise.fields.base.OnDelete", "boundary", "CASCADE = 'CASCADE'      NO_ACTION = 'NO ACTION'      RESTRICT = 'RESTRICT'      SET_DEFAULT = 'SET DEFAULT'      SET_NULL = 'SET NULL'"], [30, 2, 2, "tortoise.fields.base.OnDelete", "module", "CASCADE = 'CASCADE'      NO_ACTION = 'NO ACTION'      RESTRICT = 'RESTRICT'      SET_DEFAULT = 'SET DEFAULT'      SET_NULL = 'SET NULL'"], [30, 2, 2, "tortoise.fields.base.OnDelete", "names", "CASCADE = 'CASCADE'      NO_ACTION = 'NO ACTION'      RESTRICT = 'RESTRICT'      SET_DEFAULT = 'SET DEFAULT'      SET_NULL = 'SET NULL'"], [30, 2, 2, "tortoise.fields.base.OnDelete", "qualname", "CASCADE = 'CASCADE'      NO_ACTION = 'NO ACTION'      RESTRICT = 'RESTRICT'      SET_DEFAULT = 'SET DEFAULT'      SET_NULL = 'SET NULL'"], [30, 2, 2, "tortoise.fields.base.OnDelete", "start", "CASCADE = 'CASCADE'      NO_ACTION = 'NO ACTION'      RESTRICT = 'RESTRICT'      SET_DEFAULT = 'SET DEFAULT'      SET_NULL = 'SET NULL'"], [30, 2, 2, "tortoise.fields.base.OnDelete", "type", "CASCADE = 'CASCADE'      NO_ACTION = 'NO ACTION'      RESTRICT = 'RESTRICT'      SET_DEFAULT = 'SET DEFAULT'      SET_NULL = 'SET NULL'"], [30, 2, 2, "tortoise.fields.base.OnDelete", "value", "CASCADE = 'CASCADE'      NO_ACTION = 'NO ACTION'      RESTRICT = 'RESTRICT'      SET_DEFAULT = 'SET DEFAULT'      SET_NULL = 'SET NULL'"]], "tortoise.fields.data": [[30, 1, 1, 0, "BigIntField", "Big integer field. (64-bit signed)"], [30, 1, 1, 0, "BinaryField", "Binary field."], [30, 1, 1, 0, "BooleanField", "Boolean field."], [30, 6, 1, 0, "CharEnumField", "Char Enum Field"], [30, 1, 1, 0, "CharField", "Character field."], [30, 1, 1, 0, "DateField", "Date field."], [30, 1, 1, 0, "DatetimeField", "Datetime field."], [30, 1, 1, 0, "DecimalField", "Accurate decimal field."], [30, 1, 1, 0, "FloatField", "Float (double) field."], [30, 6, 1, 0, "IntEnumField", "Enum Field"], [30, 1, 1, 0, "IntField", "Integer field. (32-bit signed)"], [30, 1, 1, 0, "JSONField", "JSON field."], [30, 1, 1, 0, "SmallIntField", "Small integer field. (16-bit signed)"], [30, 1, 1, 0, "TextField", "Large Text field."], [30, 1, 1, 0, "TimeDeltaField", "A field for storing time differences."], [30, 1, 1, 0, "UUIDField", "UUID Field"]], "tortoise.fields.data.BigIntField": [[30, 5, 1, 0, "constraints", "Returns a dict with constraints defined in the Pydantic/JSONSchema format."]], "tortoise.fields.data.BigIntField.__init__": [[30, 2, 2, "tortoise.fields.data.BigIntField", "kwargs", "Big integer field. (64-bit signed)"], [30, 2, 2, "tortoise.fields.data.BigIntField", "primary_key", "Big integer field. (64-bit signed)"]], "tortoise.fields.data.BinaryField": [[30, 4, 1, 0, "field_type", "alias of bytes"]], "tortoise.fields.data.BinaryField.__init__": [[30, 2, 2, "tortoise.fields.data.BinaryField", "db_index", "Binary field."], [30, 2, 2, "tortoise.fields.data.BinaryField", "default", "Binary field."], [30, 2, 2, "tortoise.fields.data.BinaryField", "description", "Binary field."], [30, 2, 2, "tortoise.fields.data.BinaryField", "generated", "Binary field."], [30, 2, 2, "tortoise.fields.data.BinaryField", "kwargs", "Binary field."], [30, 2, 2, "tortoise.fields.data.BinaryField", "model", "Binary field."], [30, 2, 2, "tortoise.fields.data.BinaryField", "null", "Binary field."], [30, 2, 2, "tortoise.fields.data.BinaryField", "primary_key", "Binary field."], [30, 2, 2, "tortoise.fields.data.BinaryField", "source_field", "Binary field."], [30, 2, 2, "tortoise.fields.data.BinaryField", "unique", "Binary field."], [30, 2, 2, "tortoise.fields.data.BinaryField", "validators", "Binary field."]], "tortoise.fields.data.BooleanField": [[30, 4, 1, 0, "field_type", "alias of bool"]], "tortoise.fields.data.BooleanField.__init__": [[30, 2, 2, "tortoise.fields.data.BooleanField", "db_index", "Boolean field."], [30, 2, 2, "tortoise.fields.data.BooleanField", "default", "Boolean field."], [30, 2, 2, "tortoise.fields.data.BooleanField", "description", "Boolean field."], [30, 2, 2, "tortoise.fields.data.BooleanField", "generated", "Boolean field."], [30, 2, 2, "tortoise.fields.data.BooleanField", "kwargs", "Boolean field."], [30, 2, 2, "tortoise.fields.data.BooleanField", "model", "Boolean field."], [30, 2, 2, "tortoise.fields.data.BooleanField", "null", "Boolean field."], [30, 2, 2, "tortoise.fields.data.BooleanField", "primary_key", "Boolean field."], [30, 2, 2, "tortoise.fields.data.BooleanField", "source_field", "Boolean field."], [30, 2, 2, "tortoise.fields.data.BooleanField", "unique", "Boolean field."], [30, 2, 2, "tortoise.fields.data.BooleanField", "validators", "Boolean field."]], "tortoise.fields.data.CharEnumField": [[30, 2, 2, "tortoise.fields.data.CharEnumField", "description", "Char Enum Field"], [30, 2, 2, "tortoise.fields.data.CharEnumField", "enum_type", "Char Enum Field"], [30, 2, 2, "tortoise.fields.data.CharEnumField", "kwargs", "Char Enum Field"], [30, 2, 2, "tortoise.fields.data.CharEnumField", "max_length", "Char Enum Field"]], "tortoise.fields.data.CharField": [[30, 5, 1, 0, "constraints", "Returns a dict with constraints defined in the Pydantic/JSONSchema format."], [30, 4, 1, 0, "field_type", "alias of str"]], "tortoise.fields.data.CharField.__init__": [[30, 2, 2, "tortoise.fields.data.CharField", "kwargs", "Character field."], [30, 2, 2, "tortoise.fields.data.CharField", "max_length", "Character field."]], "tortoise.fields.data.DateField": [[30, 4, 1, 0, "field_type", "alias of date"]], "tortoise.fields.data.DateField.__init__": [[30, 2, 2, "tortoise.fields.data.DateField", "db_index", "Date field."], [30, 2, 2, "tortoise.fields.data.DateField", "default", "Date field."], [30, 2, 2, "tortoise.fields.data.DateField", "description", "Date field."], [30, 2, 2, "tortoise.fields.data.DateField", "generated", "Date field."], [30, 2, 2, "tortoise.fields.data.DateField", "kwargs", "Date field."], [30, 2, 2, "tortoise.fields.data.DateField", "model", "Date field."], [30, 2, 2, "tortoise.fields.data.DateField", "null", "Date field."], [30, 2, 2, "tortoise.fields.data.DateField", "primary_key", "Date field."], [30, 2, 2, "tortoise.fields.data.DateField", "source_field", "Date field."], [30, 2, 2, "tortoise.fields.data.DateField", "unique", "Date field."], [30, 2, 2, "tortoise.fields.data.DateField", "validators", "Date field."]], "tortoise.fields.data.DatetimeField": [[30, 5, 1, 0, "constraints", "Returns a dict with constraints defined in the Pydantic/JSONSchema format."], [30, 3, 1, 0, "describe", "Describes the field."], [30, 4, 1, 0, "field_type", "alias of datetime"]], "tortoise.fields.data.DatetimeField.__init__": [[30, 2, 2, "tortoise.fields.data.DatetimeField", "auto_now", "Datetime field."], [30, 2, 2, "tortoise.fields.data.DatetimeField", "auto_now_add", "Datetime field."], [30, 2, 2, "tortoise.fields.data.DatetimeField", "kwargs", "Datetime field."]], "tortoise.fields.data.DatetimeField.describe": [[30, 2, 2, 0, "serializable", "False if you want raw python objects, True for JSON-serializable data."]], "tortoise.fields.data.DecimalField": [[30, 4, 1, 0, "field_type", "alias of Decimal"]], "tortoise.fields.data.DecimalField.__init__": [[30, 2, 2, "tortoise.fields.data.DecimalField", "decimal_places", "Accurate decimal field."], [30, 2, 2, "tortoise.fields.data.DecimalField", "kwargs", "Accurate decimal field."], [30, 2, 2, "tortoise.fields.data.DecimalField", "max_digits", "Accurate decimal field."]], "tortoise.fields.data.FloatField": [[30, 4, 1, 0, "field_type", "alias of float"]], "tortoise.fields.data.FloatField.__init__": [[30, 2, 2, "tortoise.fields.data.FloatField", "db_index", "Float (double) field."], [30, 2, 2, "tortoise.fields.data.FloatField", "default", "Float (double) field."], [30, 2, 2, "tortoise.fields.data.FloatField", "description", "Float (double) field."], [30, 2, 2, "tortoise.fields.data.FloatField", "generated", "Float (double) field."], [30, 2, 2, "tortoise.fields.data.FloatField", "kwargs", "Float (double) field."], [30, 2, 2, "tortoise.fields.data.FloatField", "model", "Float (double) field."], [30, 2, 2, "tortoise.fields.data.FloatField", "null", "Float (double) field."], [30, 2, 2, "tortoise.fields.data.FloatField", "primary_key", "Float (double) field."], [30, 2, 2, "tortoise.fields.data.FloatField", "source_field", "Float (double) field."], [30, 2, 2, "tortoise.fields.data.FloatField", "unique", "Float (double) field."], [30, 2, 2, "tortoise.fields.data.FloatField", "validators", "Float (double) field."]], "tortoise.fields.data.IntEnumField": [[30, 2, 2, "tortoise.fields.data.IntEnumField", "description", "Enum Field"], [30, 2, 2, "tortoise.fields.data.IntEnumField", "enum_type", "Enum Field"], [30, 2, 2, "tortoise.fields.data.IntEnumField", "kwargs", "Enum Field"]], "tortoise.fields.data.IntField": [[30, 5, 1, 0, "constraints", "Returns a dict with constraints defined in the Pydantic/JSONSchema format."], [30, 4, 1, 0, "field_type", "alias of int"]], "tortoise.fields.data.IntField.__init__": [[30, 2, 2, "tortoise.fields.data.IntField", "kwargs", "Integer field. (32-bit signed)"], [30, 2, 2, "tortoise.fields.data.IntField", "primary_key", "Integer field. (32-bit signed)"]], "tortoise.fields.data.JSONField.__init__": [[30, 2, 2, "tortoise.fields.data.JSONField", "&#x27;", "JSON field."], [30, 2, 2, "tortoise.fields.data.JSONField", "&#x27;:&#x27;))", "JSON field."], [30, 2, 2, "tortoise.fields.data.JSONField", "**kwargs", "JSON field."], [30, 2, 2, "tortoise.fields.data.JSONField", "decoder=&lt;function loads&gt;", "JSON field."], [30, 2, 2, "tortoise.fields.data.JSONField", "separators=(&#x27;", "JSON field."]], "tortoise.fields.data.JSONField.__init__.encoder=functools": [[30, 2, 2, "tortoise.fields.data.JSONField", "partial(&lt;function dumps&gt;", "JSON field."]], "tortoise.fields.data.SmallIntField": [[30, 5, 1, 0, "constraints", "Returns a dict with constraints defined in the Pydantic/JSONSchema format."]], "tortoise.fields.data.SmallIntField.__init__": [[30, 2, 2, "tortoise.fields.data.SmallIntField", "kwargs", "Small integer field. (16-bit signed)"], [30, 2, 2, "tortoise.fields.data.SmallIntField", "primary_key", "Small integer field. (16-bit signed)"]], "tortoise.fields.data.TextField": [[30, 4, 1, 0, "field_type", "alias of str"]], "tortoise.fields.data.TextField.__init__": [[30, 2, 2, "tortoise.fields.data.TextField", "db_index", "Large Text field."], [30, 2, 2, "tortoise.fields.data.TextField", "kwargs", "Large Text field."], [30, 2, 2, "tortoise.fields.data.TextField", "primary_key", "Large Text field."], [30, 2, 2, "tortoise.fields.data.TextField", "unique", "Large Text field."]], "tortoise.fields.data.TimeDeltaField": [[30, 4, 1, 0, "field_type", "alias of timedelta"]], "tortoise.fields.data.TimeDeltaField.__init__": [[30, 2, 2, "tortoise.fields.data.TimeDeltaField", "db_index", "A field for storing time differences."], [30, 2, 2, "tortoise.fields.data.TimeDeltaField", "default", "A field for storing time differences."], [30, 2, 2, "tortoise.fields.data.TimeDeltaField", "description", "A field for storing time differences."], [30, 2, 2, "tortoise.fields.data.TimeDeltaField", "generated", "A field for storing time differences."], [30, 2, 2, "tortoise.fields.data.TimeDeltaField", "kwargs", "A field for storing time differences."], [30, 2, 2, "tortoise.fields.data.TimeDeltaField", "model", "A field for storing time differences."], [30, 2, 2, "tortoise.fields.data.TimeDeltaField", "null", "A field for storing time differences."], [30, 2, 2, "tortoise.fields.data.TimeDeltaField", "primary_key", "A field for storing time differences."], [30, 2, 2, "tortoise.fields.data.TimeDeltaField", "source_field", "A field for storing time differences."], [30, 2, 2, "tortoise.fields.data.TimeDeltaField", "unique", "A field for storing time differences."], [30, 2, 2, "tortoise.fields.data.TimeDeltaField", "validators", "A field for storing time differences."]], "tortoise.fields.data.UUIDField": [[30, 4, 1, 0, "field_type", "alias of UUID"]], "tortoise.fields.data.UUIDField.__init__": [[30, 2, 2, "tortoise.fields.data.UUIDField", "kwargs", "UUID Field"]], "tortoise.fields.relational": [[30, 6, 1, 0, "ForeignKeyField", "ForeignKey relation field."], [39, 8, 1, 0, "ForeignKeyNullableRelation", "Type hint for the result of accessing the ForeignKeyField() field in the model when obtained model can be nullable."], [39, 8, 1, 0, "ForeignKeyRelation", "Type hint for the result of accessing the ForeignKeyField() field in the model."], [30, 6, 1, 0, "ManyToManyField", "ManyToMany relation field."], [39, 1, 1, "id56", "ManyToManyRelation", "Many-to-many relation container for ManyToManyField()."], [30, 6, 1, 0, "OneToOneField", "OneToOne relation field."], [39, 8, 1, 0, "OneToOneNullableRelation", "Type hint for the result of accessing the OneToOneField() field in the model when obtained model can be nullable."], [39, 8, 1, 0, "OneToOneRelation", "Type hint for the result of accessing the OneToOneField() field in the model."], [39, 1, 1, 0, "ReverseRelation", "Relation container for ForeignKeyField()."]], "tortoise.fields.relational.ForeignKeyField": [[30, 2, 2, "tortoise.fields.relational.ForeignKeyField", "db_constraint", "ForeignKey relation field."], [30, 2, 2, "tortoise.fields.relational.ForeignKeyField", "kwargs", "ForeignKey relation field."], [30, 2, 2, "tortoise.fields.relational.ForeignKeyField", "model_name", "ForeignKey relation field."], [30, 2, 2, "tortoise.fields.relational.ForeignKeyField", "null", "ForeignKey relation field."], [30, 2, 2, "tortoise.fields.relational.ForeignKeyField", "on_delete", "ForeignKey relation field."], [30, 2, 2, "tortoise.fields.relational.ForeignKeyField", "related_name", "ForeignKey relation field."]], "tortoise.fields.relational.ManyToManyField": [[30, 2, 2, "tortoise.fields.relational.ManyToManyField", "backward_key", "ManyToMany relation field."], [30, 2, 2, "tortoise.fields.relational.ManyToManyField", "create_unique_index", "ManyToMany relation field."], [30, 2, 2, "tortoise.fields.relational.ManyToManyField", "db_constraint", "ManyToMany relation field."], [30, 2, 2, "tortoise.fields.relational.ManyToManyField", "forward_key", "ManyToMany relation field."], [30, 2, 2, "tortoise.fields.relational.ManyToManyField", "kwargs", "ManyToMany relation field."], [30, 2, 2, "tortoise.fields.relational.ManyToManyField", "model_name", "ManyToMany relation field."], [30, 2, 2, "tortoise.fields.relational.ManyToManyField", "on_delete", "ManyToMany relation field."], [30, 2, 2, "tortoise.fields.relational.ManyToManyField", "related_name", "ManyToMany relation field."], [30, 2, 2, "tortoise.fields.relational.ManyToManyField", "through", "ManyToMany relation field."]], "tortoise.fields.relational.ManyToManyRelation": [[39, 3, 1, "id57", "__class_getitem__", "Parameterizes a generic class."], [39, 3, 1, "id58", "add", "Adds one or more of instances to the relation."], [39, 3, 1, "id59", "all", "Returns a QuerySet with all related elements."], [39, 3, 1, "id60", "clear", "Clears ALL relations."], [39, 3, 1, "id61", "filter", "Returns a QuerySet with related elements filtered by args/kwargs."], [39, 3, 1, "id62", "limit", "Returns a QuerySet with at most \u00ablimit\u00bb related elements."], [39, 3, 1, "id63", "offset", "Returns a QuerySet with all related elements offset by \u00aboffset\u00bb."], [39, 3, 1, "id64", "order_by", "Returns a QuerySet related elements in order."], [39, 3, 1, "id65", "remove", "Removes one or more of instances from the relation."]], "tortoise.fields.relational.ManyToManyRelation.__class_getitem__": [[39, 2, 2, "id57", "params", "Parameterizes a generic class."]], "tortoise.fields.relational.ManyToManyRelation.__init__": [[39, 2, 2, "id56", "instance", "Many-to-many relation container for ManyToManyField()."], [39, 2, 2, "id56", "m2m_field", "Many-to-many relation container for ManyToManyField()."]], "tortoise.fields.relational.ManyToManyRelation.add": [[39, 2, 2, "id58", "instances", "Adds one or more of instances to the relation."], [39, 2, 2, "id58", "using_db", "Adds one or more of instances to the relation."]], "tortoise.fields.relational.ManyToManyRelation.clear": [[39, 2, 2, "id60", "using_db", "Clears ALL relations."]], "tortoise.fields.relational.ManyToManyRelation.filter": [[39, 2, 2, "id61", "args", "Returns a QuerySet with related elements filtered by args/kwargs."], [39, 2, 2, "id61", "kwargs", "Returns a QuerySet with related elements filtered by args/kwargs."]], "tortoise.fields.relational.ManyToManyRelation.limit": [[39, 2, 2, "id62", "limit", "Returns a QuerySet with at most \u00ablimit\u00bb related elements."]], "tortoise.fields.relational.ManyToManyRelation.offset": [[39, 2, 2, "id63", "offset", "Returns a QuerySet with all related elements offset by \u00aboffset\u00bb."]], "tortoise.fields.relational.ManyToManyRelation.order_by": [[39, 2, 2, "id64", "orderings", "Returns a QuerySet related elements in order."]], "tortoise.fields.relational.ManyToManyRelation.remove": [[39, 2, 2, "id65", "instances", "Removes one or more of instances from the relation."], [39, 2, 2, "id65", "using_db", "Removes one or more of instances from the relation."]], "tortoise.fields.relational.OneToOneField": [[30, 2, 2, "tortoise.fields.relational.OneToOneField", "db_constraint", "OneToOne relation field."], [30, 2, 2, "tortoise.fields.relational.OneToOneField", "kwargs", "OneToOne relation field."], [30, 2, 2, "tortoise.fields.relational.OneToOneField", "model_name", "OneToOne relation field."], [30, 2, 2, "tortoise.fields.relational.OneToOneField", "null", "OneToOne relation field."], [30, 2, 2, "tortoise.fields.relational.OneToOneField", "on_delete", "OneToOne relation field."], [30, 2, 2, "tortoise.fields.relational.OneToOneField", "related_name", "OneToOne relation field."]], "tortoise.fields.relational.ReverseRelation": [[39, 3, 1, 0, "all", "Returns a QuerySet with all related elements."], [39, 3, 1, 0, "filter", "Returns a QuerySet with related elements filtered by args/kwargs."], [39, 3, 1, 0, "limit", "Returns a QuerySet with at most \u00ablimit\u00bb related elements."], [39, 3, 1, 0, "offset", "Returns a QuerySet with all related elements offset by \u00aboffset\u00bb."], [39, 3, 1, 0, "order_by", "Returns a QuerySet related elements in order."]], "tortoise.fields.relational.ReverseRelation.__init__": [[39, 2, 2, "tortoise.fields.relational.ReverseRelation", "from_field", "Relation container for ForeignKeyField()."], [39, 2, 2, "tortoise.fields.relational.ReverseRelation", "instance", "Relation container for ForeignKeyField()."], [39, 2, 2, "tortoise.fields.relational.ReverseRelation", "relation_field", "Relation container for ForeignKeyField()."], [39, 2, 2, "tortoise.fields.relational.ReverseRelation", "remote_model", "Relation container for ForeignKeyField()."]], "tortoise.fields.relational.ReverseRelation.filter": [[39, 2, 2, "tortoise.fields.relational.ReverseRelation.filter", "args", "Returns a QuerySet with related elements filtered by args/kwargs."], [39, 2, 2, "tortoise.fields.relational.ReverseRelation.filter", "kwargs", "Returns a QuerySet with related elements filtered by args/kwargs."]], "tortoise.fields.relational.ReverseRelation.limit": [[39, 2, 2, "tortoise.fields.relational.ReverseRelation.limit", "limit", "Returns a QuerySet with at most \u00ablimit\u00bb related elements."]], "tortoise.fields.relational.ReverseRelation.offset": [[39, 2, 2, "tortoise.fields.relational.ReverseRelation.offset", "offset", "Returns a QuerySet with all related elements offset by \u00aboffset\u00bb."]], "tortoise.fields.relational.ReverseRelation.order_by": [[39, 2, 2, "tortoise.fields.relational.ReverseRelation.order_by", "orderings", "Returns a QuerySet related elements in order."]], "tortoise.functions": [[31, 1, 1, 0, "Aggregate", "Base for SQL Aggregates."], [31, 1, 1, 0, "Avg", "Returns average (mean) of all values in the column."], [31, 1, 1, 0, "Coalesce", "Provides a default value if field is null."], [31, 1, 1, 0, "Concat", "Concate field or constant text. Be care, DB like sqlite3 has no support for CONCAT."], [31, 1, 1, 0, "Count", "Counts the no of entries for that column."], [31, 1, 1, 0, "Function", "Function/Aggregate base."], [31, 1, 1, 0, "Length", "Returns length of text/blob."], [31, 1, 1, 0, "Lower", "Converts text to lower case."], [31, 1, 1, 0, "Max", "Returns largest value in the column."], [31, 1, 1, 0, "Min", "Returns smallest value in the column."], [31, 1, 1, 0, "Sum", "Adds up all the values for that column."], [31, 1, 1, 0, "Trim", "Trims whitespace off edges of text."], [31, 1, 1, 0, "Upper", "Converts text to upper case."]], "tortoise.functions.Aggregate.__init__": [[31, 2, 2, "tortoise.functions.Aggregate", "_filter", "Base for SQL Aggregates."], [31, 2, 2, 0, "default_values", "Extra parameters to the function."], [31, 2, 2, "tortoise.functions.Aggregate", "distinct", "Base for SQL Aggregates."], [31, 2, 2, 0, "field", "Field name"]], "tortoise.functions.Avg.__init__": [[31, 2, 2, "tortoise.functions.Avg", "_filter", "Returns average (mean) of all values in the column."], [31, 2, 2, "tortoise.functions.Avg", "default_values", "Returns average (mean) of all values in the column."], [31, 2, 2, "tortoise.functions.Avg", "distinct", "Returns average (mean) of all values in the column."], [31, 2, 2, "tortoise.functions.Avg", "field", "Returns average (mean) of all values in the column."]], "tortoise.functions.Coalesce.__init__": [[31, 2, 2, "tortoise.functions.Coalesce", "default_values", "Provides a default value if field is null."], [31, 2, 2, "tortoise.functions.Coalesce", "field", "Provides a default value if field is null."]], "tortoise.functions.Concat.__init__": [[31, 2, 2, "tortoise.functions.Concat", "default_values", "Concate field or constant text. Be care, DB like sqlite3 has no support for CONCAT."], [31, 2, 2, "tortoise.functions.Concat", "field", "Concate field or constant text. Be care, DB like sqlite3 has no support for CONCAT."]], "tortoise.functions.Count.__init__": [[31, 2, 2, "tortoise.functions.Count", "_filter", "Counts the no of entries for that column."], [31, 2, 2, "tortoise.functions.Count", "default_values", "Counts the no of entries for that column."], [31, 2, 2, "tortoise.functions.Count", "distinct", "Counts the no of entries for that column."], [31, 2, 2, "tortoise.functions.Count", "field", "Counts the no of entries for that column."]], "tortoise.functions.Function": [[31, 4, 1, 0, "database_func", "The pypika function this represents."], [31, 4, 1, 0, "populate_field_object", "Enable populate_field_object where we want to try and preserve the field type."], [31, 3, 1, 0, "resolve", "Used to resolve the Function statement for SQL generation."]], "tortoise.functions.Function.__init__": [[31, 2, 2, 0, "default_values", "Extra parameters to the function."], [31, 2, 2, 0, "field", "Field name"]], "tortoise.functions.Function.resolve": [[31, 2, 2, 0, "model", "Model the function is applied on to."], [31, 2, 2, 0, "table", "pypika.Table to keep track of the virtual SQL table (to allow self referential joins)"]], "tortoise.functions.Length.__init__": [[31, 2, 2, "tortoise.functions.Length", "default_values", "Returns length of text/blob."], [31, 2, 2, "tortoise.functions.Length", "field", "Returns length of text/blob."]], "tortoise.functions.Lower.__init__": [[31, 2, 2, "tortoise.functions.Lower", "default_values", "Converts text to lower case."], [31, 2, 2, "tortoise.functions.Lower", "field", "Converts text to lower case."]], "tortoise.functions.Max.__init__": [[31, 2, 2, "tortoise.functions.Max", "_filter", "Returns largest value in the column."], [31, 2, 2, "tortoise.functions.Max", "default_values", "Returns largest value in the column."], [31, 2, 2, "tortoise.functions.Max", "distinct", "Returns largest value in the column."], [31, 2, 2, "tortoise.functions.Max", "field", "Returns largest value in the column."]], "tortoise.functions.Min.__init__": [[31, 2, 2, "tortoise.functions.Min", "_filter", "Returns smallest value in the column."], [31, 2, 2, "tortoise.functions.Min", "default_values", "Returns smallest value in the column."], [31, 2, 2, "tortoise.functions.Min", "distinct", "Returns smallest value in the column."], [31, 2, 2, "tortoise.functions.Min", "field", "Returns smallest value in the column."]], "tortoise.functions.Sum.__init__": [[31, 2, 2, "tortoise.functions.Sum", "_filter", "Adds up all the values for that column."], [31, 2, 2, "tortoise.functions.Sum", "default_values", "Adds up all the values for that column."], [31, 2, 2, "tortoise.functions.Sum", "distinct", "Adds up all the values for that column."], [31, 2, 2, "tortoise.functions.Sum", "field", "Adds up all the values for that column."]], "tortoise.functions.Trim.__init__": [[31, 2, 2, "tortoise.functions.Trim", "default_values", "Trims whitespace off edges of text."], [31, 2, 2, "tortoise.functions.Trim", "field", "Trims whitespace off edges of text."]], "tortoise.functions.Upper.__init__": [[31, 2, 2, "tortoise.functions.Upper", "default_values", "Converts text to upper case."], [31, 2, 2, "tortoise.functions.Upper", "field", "Converts text to upper case."]], "tortoise.models": [[38, 1, 1, 0, "Model", "Base class for all Tortoise ORM Models."]], "tortoise.models.Model": [[38, 1, 1, "id20", "Meta", "The Meta class is used to configure metadata for the Model."], [38, 3, 1, 0, "all", "Returns the complete QuerySet."], [38, 3, 1, 0, "annotate", "Annotates the result set with extra Functions/Aggregations/Expressions."], [38, 3, 1, 0, "bulk_create", "Bulk insert operation:"], [38, 3, 1, 0, "bulk_update", "Update the given fields in each of the given objects in the database. This method efficiently updates the given fields on the provided model instances, generally with one query."], [38, 3, 1, 0, "clone", "Create a new clone of the object that when you do a .save() will create a new record."], [38, 3, 1, 0, "create", "Create a record in the DB and returns the object."], [38, 3, 1, 0, "delete", "Deletes the current model object."], [38, 3, 1, 0, "describe", "Describes the given list of models or ALL registered models."], [38, 3, 1, 0, "exclude", "Generates a QuerySet with the exclude applied."], [38, 3, 1, 0, "exists", "Return True/False whether record exists with the provided filter parameters."], [38, 3, 1, 0, "fetch_for_list", "Fetches related models for provided list of Model objects."], [38, 3, 1, 0, "fetch_related", "Fetch related fields."], [38, 3, 1, 0, "filter", "Generates a QuerySet with the filter applied."], [38, 3, 1, 0, "first", "Generates a QuerySet that returns the first record."], [38, 3, 1, 0, "get", "Fetches a single record for a Model type using the provided filter parameters."], [38, 3, 1, 0, "get_or_create", "Fetches the object if exists (filtering on the provided parameters), else creates an instance with any unspecified parameters as default values."], [38, 3, 1, 0, "get_or_none", "Fetches a single record for a Model type using the provided filter parameters or None."], [38, 3, 1, 0, "in_bulk", "Return a dictionary mapping each of the given IDs to the object with that ID. If id_list isn't provided, evaluate the entire QuerySet."], [38, 5, 1, 0, "pk", "Alias to the models Primary Key. Can be used as a field name when doing filtering e.g. .filter(pk=...) etc..."], [38, 3, 1, 0, "raw", "Executes a RAW SQL and returns the result"], [38, 3, 1, 0, "refresh_from_db", "Refresh latest data from db. When this method is called without arguments all db fields of the model are updated to the values currently present in the database."], [38, 3, 1, 0, "register_listener", "Register listener to current model class for special Signal."], [38, 3, 1, 0, "save", "Creates/Updates the current model object."], [38, 3, 1, 0, "select_for_update", "Make QuerySet select for update."], [38, 3, 1, 0, "update_from_dict", "Updates the current model with the provided dict. This can allow mass-updating a model from a dict, also ensuring that datatype conversions happen."], [38, 3, 1, 0, "update_or_create", "A convenience method for updating an object with the given kwargs, creating a new one if necessary."]], "tortoise.models.Model.Meta": [[38, 4, 1, "id6", "abstract", "Set to True to indicate this is an abstract class"], [38, 4, 1, "id11", "indexes", "Specify indexes to set up compound non-unique indexes for sets of columns."], [38, 4, 1, "id13", "manager", "Specify manager to override the default manager. It should be instance of tortoise.manager.Manager or subclass."], [38, 4, 1, "id12", "ordering", "Specify ordering to set up default ordering for given model. It should be iterable of strings formatted in same way as .order_by(...) receives. If query is built with GROUP_BY clause using .annotate(...) default ordering is not applied."], [38, 4, 1, "id7", "schema", "Set this to configure a schema name, where table exists"], [38, 4, 1, "id8", "table", "Set this to configure a manual table name, instead of a generated one"], [38, 4, 1, "id9", "table_description", "Set this to generate a comment message for the table being created for the current model"], [38, 4, 1, "id10", "unique_together", "Specify unique_together to set up compound unique indexes for sets of columns."]], "tortoise.models.Model.__init__": [[38, 2, 2, "tortoise.models.Model", "kwargs", "Base class for all Tortoise ORM Models."]], "tortoise.models.Model.all": [[38, 2, 2, "tortoise.models.Model.all", "using_db", "Returns the complete QuerySet."]], "tortoise.models.Model.annotate": [[38, 2, 2, 0, "kwargs", "Parameter name and the Function/Aggregation to annotate with."]], "tortoise.models.Model.bulk_create": [[38, 2, 2, 0, "batch_size", "How many objects are created in a single query"], [38, 2, 2, 0, "ignore_conflicts", "Ignore conflicts when inserting"], [38, 2, 2, 0, "objects", "List of objects to bulk create"], [38, 2, 2, 0, "on_conflict", "On conflict index name"], [38, 2, 2, 0, "update_fields", "Update fields when conflicts"], [38, 2, 2, 0, "using_db", "Specific DB connection to use instead of default bound"]], "tortoise.models.Model.bulk_update": [[38, 2, 2, 0, "batch_size", "How many objects are created in a single query"], [38, 2, 2, 0, "fields", "The fields to update"], [38, 2, 2, 0, "objects", "List of objects to bulk create"], [38, 2, 2, 0, "using_db", "Specific DB connection to use instead of default bound"]], "tortoise.models.Model.clone": [[38, 2, 2, "tortoise.models.Model.clone", "pk=&lt;object object&gt;", "Create a new clone of the object that when you do a .save() will create a new record."]], "tortoise.models.Model.create": [[38, 2, 2, 0, "kwargs", "Model parameters."], [38, 2, 2, 0, "using_db", "Specific DB connection to use instead of default bound"]], "tortoise.models.Model.delete": [[38, 2, 2, 0, "using_db", "Specific DB connection to use instead of default bound"]], "tortoise.models.Model.describe": [[38, 2, 2, 0, "serializable", "False if you want raw python objects, True for JSON-serializable data."]], "tortoise.models.Model.exclude": [[38, 2, 2, 0, "args", "Q functions containing constraints."], [38, 2, 2, 0, "kwargs", "Simple filter constraints."]], "tortoise.models.Model.exists": [[38, 2, 2, 0, "args", "Q functions containing constraints."], [38, 2, 2, 0, "kwargs", "Simple filter constraints."], [38, 2, 2, 0, "using_db", "The specific DB connection to use."]], "tortoise.models.Model.fetch_for_list": [[38, 2, 2, 0, "args", "Relation names to fetch."], [38, 2, 2, 0, "instance_list", "List of Model objects to fetch relations for."], [38, 2, 2, 0, "using_db", "DO NOT USE"]], "tortoise.models.Model.fetch_related": [[38, 2, 2, 0, "args", "The related fields that should be fetched."], [38, 2, 2, 0, "using_db", "Specific DB connection to use instead of default bound"]], "tortoise.models.Model.filter": [[38, 2, 2, 0, "args", "Q functions containing constraints."], [38, 2, 2, 0, "kwargs", "Simple filter constraints."]], "tortoise.models.Model.first": [[38, 2, 2, "tortoise.models.Model.first", "using_db", "Generates a QuerySet that returns the first record."]], "tortoise.models.Model.get": [[38, 2, 2, 0, "args", "Q functions containing constraints."], [38, 2, 2, 0, "kwargs", "Simple filter constraints."], [38, 2, 2, 0, "using_db", "The DB connection to use"]], "tortoise.models.Model.get_or_create": [[38, 2, 2, 0, "defaults", "Default values to be added to a created instance if it can't be fetched."], [38, 2, 2, 0, "kwargs", "Query parameters."], [38, 2, 2, 0, "using_db", "Specific DB connection to use instead of default bound"]], "tortoise.models.Model.get_or_none": [[38, 2, 2, 0, "args", "Q functions containing constraints."], [38, 2, 2, 0, "kwargs", "Simple filter constraints."], [38, 2, 2, 0, "using_db", "The specific DB connection to use."]], "tortoise.models.Model.in_bulk": [[38, 2, 2, 0, "field_name", "Must be a unique field"], [38, 2, 2, 0, "id_list", "A list of field values"], [38, 2, 2, 0, "using_db", "Specific DB connection to use instead of default bound"]], "tortoise.models.Model.raw": [[38, 2, 2, 0, "sql", "The raw sql."], [38, 2, 2, 0, "using_db", "The specific DB connection to use"]], "tortoise.models.Model.refresh_from_db": [[38, 2, 2, 0, "fields", "The special fields that to be refreshed."], [38, 2, 2, 0, "using_db", "Specific DB connection to use instead of default bound."]], "tortoise.models.Model.register_listener": [[38, 2, 2, 0, "listener", "callable listener"], [38, 2, 2, 0, "signal", "one of tortoise.signals.Signals"]], "tortoise.models.Model.save": [[38, 2, 2, 0, "force_create", "Forces creation of the record"], [38, 2, 2, 0, "force_update", "Forces updating of the record"], [38, 2, 2, 0, "update_fields", "If provided, it should be a tuple/list of fields by name."], [38, 2, 2, 0, "using_db", "Specific DB connection to use instead of default bound"]], "tortoise.models.Model.select_for_update": [[38, 2, 2, "tortoise.models.Model.select_for_update", "nowait", "Make QuerySet select for update."], [38, 2, 2, "tortoise.models.Model.select_for_update", "of", "Make QuerySet select for update."], [38, 2, 2, "tortoise.models.Model.select_for_update", "skip_locked", "Make QuerySet select for update."], [38, 2, 2, "tortoise.models.Model.select_for_update", "using_db", "Make QuerySet select for update."]], "tortoise.models.Model.update_from_dict": [[38, 2, 2, 0, "data", "The parameters you want to update in a dict format"]], "tortoise.models.Model.update_or_create": [[38, 2, 2, 0, "defaults", "Default values used to update the object."], [38, 2, 2, 0, "kwargs", "Query parameters."], [38, 2, 2, 0, "using_db", "Specific DB connection to use instead of default bound"]], "tortoise.query_utils": [[39, 1, 1, 0, "Prefetch", "Prefetcher container. One would directly use this when wanting to attach a custom QuerySet for specialised prefetching."]], "tortoise.query_utils.Prefetch": [[39, 3, 1, 0, "resolve_for_queryset", "Called internally to generate prefetching query."]], "tortoise.query_utils.Prefetch.__init__": [[39, 2, 2, 0, "queryset", "Custom QuerySet to use for prefetching."], [39, 2, 2, 0, "relation", "Related field name."], [39, 2, 2, 0, "to_attr", "Sets the result of the prefetch operation to a custom attribute."]], "tortoise.query_utils.Prefetch.resolve_for_queryset": [[39, 2, 2, 0, "queryset", "Custom QuerySet to use for prefetching."]], "tortoise.queryset": [[39, 1, 1, "id40", "BulkCreateQuery", "Return the actual SQL."], [39, 1, 1, "id42", "BulkUpdateQuery", "Return the actual SQL."], [39, 1, 1, "id44", "CountQuery", ""], [39, 1, 1, "id45", "DeleteQuery", ""], [39, 1, 1, "id46", "ExistsQuery", ""], [39, 1, 1, "id47", "FieldSelectQuery", ""], [39, 1, 1, "id3", "QuerySet", "Parameterizes a generic class."], [39, 1, 1, "id0", "QuerySetSingle", "Awaiting on this will resolve a single instance of the Model object, and not a sequence."], [39, 1, 1, "id48", "RawSQLQuery", ""], [39, 1, 1, "id49", "UpdateQuery", ""], [39, 1, 1, "id50", "ValuesListQuery", ""], [39, 1, 1, "id51", "ValuesQuery", ""]], "tortoise.queryset.BulkCreateQuery": [[39, 3, 1, "id41", "sql", "Return the actual SQL."]], "tortoise.queryset.BulkCreateQuery.__init__": [[39, 2, 2, "id40", "batch_size", "Return the actual SQL."], [39, 2, 2, "id40", "db", "Return the actual SQL."], [39, 2, 2, "id40", "ignore_conflicts", "Return the actual SQL."], [39, 2, 2, "id40", "model", "Return the actual SQL."], [39, 2, 2, "id40", "objects", "Return the actual SQL."], [39, 2, 2, "id40", "on_conflict", "Return the actual SQL."], [39, 2, 2, "id40", "update_fields", "Return the actual SQL."]], "tortoise.queryset.BulkCreateQuery.sql": [[39, 2, 2, "id41", "kwargs", "Return the actual SQL."]], "tortoise.queryset.BulkUpdateQuery": [[39, 3, 1, "id43", "sql", "Return the actual SQL."]], "tortoise.queryset.BulkUpdateQuery.__init__": [[39, 2, 2, "id42", "annotations", "Return the actual SQL."], [39, 2, 2, "id42", "batch_size", "Return the actual SQL."], [39, 2, 2, "id42", "custom_filters", "Return the actual SQL."], [39, 2, 2, "id42", "db", "Return the actual SQL."], [39, 2, 2, "id42", "fields", "Return the actual SQL."], [39, 2, 2, "id42", "limit", "Return the actual SQL."], [39, 2, 2, "id42", "model", "Return the actual SQL."], [39, 2, 2, "id42", "objects", "Return the actual SQL."], [39, 2, 2, "id42", "orderings", "Return the actual SQL."], [39, 2, 2, "id42", "q_objects", "Return the actual SQL."]], "tortoise.queryset.BulkUpdateQuery.sql": [[39, 2, 2, "id43", "kwargs", "Return the actual SQL."]], "tortoise.queryset.CountQuery.__init__": [[39, 2, 2, "id44", "annotations", ""], [39, 2, 2, "id44", "custom_filters", ""], [39, 2, 2, "id44", "db", ""], [39, 2, 2, "id44", "force_indexes", ""], [39, 2, 2, "id44", "limit", ""], [39, 2, 2, "id44", "model", ""], [39, 2, 2, "id44", "offset", ""], [39, 2, 2, "id44", "q_objects", ""], [39, 2, 2, "id44", "use_indexes", ""]], "tortoise.queryset.DeleteQuery.__init__": [[39, 2, 2, "id45", "annotations", ""], [39, 2, 2, "id45", "custom_filters", ""], [39, 2, 2, "id45", "db", ""], [39, 2, 2, "id45", "limit", ""], [39, 2, 2, "id45", "model", ""], [39, 2, 2, "id45", "orderings", ""], [39, 2, 2, "id45", "q_objects", ""]], "tortoise.queryset.ExistsQuery.__init__": [[39, 2, 2, "id46", "annotations", ""], [39, 2, 2, "id46", "custom_filters", ""], [39, 2, 2, "id46", "db", ""], [39, 2, 2, "id46", "force_indexes", ""], [39, 2, 2, "id46", "model", ""], [39, 2, 2, "id46", "q_objects", ""], [39, 2, 2, "id46", "use_indexes", ""]], "tortoise.queryset.FieldSelectQuery.__init__": [[39, 2, 2, "id47", "annotations", ""], [39, 2, 2, "id47", "model", ""]], "tortoise.queryset.QuerySet": [[39, 3, 1, "id4", "__class_getitem__", "Parameterizes a generic class."], [39, 3, 1, "id5", "__getitem__", "Query offset and limit for Queryset."], [39, 3, 1, "id6", "all", "Return the whole QuerySet. Essentially a no-op except as the only operation."], [39, 3, 1, "id7", "annotate", "Annotate result with aggregation or function result."], [39, 3, 1, "id8", "as_query", "Return the actual query."], [39, 3, 1, "id9", "bulk_create", "This method inserts the provided list of objects into the database in an efficient manner (generally only 1 query, no matter how many objects there are)."], [39, 3, 1, "id10", "bulk_update", "Update the given fields in each of the given objects in the database."], [39, 3, 1, "id11", "count", "Return count of objects in queryset instead of objects."], [39, 3, 1, "id12", "delete", "Delete all objects in QuerySet."], [39, 3, 1, "id13", "distinct", "Make QuerySet distinct."], [39, 3, 1, "id14", "exclude", "Same as .filter(), but with appends all args with NOT"], [39, 3, 1, "id15", "exists", "Return True/False whether queryset exists."], [39, 3, 1, "id16", "explain", "Fetch and return information about the query execution plan."], [39, 3, 1, "id17", "filter", "Filters QuerySet by given kwargs. You can filter by related objects like this:"], [39, 3, 1, "id18", "first", "Limit queryset to one object and return one object instead of list."], [39, 3, 1, "id19", "force_index", "The FORCE INDEX hint acts like USE INDEX (index_list), with the addition that a table scan is assumed to be very expensive."], [39, 3, 1, "id20", "get", "Fetch exactly one object matching the parameters."], [39, 3, 1, "id21", "get_or_none", "Fetch exactly one object matching the parameters."], [39, 3, 1, "id22", "group_by", "Make QuerySet returns list of dict or tuple with group by."], [39, 3, 1, "id23", "in_bulk", "Return a dictionary mapping each of the given IDs to the object with that ID. If id_list isn't provided, evaluate the entire QuerySet."], [39, 3, 1, "id24", "limit", "Limits QuerySet to given length."], [39, 3, 1, "id25", "offset", "Query offset for QuerySet."], [39, 3, 1, "id26", "only", "Fetch ONLY the specified fields to create a partial model."], [39, 3, 1, "id27", "order_by", "Accept args to filter by in format like this:"], [39, 3, 1, "id28", "prefetch_related", "Like .fetch_related() on instance, but works on all objects in QuerySet."], [39, 3, 1, "id29", "raw", "Return the QuerySet from raw SQL"], [39, 3, 1, "id30", "resolve_filters", "Builds the common filters for a QuerySet."], [39, 3, 1, "id31", "resolve_ordering", "Applies standard ordering to QuerySet."], [39, 3, 1, "id32", "select_for_update", "Make QuerySet select for update."], [39, 3, 1, "id33", "select_related", "Return a new QuerySet instance that will select related objects."], [39, 3, 1, "id34", "sql", "Return the actual SQL."], [39, 3, 1, "id35", "update", "Update all objects in QuerySet with given kwargs."], [39, 3, 1, "id36", "use_index", "The USE INDEX (index_list) hint tells MySQL to use only one of the named indexes to find rows in the table."], [39, 3, 1, "id37", "using_db", "Executes query in provided db client. Useful for transactions workaround."], [39, 3, 1, "id38", "values", "Make QuerySet return dicts instead of objects."], [39, 3, 1, "id39", "values_list", "Make QuerySet returns list of tuples for given args instead of objects."]], "tortoise.queryset.QuerySet.__class_getitem__": [[39, 2, 2, "id4", "params", "Parameterizes a generic class."]], "tortoise.queryset.QuerySet.__getitem__": [[39, 2, 2, "id5", "key", "Query offset and limit for Queryset."]], "tortoise.queryset.QuerySet.__init__": [[39, 2, 2, "id3", "model", "Parameterizes a generic class."]], "tortoise.queryset.QuerySet.annotate": [[39, 2, 2, "id7", "kwargs", "Annotate result with aggregation or function result."]], "tortoise.queryset.QuerySet.bulk_create": [[39, 2, 2, 0, "batch_size", "How many objects are created in a single query"], [39, 2, 2, 0, "ignore_conflicts", "Ignore conflicts when inserting"], [39, 2, 2, 0, "objects", "List of objects to bulk create"], [39, 2, 2, 0, "on_conflict", "On conflict index name"], [39, 2, 2, 0, "update_fields", "Update fields when conflicts"]], "tortoise.queryset.QuerySet.bulk_update": [[39, 2, 2, 0, "batch_size", "How many objects are created in a single query"], [39, 2, 2, 0, "fields", "The fields to update"], [39, 2, 2, 0, "objects", "List of objects to bulk create"]], "tortoise.queryset.QuerySet.exclude": [[39, 2, 2, "id14", "args", "Same as .filter(), but with appends all args with NOT"], [39, 2, 2, "id14", "kwargs", "Same as .filter(), but with appends all args with NOT"]], "tortoise.queryset.QuerySet.filter": [[39, 2, 2, "id17", "args", "Filters QuerySet by given kwargs. You can filter by related objects like this:"], [39, 2, 2, "id17", "kwargs", "Filters QuerySet by given kwargs. You can filter by related objects like this:"]], "tortoise.queryset.QuerySet.force_index": [[39, 2, 2, "id19", "index_names", "The FORCE INDEX hint acts like USE INDEX (index_list), with the addition that a table scan is assumed to be very expensive."]], "tortoise.queryset.QuerySet.get": [[39, 2, 2, "id20", "args", "Fetch exactly one object matching the parameters."], [39, 2, 2, "id20", "kwargs", "Fetch exactly one object matching the parameters."]], "tortoise.queryset.QuerySet.get_or_none": [[39, 2, 2, "id21", "args", "Fetch exactly one object matching the parameters."], [39, 2, 2, "id21", "kwargs", "Fetch exactly one object matching the parameters."]], "tortoise.queryset.QuerySet.group_by": [[39, 2, 2, "id22", "fields", "Make QuerySet returns list of dict or tuple with group by."]], "tortoise.queryset.QuerySet.in_bulk": [[39, 2, 2, 0, "field_name", "Must be a unique field"], [39, 2, 2, 0, "id_list", "A list of field values"]], "tortoise.queryset.QuerySet.limit": [[39, 2, 2, "id24", "limit", "Limits QuerySet to given length."]], "tortoise.queryset.QuerySet.offset": [[39, 2, 2, "id25", "offset", "Query offset for QuerySet."]], "tortoise.queryset.QuerySet.only": [[39, 2, 2, "id26", "fields_for_select", "Fetch ONLY the specified fields to create a partial model."]], "tortoise.queryset.QuerySet.order_by": [[39, 2, 2, "id27", "orderings", "Accept args to filter by in format like this:"]], "tortoise.queryset.QuerySet.prefetch_related": [[39, 2, 2, "id28", "args", "Like .fetch_related() on instance, but works on all objects in QuerySet."]], "tortoise.queryset.QuerySet.raw": [[39, 2, 2, "id29", "sql", "Return the QuerySet from raw SQL"]], "tortoise.queryset.QuerySet.resolve_filters": [[39, 2, 2, 0, "annotations", "Extra annotations to add."], [39, 2, 2, 0, "custom_filters", "Pre-resolved filters to be passed through."], [39, 2, 2, 0, "model", "The Model this queryset is based on."], [39, 2, 2, 0, "q_objects", "The Q expressions to apply."]], "tortoise.queryset.QuerySet.resolve_ordering": [[39, 2, 2, 0, "annotations", "Annotations that may be ordered on"], [39, 2, 2, 0, "model", "The Model this queryset is based on."], [39, 2, 2, 0, "orderings", "What columns/order to order by"], [39, 2, 2, 0, "table", "pypika.Table to keep track of the virtual SQL table (to allow self referential joins)"]], "tortoise.queryset.QuerySet.select_for_update": [[39, 2, 2, "id32", "nowait", "Make QuerySet select for update."], [39, 2, 2, "id32", "of", "Make QuerySet select for update."], [39, 2, 2, "id32", "skip_locked", "Make QuerySet select for update."]], "tortoise.queryset.QuerySet.select_related": [[39, 2, 2, "id33", "fields", "Return a new QuerySet instance that will select related objects."]], "tortoise.queryset.QuerySet.sql": [[39, 2, 2, "id34", "kwargs", "Return the actual SQL."]], "tortoise.queryset.QuerySet.update": [[39, 2, 2, "id35", "kwargs", "Update all objects in QuerySet with given kwargs."]], "tortoise.queryset.QuerySet.use_index": [[39, 2, 2, "id36", "index_names", "The USE INDEX (index_list) hint tells MySQL to use only one of the named indexes to find rows in the table."]], "tortoise.queryset.QuerySet.using_db": [[39, 2, 2, "id37", "_db", "Executes query in provided db client. Useful for transactions workaround."]], "tortoise.queryset.QuerySet.values": [[39, 2, 2, "id38", "args", "Make QuerySet return dicts instead of objects."], [39, 2, 2, "id38", "kwargs", "Make QuerySet return dicts instead of objects."]], "tortoise.queryset.QuerySet.values_list": [[39, 2, 2, "id39", "fields_", "Make QuerySet returns list of tuples for given args instead of objects."], [39, 2, 2, "id39", "flat", "Make QuerySet returns list of tuples for given args instead of objects."]], "tortoise.queryset.QuerySetSingle.__init__": [[39, 2, 2, "id0", "args", "Awaiting on this will resolve a single instance of the Model object, and not a sequence."], [39, 2, 2, "id0", "kwargs", "Awaiting on this will resolve a single instance of the Model object, and not a sequence."]], "tortoise.queryset.RawSQLQuery.__init__": [[39, 2, 2, "id48", "db", ""], [39, 2, 2, "id48", "model", ""], [39, 2, 2, "id48", "sql", ""]], "tortoise.queryset.UpdateQuery.__init__": [[39, 2, 2, "id49", "annotations", ""], [39, 2, 2, "id49", "custom_filters", ""], [39, 2, 2, "id49", "db", ""], [39, 2, 2, "id49", "limit", ""], [39, 2, 2, "id49", "model", ""], [39, 2, 2, "id49", "orderings", ""], [39, 2, 2, "id49", "q_objects", ""], [39, 2, 2, "id49", "update_kwargs", ""]], "tortoise.queryset.ValuesListQuery.__init__": [[39, 2, 2, "id50", "annotations", ""], [39, 2, 2, "id50", "custom_filters", ""], [39, 2, 2, "id50", "db", ""], [39, 2, 2, "id50", "distinct", ""], [39, 2, 2, "id50", "fields_for_select_list", ""], [39, 2, 2, "id50", "flat", ""], [39, 2, 2, "id50", "force_indexes", ""], [39, 2, 2, "id50", "group_bys", ""], [39, 2, 2, "id50", "limit", ""], [39, 2, 2, "id50", "model", ""], [39, 2, 2, "id50", "offset", ""], [39, 2, 2, "id50", "orderings", ""], [39, 2, 2, "id50", "q_objects", ""], [39, 2, 2, "id50", "raise_does_not_exist", ""], [39, 2, 2, "id50", "single", ""], [39, 2, 2, "id50", "use_indexes", ""]], "tortoise.queryset.ValuesQuery.__init__": [[39, 2, 2, "id51", "annotations", ""], [39, 2, 2, "id51", "custom_filters", ""], [39, 2, 2, "id51", "db", ""], [39, 2, 2, "id51", "distinct", ""], [39, 2, 2, "id51", "fields_for_select", ""], [39, 2, 2, "id51", "force_indexes", ""], [39, 2, 2, "id51", "group_bys", ""], [39, 2, 2, "id51", "limit", ""], [39, 2, 2, "id51", "model", ""], [39, 2, 2, "id51", "offset", ""], [39, 2, 2, "id51", "orderings", ""], [39, 2, 2, "id51", "q_objects", ""], [39, 2, 2, "id51", "raise_does_not_exist", ""], [39, 2, 2, "id51", "single", ""], [39, 2, 2, "id51", "use_indexes", ""]], "tortoise.signals": [[45, 1, 1, 0, "Signals", "Bases: Enum"], [45, 6, 1, 0, "post_delete", "Register given models post_delete signal."], [45, 6, 1, 0, "post_save", "Register given models post_save signal."], [45, 6, 1, 0, "pre_delete", "Register given models pre_delete signal."], [45, 6, 1, 0, "pre_save", "Register given models pre_save signal."]], "tortoise.signals.Signals": [[45, 4, 1, 0, "post_delete", ""], [45, 4, 1, 0, "post_save", ""], [45, 4, 1, 0, "pre_delete", ""], [45, 4, 1, 0, "pre_save", ""]], "tortoise.signals.Signals.__init__": [[45, 2, 2, "tortoise.signals.Signals", "boundary", "Bases: Enum"], [45, 2, 2, "tortoise.signals.Signals", "module", "Bases: Enum"], [45, 2, 2, "tortoise.signals.Signals", "names", "Bases: Enum"], [45, 2, 2, "tortoise.signals.Signals", "qualname", "Bases: Enum"], [45, 2, 2, "tortoise.signals.Signals", "start", "Bases: Enum"], [45, 2, 2, "tortoise.signals.Signals", "type", "Bases: Enum"], [45, 2, 2, "tortoise.signals.Signals", "value", "Bases: Enum"]], "tortoise.signals.post_delete": [[45, 2, 2, 0, "senders", "Model class"]], "tortoise.signals.post_save": [[45, 2, 2, 0, "senders", "Model class"]], "tortoise.signals.pre_delete": [[45, 2, 2, 0, "senders", "Model class"]], "tortoise.signals.pre_save": [[45, 2, 2, 0, "senders", "Model class"]], "tortoise.timezone": [[46, 6, 1, 0, "get_default_timezone", "Return the default time zone as a tzinfo instance."], [46, 6, 1, 0, "get_timezone", "Get timezone from env set in Tortoise config."], [46, 6, 1, 0, "get_use_tz", "Get use_tz from env set in Tortoise config."], [46, 6, 1, 0, "is_aware", "Determine if a given datetime.datetime or datetime.time is aware."], [46, 6, 1, 0, "is_naive", "Determine if a given datetime.datetime or datetime.time is naive."], [46, 6, 1, 0, "localtime", "Convert an aware datetime.datetime to local time."], [46, 6, 1, 0, "make_aware", "Make a naive datetime.datetime in a given time zone aware."], [46, 6, 1, 0, "make_naive", "Make an aware datetime.datetime naive in a given time zone."], [46, 6, 1, 0, "now", "Return an aware datetime.datetime, depending on use_tz and timezone."]], "tortoise.timezone.is_aware": [[46, 2, 2, "tortoise.timezone.is_aware", "value", "Determine if a given datetime.datetime or datetime.time is aware."]], "tortoise.timezone.is_naive": [[46, 2, 2, "tortoise.timezone.is_naive", "value", "Determine if a given datetime.datetime or datetime.time is naive."]], "tortoise.timezone.localtime": [[46, 2, 2, "tortoise.timezone.localtime", "timezone", "Convert an aware datetime.datetime to local time."], [46, 2, 2, "tortoise.timezone.localtime", "value", "Convert an aware datetime.datetime to local time."]], "tortoise.timezone.make_aware": [[46, 2, 2, "tortoise.timezone.make_aware", "is_dst", "Make a naive datetime.datetime in a given time zone aware."], [46, 2, 2, "tortoise.timezone.make_aware", "timezone", "Make a naive datetime.datetime in a given time zone aware."], [46, 2, 2, "tortoise.timezone.make_aware", "value", "Make a naive datetime.datetime in a given time zone aware."]], "tortoise.timezone.make_naive": [[46, 2, 2, "tortoise.timezone.make_naive", "timezone", "Make an aware datetime.datetime naive in a given time zone."], [46, 2, 2, "tortoise.timezone.make_naive", "value", "Make an aware datetime.datetime naive in a given time zone."]], "tortoise.transactions": [[48, 6, 1, 0, "atomic", "Transaction decorator."], [48, 6, 1, 0, "in_transaction", "Transaction context manager."]], "tortoise.transactions.atomic": [[48, 2, 2, 0, "connection_name", "name of connection to run with, optional if you have only one db connection"]], "tortoise.transactions.in_transaction": [[48, 2, 2, 0, "connection_name", "name of connection to run with, optional if you have only one db connection"]], "tortoise.utils": [[43, 6, 1, 0, "generate_schema_for_client", "Generates and applies the SQL schema directly to the given client."], [43, 6, 1, 0, "get_schema_sql", "Generates the SQL schema for the given client."]], "tortoise.utils.generate_schema_for_client": [[43, 2, 2, 0, "client", "The DB client to generate Schema SQL for"], [43, 2, 2, 0, "safe", "When set to true, creates the table only when it does not already exist."]], "tortoise.utils.get_schema_sql": [[43, 2, 2, 0, "client", "The DB client to generate Schema SQL for"], [43, 2, 2, 0, "safe", "When set to true, creates the table only when it does not already exist."]], "tortoise.validators": [[49, 1, 1, 0, "CommaSeparatedIntegerListValidator", "A validator to validate whether the given value is valid comma separated integer list or not."], [49, 1, 1, 0, "MaxLengthValidator", "A validator to validate the length of given value whether greater than max_length or not."], [49, 1, 1, 0, "MaxValueValidator", "Max value validator for FloatField, IntField, SmallIntField, BigIntField"], [49, 1, 1, 0, "MinLengthValidator", "A validator to validate the length of given value whether less than min_length or not."], [49, 1, 1, 0, "MinValueValidator", "Min value validator for FloatField, IntField, SmallIntField, BigIntField"], [49, 1, 1, 0, "RegexValidator", "A validator to validate the given value whether match regex or not."], [49, 1, 1, 0, "Validator", "All specific validators should implement this method."], [49, 6, 1, 0, "validate_ipv46_address", "A validator to validate whether the given value is valid IPv4Address or IPv6Address or not."], [49, 6, 1, 0, "validate_ipv4_address", "A validator to validate whether the given value is valid IPv4Address or not."], [49, 6, 1, 0, "validate_ipv6_address", "A validator to validate whether the given value is valid IPv6Address or not."]], "tortoise.validators.CommaSeparatedIntegerListValidator.__init__": [[49, 2, 2, "tortoise.validators.CommaSeparatedIntegerListValidator", "allow_negative", "A validator to validate whether the given value is valid comma separated integer list or not."]], "tortoise.validators.MaxLengthValidator.__init__": [[49, 2, 2, "tortoise.validators.MaxLengthValidator", "max_length", "A validator to validate the length of given value whether greater than max_length or not."]], "tortoise.validators.MaxValueValidator.__init__": [[49, 2, 2, "tortoise.validators.MaxValueValidator", "max_value", "Max value validator for FloatField, IntField, SmallIntField, BigIntField"]], "tortoise.validators.MinLengthValidator.__init__": [[49, 2, 2, "tortoise.validators.MinLengthValidator", "min_length", "A validator to validate the length of given value whether less than min_length or not."]], "tortoise.validators.MinValueValidator.__init__": [[49, 2, 2, "tortoise.validators.MinValueValidator", "min_value", "Min value validator for FloatField, IntField, SmallIntField, BigIntField"]], "tortoise.validators.RegexValidator.__init__": [[49, 2, 2, "tortoise.validators.RegexValidator", "flags", "A validator to validate the given value whether match regex or not."], [49, 2, 2, "tortoise.validators.RegexValidator", "pattern", "A validator to validate the given value whether match regex or not."]], "tortoise.validators.Validator": [[49, 3, 1, 0, "__call__", "All specific validators should implement this method."]], "tortoise.validators.Validator.__call__": [[49, 2, 2, 0, "value", "The given value to be validated."]], "tortoise.validators.validate_ipv46_address": [[49, 2, 2, "tortoise.validators.validate_ipv46_address", "value", "A validator to validate whether the given value is valid IPv4Address or IPv6Address or not."]], "tortoise.validators.validate_ipv4_address": [[49, 2, 2, "tortoise.validators.validate_ipv4_address", "value", "A validator to validate whether the given value is valid IPv4Address or not."]], "tortoise.validators.validate_ipv6_address": [[49, 2, 2, "tortoise.validators.validate_ipv6_address", "value", "A validator to validate whether the given value is valid IPv6Address or not."]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "parameter", "Python parameter"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "property", "Python property"], "6": ["py", "function", "Python function"], "7": ["py", "exception", "Python exception"], "8": ["py", "data", "Python data"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:parameter", "3": "py:method", "4": "py:attribute", "5": "py:property", "6": "py:function", "7": "py:exception", "8": "py:data"}, "terms": {"": [0, 1, 2, 9, 13, 18, 24, 29, 30, 33, 35, 38, 39, 43, 44, 46], "0": [11, 17, 18, 21, 22, 23, 25, 29, 30, 32, 36, 37, 38, 39, 41, 44, 47, 49], "01": 47, "01435": 0, "01t20": 13, "02t06": 13, "02t07": 13, "03": [13, 47], "04": 2, "05": 47, "06": 47, "07": 47, "09": 13, "1": [1, 2, 6, 17, 18, 19, 21, 22, 23, 25, 29, 30, 31, 32, 36, 37, 38, 39, 44, 45, 47], "10": [18, 21, 29, 38, 39, 47], "100": [2, 13, 21, 24, 49], "1000000": 0, "1012": 0, "1022": 0, "1024": [0, 21], "1029": 0, "1046": 0, "1048": 0, "1054": 0, "1086": 0, "109": 0, "11": [2, 21, 47], "1103": 0, "1109": 0, "1122": 0, "113": 0, "1133": 0, "114": 0, "115": 0, "1150": 0, "1155": 0, "116": 0, "12": [39, 47], "120": 0, "1202": 0, "121": 0, "123": 0, "123456": 37, "124": 0, "1246": 0, "127": [17, 18, 21, 25, 37], "1270": 0, "1274": 0, "128": [21, 23, 24, 30], "1291": 0, "13": 47, "1308": 0, "1341": 0, "1347": 0, "1371": 0, "1393": 0, "14": [13, 47], "1400": 0, "1404": 0, "143": 0, "1430": 0, "1433": [0, 18], "1454": 0, "1458": 0, "1462": 0, "1471": 0, "1492": 0, "1498": 0, "15": 47, "1506": 0, "1534": 0, "1535": 0, "1550": 0, "1551": 0, "1552": 0, "1559": 0, "1564": 0, "157": 0, "1575": 0, "1584": 0, "1590": 0, "16": [30, 47], "1602": 0, "1607": 0, "1614": 0, "1620": 0, "1621": 0, "163": 0, "1633": 0, "1636": 0, "16384": 18, "1643": 0, "1649": 0, "1650": 0, "1656": 0, "1657": 0, "1661": 0, "1662": 0, "1676": 0, "1677": 0, "1679": 0, "168": 0, "1687": 0, "1696": 0, "1697": 0, "1698": 0, "1699": 0, "17": 47, "1700": 0, "1707": 0, "1708": 0, "1714": 0, "1723": 0, "1724": 0, "1733": 0, "1734": 0, "18": 47, "180": 0, "19": 47, "195": 0, "1_202029051520102929_drop_column": 37, "1st": 0, "2": [6, 17, 19, 21, 29, 31, 32, 36, 38, 39, 45, 47, 49], "20": [13, 23, 25, 27, 38, 47], "200": 23, "2013": 2, "2020": [13, 39], "2024": 47, "2048": 21, "21": 47, "22": 47, "23": [4, 13, 47], "24": [23, 47], "240": 0, "25": 47, "254": 0, "255": [0, 21, 30, 32, 38], "256": 0, "25jj5": 18, "261": 0, "27": 13, "28": 13, "282": 0, "287": 0, "294": 0, "298": 0, "2fg": 18, "2nd": 0, "2x": 0, "3": [2, 6, 19, 21, 29, 31, 33, 38, 39, 45, 47], "30": [0, 23], "300": 18, "301": 0, "306": 0, "308": 0, "311": 0, "312": 0, "32": 30, "3306": [18, 21, 25, 37], "335": 0, "337": 0, "346808": 13, "38": 4, "39": 13, "4": [1, 2, 6, 17, 18, 19, 21, 33, 45, 47], "40": [30, 38], "404": 0, "416": 0, "428": 0, "443": 0, "45": 21, "475": 0, "5": [17, 18, 21, 39, 47], "50": [0, 20, 21, 23, 24, 26], "5000": [20, 25, 26], "50000": 18, "508": 0, "525": 0, "53": 13, "530": 0, "536": 0, "537": 0, "5432": [7, 8, 9, 14, 15, 16, 17, 18, 21, 44], "54321": 18, "549": 0, "558": 0, "561": 0, "59": 4, "6": [11, 13, 21, 30, 46, 47], "608": 0, "62": 0, "623": 0, "63": [0, 22], "633": 0, "64": [21, 24, 30], "64kb": 0, "659": 0, "677": 0, "678": 0, "679": 0, "697": 0, "7": 47, "700": 0, "702": 0, "721": 0, "731656": 13, "732492": 13, "734": 0, "742": 0, "748": 0, "756": 0, "759": 0, "770": 0, "776": 0, "776211": 13, "776504": 13, "776848": 13, "780": 0, "782": 0, "796": 0, "798": 0, "7x": 0, "8": [2, 11, 23, 29, 30, 33, 47], "806": 0, "808": 0, "825": 0, "828": 0, "844": 0, "864": 0, "873": 0, "879": 0, "883": 0, "888": 0, "889": 0, "893": 0, "899": 0, "9": [13, 18, 33, 47], "914": 0, "924": 0, "927": 0, "928": 0, "943": 0, "944": 0, "968": 0, "969": 0, "986": 0, "A": [0, 9, 13, 17, 18, 30, 31, 36, 38, 39, 44, 49], "AND": [29, 38, 44], "And": [0, 13, 17, 18, 29, 31, 33, 37, 39, 46], "As": [2, 24, 39, 44], "At": [0, 13, 39], "BY": 0, "Be": [13, 31, 39], "Being": 1, "But": 38, "By": [19, 47], "FOR": [18, 38, 39, 44], "For": [0, 7, 8, 9, 14, 15, 16, 17, 18, 21, 29, 32, 39, 41, 44, 46], "IN": 0, "INTO": 21, "If": [0, 2, 5, 7, 8, 9, 11, 13, 14, 15, 16, 17, 18, 29, 30, 32, 33, 35, 37, 38, 39, 44, 48], "In": [0, 1, 10, 13, 17, 18, 36, 38, 39], "It": [0, 13, 14, 17, 18, 24, 29, 30, 33, 38, 39, 44], "NO": 30, "NOT": [0, 29, 38, 39, 44], "No": 0, "Not": [0, 24, 32], "ON": [0, 18], "ONE": 30, "OR": [0, 29, 30], "Of": [2, 41], "On": [17, 21, 38, 39, 44], "One": [0, 14, 24, 30, 31, 38, 39], "Or": [4, 17, 18, 30, 32, 33], "THEN": 29, "TO": [38, 44], "That": [0, 17, 21, 38], "The": [0, 1, 2, 5, 13, 17, 18, 21, 23, 24, 28, 29, 30, 31, 32, 38, 39, 42, 43, 44, 46, 49], "Then": [4, 35, 38], "There": [0, 13, 36, 38, 39, 43, 44, 45, 46, 49], "These": [29, 30], "To": [0, 13, 14, 17, 18, 21, 25, 30, 31, 38, 39, 44], "WITH": 34, "Will": [17, 18, 30, 38, 39, 43, 44], "With": [17, 38], "_": [23, 27, 35, 37], "_1": [21, 24], "_1_1": [21, 24], "_1_1_1": [21, 24], "_2": [21, 24], "_2_1": [21, 24], "_2_2": [21, 24], "__": 38, "__and__": 29, "__call__": 49, "__class_getitem__": 39, "__contain": 0, "__dict__": 35, "__eq__": 0, "__fields__": [9, 13], "__file__": 23, "__getitem__": 39, "__gt": 38, "__in": 0, "__init__": [0, 30, 31, 34, 35], "__invert__": 29, "__isnul": 38, "__iter__": 0, "__main__": [5, 7, 8, 9, 13, 14, 15, 16, 17, 20, 21, 24, 25, 26, 27, 42, 44], "__models__": [0, 40, 44, 47], "__name__": [17, 20, 21, 24, 25, 26, 27], "__not_in": 0, "__or__": 29, "__search": 0, "__slots__": 0, "__str__": [20, 21, 22, 25, 26, 27, 32, 38], "__version__": 0, "__year": 0, "_check": 0, "_clone": 0, "_create_db": [0, 9, 23, 44], "_creator": 13, "_custom_generated_pk": 0, "_db": 39, "_db__": 30, "_db_sqlite": 30, "_drop_databas": 23, "_enum_typ": 30, "_fieldmeta": [0, 30], "_filter": [0, 21, 31], "_generate_index_nam": 0, "_get_com": 0, "_get_connect": 0, "_id": [13, 38], "_id__isnul": 38, "_init_from_db": 0, "_init_rel": 44, "_make_queri": 0, "_queri": 0, "_saved_in_db": 30, "_selector": 0, "_stack": 13, "a1": 21, "a2": 21, "abc": 49, "abcd": 49, "abdeldjalil": 3, "abil": [0, 29, 41], "abl": [0, 14, 30, 38], "abondar": 3, "about": [0, 9, 13, 33, 35, 39], "abov": [7, 8, 9, 13, 14, 15, 16, 29, 32, 35, 36, 44], "absolut": 17, "abstract": [0, 38, 44, 49], "abstractasynccontextmanag": 9, "abstracttourna": 38, "abus": 1, "accel": [0, 32], "acceler": [0, 32, 41], "accept": [0, 1, 29, 30, 39], "access": [0, 5, 29, 33, 38, 39], "accident": 0, "accomplish": 38, "accord": [43, 44], "account": 1, "accur": [0, 30], "achiev": 39, "acquir": [18, 44], "acquire_connect": [18, 44], "act": [1, 39], "action": [1, 21, 30], "actual": [0, 2, 18, 29, 30, 38, 39], "ad": [13, 30, 38, 39, 44, 47], "adam": 3, "adapt": 1, "add": [0, 8, 9, 11, 13, 21, 24, 30, 31, 32, 35, 37, 38, 39, 41], "add_exception_handl": [8, 9, 22, 23], "add_rout": 20, "add_us": [20, 25, 26, 27], "add_work": 25, "addfin": 17, "addhandl": 35, "addit": [5, 38, 39], "address": [0, 1, 2, 17, 21, 24, 33], "address__event_id__isnul": 24, "admin": 23, "admir": 33, "advanc": [1, 18], "aenterpris": 3, "aerich": [0, 17, 37], "affect": [0, 18, 44, 46], "after": [0, 5, 13, 17, 30, 32, 36, 39, 42, 44], "after_serv": 14, "after_server_stop": 15, "ag": 1, "again": [13, 29], "against": [0, 13, 24, 39], "aggreg": [0, 18, 31, 38, 39, 40, 44, 47], "agre": 2, "aha": 13, "aiocontextvar": 0, "aiohttp": [6, 19, 47], "aiomysql": 18, "aiosqlit": [0, 18, 32, 33], "aleksandr": 3, "alex": 3, "alexand": 3, "alexei": 3, "algorithm": 0, "alia": [0, 5, 30, 31, 38, 39, 44], "alias": 5, "align": 1, "all": [0, 1, 2, 3, 5, 13, 14, 17, 20, 21, 22, 24, 25, 26, 27, 29, 31, 32, 36, 37, 38, 39, 40, 41, 42, 44, 47, 49], "all_object": 36, "allof": 13, "allow": [0, 13, 21, 29, 30, 31, 38, 39, 44, 46], "allow_cycl": [13, 24, 47], "allow_neg": 49, "allows_gener": 30, "allrod5": 3, "almost": [30, 33], "along": 0, "alphabet": 13, "alreadi": [13, 18, 32, 39, 43, 44], "also": [0, 2, 13, 14, 18, 21, 29, 30, 31, 32, 33, 35, 38, 39, 43, 44, 46], "altern": 24, "although": [18, 21], "alv": 3, "alwai": [2, 17, 30, 38, 44, 46], "alwxsin": 3, "ambigu": 38, "american_america": 18, "an": [0, 1, 2, 4, 8, 13, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 38, 39, 42, 44, 46, 49], "analysi": [0, 2], "andrea": 3, "andrei": [1, 3], "ani": [0, 1, 2, 5, 7, 8, 9, 13, 14, 15, 16, 17, 18, 24, 28, 29, 30, 31, 38, 39, 44, 48], "annot": [0, 2, 9, 13, 21, 24, 29, 31, 38, 39, 40, 44, 47], "anoth": [13, 24, 30, 33, 36, 39, 46, 49], "another_field_nam": 31, "anyio": 23, "anyio_backend": 23, "anymor": 0, "anyth": [0, 2], "apart": 32, "api": [0, 33, 39, 40, 41, 47], "app": [0, 4, 5, 7, 8, 9, 14, 15, 16, 17, 18, 20, 21, 22, 23, 25, 26, 27, 30, 32, 33, 37, 38, 42, 44], "app_east": 23, "app_label": [0, 17, 44], "app_modul": 23, "app_nam": 32, "appear": [1, 30], "append": [21, 32, 38, 39], "appli": [0, 1, 29, 30, 31, 33, 38, 39, 43, 44], "applic": [0, 8, 9, 16, 20, 22, 27, 33, 43, 44], "appoint": 1, "approach": 39, "appropri": [1, 32, 44, 46], "ar": [0, 1, 2, 5, 13, 17, 18, 21, 24, 29, 30, 31, 32, 33, 36, 37, 38, 39, 44, 45, 46, 49], "arbitrari": [30, 41], "archiv": [11, 30], "arg": [4, 28, 29, 31, 37, 38, 39, 44], "argument": [0, 29, 38, 39, 44], "ari": 3, "arlyon": 3, "around": [0, 18, 30, 39], "arrai": 13, "arrayfield": [0, 6, 12, 47], "as_queri": 39, "ascend": 39, "asctim": 35, "asgi": 14, "asgi_lifespan": 23, "asgitransport": 23, "asia": 23, "asia_now": 23, "asia_tz": 23, "ask": 37, "assert": [0, 17, 23], "assertequ": 36, "assertisnon": 36, "assertisnotnon": 36, "assertlistsortequ": 17, "assign": [0, 38], "assist": 17, "associ": [0, 5], "assum": [4, 5, 18, 30, 39, 46], "astimezon": 23, "astroid": 0, "async": [0, 5, 9, 13, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 32, 33, 38, 39, 43, 44, 48], "async_cli": 23, "asynccli": 23, "asynccontextmanag": 23, "asyncgener": 23, "asynchron": 8, "asyncio": [13, 17, 18, 23, 25, 32, 33, 41, 44], "asyncmi": [0, 18, 32, 33], "asyncodbc": [0, 18, 32, 33], "asyncpg": [0, 2, 7, 8, 9, 14, 15, 16, 18, 32, 33, 44], "asyncsetup": 17, "asyncteardown": 17, "asynctest": [0, 17], "atm": 2, "atom": [0, 21, 29, 40, 47, 48], "attach": 39, "attack": [1, 33], "attempt": [0, 5, 28, 33, 38, 44], "attent": 1, "attr": [0, 35, 38], "attribut": [0, 30, 31, 39, 47], "attributeerror": [0, 39], "author": 21, "author1": 21, "author2": 21, "author__nam": 21, "author_id": 21, "auto": [0, 2, 11, 13, 17, 24, 30], "auto_now": [0, 21, 23, 30, 38], "auto_now_add": [0, 13, 21, 23, 24, 30, 38], "autocommit": [0, 21], "autocomplet": [0, 38], "autogener": 30, "autom": 2, "automat": [0, 5, 8, 9, 13, 21, 30, 32, 38, 41, 44], "autonumb": [0, 18, 44], "autous": 17, "avail": [0, 1, 13, 17, 18, 24, 30, 33, 37, 38, 39, 44], "averag": 31, "avg": [21, 31, 40, 47], "avg__gt": 21, "avoid": 0, "awai": [0, 33, 38, 44], "await": [0, 5, 13, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31, 32, 33, 36, 38, 39, 42, 44, 49], "awar": [2, 9, 44, 46], "award": 29, "b": 17, "baa": 13, "back": [13, 21, 24, 38, 42], "backend": [0, 2, 5, 7, 8, 9, 14, 15, 16, 18, 21, 32, 33, 37, 39, 40, 44, 47], "backport": 0, "backtrack": 13, "backward": [0, 13, 30, 32, 39, 44], "backward_fk_field": [38, 44], "backward_kei": 30, "backward_o2o_field": [38, 44], "backward_rel": [0, 13, 47], "bad": [0, 30, 38, 44], "balanc": 29, "balulu": 3, "ban": 1, "bandit": 0, "bar": 21, "barrionuevo": 3, "base": [0, 2, 6, 8, 9, 13, 17, 18, 28, 30, 31, 38, 39, 40, 41, 44, 45, 47], "base_url": 23, "basedbasynccli": [0, 5, 18, 21, 40, 44, 47], "baseexecutor": [18, 44], "basemodel": [9, 13], "baseormexcept": [28, 40, 47], "baseschemagener": [0, 18, 44], "basestr": 0, "basic": [0, 2, 9, 13, 18, 19, 22, 23, 24, 47], "basicconfig": [20, 25, 26, 27], "batch_siz": [0, 38, 39, 44], "becaus": [0, 13], "becom": 41, "been": [0, 5, 38, 39, 43, 44], "befor": [0, 5, 13, 17, 18, 24, 38, 39], "before_serv": 14, "before_server_start": 15, "behav": [0, 10], "behavior": [1, 35, 36, 46], "behaviour": [0, 5, 21], "being": [0, 13, 38, 39], "believ": 2, "belong": 13, "below": [5, 17, 39], "ben": 3, "benchmark": 2, "benefit": [0, 13], "best": [1, 2, 23], "better": [0, 2, 13, 39], "between": [0, 21, 30, 32, 33, 38, 39, 44], "big": [0, 29, 30], "bigintfield": [0, 30, 38, 40, 47, 49], "binari": [0, 11, 29, 30], "binary_compress": [11, 30], "binaryfield": [0, 30, 40, 47], "bind_app": 22, "bit": 30, "bitwis": 29, "black": 0, "blacksheep": [0, 6, 19, 47], "blake": 3, "blakewatt": 3, "blank": [0, 30], "blip": 0, "blob": 31, "block": [0, 13], "blog": [11, 30], "bloom": 34, "bloomindex": [6, 12, 34, 47], "bobi": 39, "bocian": 3, "bodi": [1, 27], "bogdan": 3, "bondar": [1, 3], "book": 21, "bool": [9, 11, 13, 21, 23, 30, 31, 38, 44, 46], "boolean": [0, 9, 30, 44], "booleanfield": [0, 30, 40, 47], "both": [0, 1, 13, 24, 38], "bound": [0, 38, 44], "bound_to_fal": 21, "boundari": [30, 45], "branch": 0, "break": [33, 38, 47], "breakag": 33, "breed": 39, "breed__not": 39, "bring": 0, "brinindex": [6, 12, 47], "broader": 0, "broken": 0, "brown": 3, "btree": 34, "bug": [0, 2, 17], "bugfix": 47, "build": [0, 2, 4, 8, 10, 13, 29, 33, 39, 41], "builder": [33, 41], "built": [0, 13, 33, 34, 38, 49], "builtin": [0, 31], "bulk": [0, 18, 38, 39, 44], "bulk_creat": [0, 38, 39, 40, 44, 47], "bulk_upd": [0, 38, 39, 40, 44, 47], "bulkcreatequeri": [38, 39, 40, 44, 47], "bulkupdatequeri": [38, 39, 40, 44, 47], "bump": 0, "byte": [0, 11, 30], "c": [0, 4, 17, 23, 32, 37], "ca": 2, "cach": 0, "calcul": 13, "call": [0, 5, 13, 17, 18, 24, 29, 30, 31, 32, 33, 38, 39, 43, 44, 46], "callabl": [0, 6, 17, 19, 30, 38, 44, 45, 47, 48, 49], "can": [0, 2, 4, 5, 7, 8, 9, 11, 13, 14, 15, 16, 17, 18, 21, 24, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 44, 46, 48, 49], "cannot": 27, "cap": 0, "capabl": [0, 17, 18, 40, 44, 47], "captur": 2, "care": [0, 13, 31], "carri": 0, "cascad": [0, 21, 24, 30], "case": [0, 2, 13, 17, 18, 24, 30, 31, 33, 38, 39, 40, 44, 47], "cast": [0, 18, 30], "catch": [0, 13, 24], "categori": [23, 29], "cater": 0, "caus": 0, "ccc": 49, "central": 33, "cert": 18, "cert_non": 18, "certain": 39, "certainli": 30, "certif": 18, "chain": [29, 38], "chanc": 0, "chang": [2, 14, 30, 33, 37, 38, 39, 41, 47], "changelog": 0, "char": [0, 30], "charact": [0, 18, 30], "charenumfield": [0, 21, 30, 40, 47], "charfield": [0, 11, 13, 20, 21, 22, 23, 24, 25, 26, 27, 30, 32, 38, 40, 47, 49], "charset": [0, 18], "chat": 2, "chatroom": 2, "check": [0, 2, 13, 24, 30, 33, 39], "check_hostnam": 18, "checksum": [0, 38], "children": [21, 29], "chines": 18, "choic": [25, 37], "chunk": 0, "circumst": 1, "ciso8601": 32, "citi": [21, 24], "cl": [13, 39], "clarifi": [0, 1], "class": [0, 5, 9, 11, 12, 13, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 42, 44, 45, 49], "classic": 29, "classmethod": [0, 13, 38, 39, 43, 44], "classvar": [9, 13], "claus": [29, 38], "clean": [0, 7, 8, 9, 14, 15, 16, 17, 33, 41, 44], "clean_desc": 31, "clean_descript": 21, "clean_nam": 39, "cleanli": 44, "cleanup": 0, "clear": [0, 32, 39], "clearli": [2, 33], "cli": [4, 14], "click": 4, "client": [0, 18, 21, 23, 32, 39, 40, 43, 44, 47], "client_east": 23, "client_manag": 23, "clientmanagertyp": 23, "clone": [0, 38, 40, 44, 47], "close": [5, 18, 23, 35, 44], "close_al": [5, 44], "close_connect": [0, 44], "close_orm": 9, "coalesc": [0, 21, 31, 39, 40, 47], "cockroachdb": 41, "code": [0, 2, 5, 17, 18, 32, 33, 38, 41, 44, 47, 48], "coder": 3, "coerc": 30, "collis": 0, "color": 35, "column": [0, 11, 13, 24, 30, 31, 37, 38, 39], "com": [0, 3, 4, 11, 30, 33, 37], "combin": [29, 39], "come": 0, "comma": [17, 49], "command": [4, 14, 17, 18, 25, 37, 41], "commaseparatedintegerlistvalid": [40, 47, 49], "comment": [0, 1, 13, 18, 19, 24, 30, 38, 47], "commit": [1, 21], "common": [0, 2, 18, 38, 39], "commun": 1, "compar": 33, "comparison": [0, 39], "compat": [0, 30, 38, 44], "compil": [0, 32], "complaint": 1, "complet": [0, 2, 13, 24, 38, 44], "complex": [18, 21, 32, 33, 39], "compli": 36, "compliant": 30, "complic": 29, "compos": [29, 33], "composit": [0, 38], "compound": [0, 38], "comprehens": [0, 33, 41], "compress": [0, 11, 30], "comput": [9, 13, 23, 24, 31, 47], "computedfieldinfo": [9, 13], "con": [21, 39], "concat": [0, 31, 40, 47], "concaten": [2, 33], "concept": 46, "concis": 2, "concurr": [0, 23, 33], "condit": [0, 12, 17], "condition": [0, 17], "conduct": [2, 47], "confidenti": 1, "config": [0, 4, 5, 7, 8, 9, 13, 14, 15, 16, 17, 18, 21, 23, 32, 37, 42, 44, 46], "config_class": [0, 13], "config_fil": [7, 8, 9, 14, 15, 16, 44], "configdict": [9, 13], "configur": [5, 7, 8, 9, 13, 14, 15, 16, 17, 18, 24, 28, 33, 35, 38, 42, 44], "configurationerror": [0, 5, 7, 8, 9, 14, 15, 16, 28, 30, 38, 40, 43, 44, 47], "conflict": [0, 38, 39, 44], "conform": [9, 13], "conftest": 17, "confus": 0, "conn": [5, 21], "conn_alia": 5, "conn_obj": 5, "connect": [0, 2, 4, 5, 7, 8, 9, 14, 15, 16, 17, 18, 21, 23, 28, 32, 35, 37, 38, 40, 42, 43, 44, 47, 48], "connect_timeout": 18, "connection_class": 0, "connection_label": 23, "connection_nam": [17, 18, 44, 48], "connectionerror": 28, "connectionhandl": [5, 40, 47], "connectionwrapp": [0, 18, 44], "consid": [1, 21, 29, 38, 41], "consist": [0, 38, 41], "constant": 31, "constant_text": 31, "constrain": 0, "constraint": [0, 30, 38, 44], "construct": [0, 1, 39], "constructor": 0, "contact": 1, "contain": [0, 7, 8, 9, 13, 14, 15, 16, 17, 18, 21, 24, 29, 30, 31, 32, 33, 38, 39, 44], "contained_bi": [0, 39], "content": 13, "context": [0, 5, 9, 13, 14, 18, 21, 25, 44, 48], "contextlib": 23, "contextvar": [0, 5], "continu": 2, "contrib": [0, 2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 30, 31, 34, 40, 47], "contribut": [1, 2, 33], "contributor": [2, 3, 47], "control": [13, 30, 35], "conveni": [0, 32, 38, 41, 44], "convent": 0, "convers": [30, 38, 44], "convert": [0, 30, 31, 46], "copi": [0, 5, 38, 44], "coroutin": 17, "correct": [0, 1, 2], "correctli": 0, "correspond": [5, 9, 13, 18, 21, 30, 39], "could": [0, 1, 13, 38, 39, 44], "count": [0, 21, 23, 29, 31, 36, 39, 40, 47], "count__gt": 21, "count_peanut": 13, "counterpart": 0, "countqueri": [39, 40, 47], "coven": [2, 47], "coverag": 2, "cpython": [0, 32, 33], "creat": [0, 1, 2, 5, 13, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 47, 49], "create_connect": [0, 18, 44], "create_default_context": 18, "create_unique_index": [0, 30], "create_us": 23, "created_at": [13, 23, 24, 31, 38], "created_at__dai": 39, "created_at__month": 39, "created_at__year": 39, "creation": [0, 19, 30, 38, 43, 44, 47], "creator": [6, 13, 24, 47], "credenti": [0, 5, 7, 8, 9, 14, 15, 16, 18, 21, 44], "criteria": 49, "criterion": 29, "critic": [0, 1, 41], "cross": 41, "crucial": 39, "ctx": 18, "cup": 39, "currenc": 21, "current": [0, 5, 13, 17, 18, 29, 30, 33, 35, 37, 38, 39, 41, 44, 46], "custom": [0, 13, 17, 18, 30, 31, 36, 39, 41, 49], "custom_filt": 39, "custom_t": [38, 44], "customfunct": 31, "custommanag": 38, "cwd": 23, "cycl": [13, 24], "cyclic": 0, "cython": 41, "d": [2, 13, 21, 31, 35], "daemon": 18, "dai": 39, "dangl": 5, "daniel": 3, "data": [0, 8, 9, 13, 18, 21, 23, 24, 28, 29, 30, 31, 33, 38, 39, 40, 41, 44, 47], "data__contain": 39, "data__contained_bi": 39, "data__filt": 39, "data_default": 31, "data_field": [0, 38, 44], "databas": [0, 2, 7, 8, 9, 11, 14, 15, 16, 17, 18, 19, 24, 29, 30, 32, 33, 36, 38, 39, 42, 43, 44, 46, 47], "database_design": 21, "database_func": 31, "datatyp": [18, 38, 44], "date": [0, 13, 24, 30, 31, 39], "date_format": 31, "datefield": [0, 30, 40, 47], "datefmt": 35, "datepart": 39, "datetim": [0, 9, 13, 21, 23, 24, 30, 37, 44, 46], "datetimefield": [0, 13, 21, 23, 24, 30, 38, 40, 46, 47], "db": [0, 2, 5, 14, 17, 18, 21, 23, 25, 28, 30, 31, 32, 33, 37, 38, 39, 41, 42, 43, 44, 48], "db_client": [0, 35], "db_column": 30, "db_config": 5, "db_connect": 0, "db_constraint": [0, 30], "db_creat": [18, 44], "db_delet": [18, 44], "db_field_typ": 30, "db_file": 18, "db_for_read": [21, 42], "db_for_writ": [21, 42], "db_index": [0, 11, 12, 21, 30, 34], "db_name": [0, 18], "db_rout": 21, "db_type": 18, "db_url": [0, 7, 8, 9, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 32, 33, 40, 44, 47], "dbconfigtyp": 5, "dbconnectionerror": [28, 40, 47], "dbm": 46, "dbq": 0, "db\u7279\u5b9a\u5b57\u6bb5": [40, 47], "ddef": 0, "ddl": [0, 18, 30, 44], "de": [0, 41], "deadlock": 0, "debug": [2, 18, 20, 25, 26, 27, 35, 39], "debugg": 32, "decid": 13, "decim": [0, 30], "decimal_plac": [21, 30, 38], "decimalfield": [0, 18, 21, 30, 38, 40, 47], "declar": [0, 13, 21, 23, 39], "decod": [0, 30], "decor": [0, 17, 23, 48], "deem": 1, "def": [0, 13, 17, 20, 21, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 38, 42, 44, 49], "default": [0, 2, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 21, 23, 24, 29, 30, 31, 32, 34, 36, 37, 38, 39, 41, 42, 43, 44, 46], "default_connect": [4, 5, 7, 8, 9, 14, 15, 16, 18, 21, 37, 42, 44], "default_valu": 31, "defici": 18, "defin": [0, 1, 2, 5, 7, 8, 9, 13, 14, 15, 16, 17, 24, 30, 31, 32, 33, 34, 36, 38, 39, 41, 42, 44, 45, 46], "definit": [0, 13, 21, 38], "delet": [0, 18, 21, 22, 30, 38, 39, 40, 41, 42, 44, 47], "deletequeri": [39, 40, 47], "delta_hour": 23, "demand": 21, "demo_text": 39, "demo_text__posix_regex": 39, "demomodel": 39, "demonstr": [5, 21, 24], "dep": 2, "depend": [0, 2, 14, 17, 39, 46], "deprec": [44, 47], "depth": [32, 39], "deriv": 38, "derogatori": 1, "desc": [21, 31, 39], "desc_clean": 39, "descend": 39, "describ": [0, 4, 5, 30, 37, 38, 39, 40, 44, 47], "describe_model": [0, 30, 44], "descript": [0, 11, 12, 13, 21, 24, 30, 38, 44], "deseri": [0, 41], "deserialis": [0, 13], "design": [33, 46], "desir": 39, "destroi": 17, "detail": [0, 1, 4, 5, 9, 11, 18, 27, 30, 37, 38], "detect": [0, 30], "determin": [1, 13, 30, 46], "determinist": 0, "dev": [2, 7, 8, 9, 11, 14, 15, 16, 30], "develop": [0, 2, 14, 18, 25, 33], "devsetgo": 3, "dialect": [0, 17, 18, 21, 30, 44], "dict": [0, 7, 8, 9, 13, 14, 15, 16, 17, 18, 21, 24, 29, 30, 31, 37, 38, 39, 44], "dictionari": [0, 4, 7, 8, 9, 13, 14, 15, 16, 30, 38, 39, 44], "did": [0, 33], "didn": [0, 39], "die": 44, "differ": [0, 1, 2, 18, 30, 33, 34, 38, 46], "differenti": 0, "digit": 30, "direct": [0, 30, 38], "directli": [0, 2, 14, 17, 18, 21, 38, 39, 43], "directori": 2, "dirpath": 23, "disabl": [0, 1, 18, 20, 22, 23, 25, 26, 27], "disallow": 23, "discard": 5, "disclaim": 21, "discontinu": 0, "discov": [0, 7, 8, 9, 13, 14, 15, 16, 17, 32, 43, 44], "discoveri": 0, "distinct": [0, 17, 21, 31, 32, 39], "distribut": [0, 33], "django": [33, 38, 46], "do": [0, 1, 2, 13, 18, 21, 24, 28, 29, 30, 32, 38, 39, 44], "doc": [2, 13, 22, 24, 29, 46, 47], "docstr": [0, 13, 24, 30, 38, 44], "document": [0, 2, 4, 5, 18, 32, 33, 37, 39, 41], "doe": [0, 2, 5, 17, 24, 28, 29, 30, 38, 39, 43, 44], "doesn": [0, 2, 13, 18, 21, 38, 44, 49], "doesnotexist": [0, 8, 9, 28, 38, 40, 44, 47], "domain": [0, 18], "don": [0, 2, 13, 17, 18, 24, 30, 33, 38, 39, 43, 44], "done": [0, 13, 24, 32, 38, 39], "dong": 3, "dongfangtianyu": 3, "dongweim": 3, "doubl": [0, 17, 30, 38, 39], "down": [0, 7, 8, 9, 14, 15, 16, 33], "downgrad": 37, "driven": 17, "driver": [0, 2, 18, 30, 32, 41, 44], "drjackild": 3, "drop": [0, 18, 37, 44], "drop_column": 37, "droserasprout": 3, "dt_format": 31, "dubovskoi": 3, "due": [0, 13, 24, 30, 32], "dump": 30, "duplic": [0, 39], "durabl": 2, "durat": 18, "dure": 13, "dynam": [0, 30], "e": [0, 1, 24, 38, 39, 42, 44], "e0401": [20, 22, 23, 25, 26, 27], "e0611": [20, 22, 23, 25, 26, 27], "each": [2, 17, 18, 21, 31, 33, 38, 39, 44], "earli": [0, 13, 19, 44, 47], "eas": [2, 33, 41], "easi": [0, 33, 38], "easier": [0, 2], "easiest": 42, "easili": [0, 32, 41], "echo": 18, "ed": [38, 44], "edg": 31, "edit": 1, "editor": [0, 2, 38], "effect": 0, "effici": [0, 38, 39, 44], "effort": [0, 2], "either": [0, 2, 17, 18, 38, 46], "electron": 1, "element": [0, 13, 24, 39], "element_typ": 12, "ellipsi": 17, "els": [5, 18, 23, 24, 29, 30, 38, 44], "email": [0, 38, 44], "embed": 18, "emit": 0, "empathi": 1, "employe": [21, 24], "employee_pydant": 24, "empti": [13, 24, 32, 43, 44], "emul": [18, 21, 30], "enabl": [0, 31], "encapsul": 29, "encod": [0, 18, 30], "encourag": 2, "end": [0, 13, 29, 33, 38, 39, 44], "ends_with": 0, "endswith": 39, "enforc": [0, 18, 47], "engin": [2, 5, 7, 8, 9, 14, 15, 16, 18, 21, 44], "engrav": 33, "enhanc": [10, 41, 47], "ensur": [0, 2, 10, 17, 18, 33, 38, 39, 41, 42, 44], "entir": [31, 33, 38, 39, 44], "entiti": [32, 33, 39], "entri": [21, 31], "entrypoint": 5, "enum": [0, 21, 30, 39, 45], "enum_typ": 30, "enumer": [19, 30, 47], "enumfield": [21, 30], "env": [2, 17, 46], "env_initi": [6, 17, 47], "environ": [0, 1, 4, 7, 8, 9, 14, 15, 16, 17, 18, 23, 39], "equal": [30, 36, 39], "equival": [29, 38, 44], "error": [0, 7, 8, 9, 14, 15, 16, 18, 28, 38, 39, 44, 48], "escap": 0, "especi": 21, "essenti": 39, "establish": [18, 30, 44], "etc": [0, 2, 18, 31, 38, 44], "ethnic": 1, "etzelwu": 3, "eugen": 3, "eur": 21, "evalu": [0, 13, 21, 24, 38, 39, 44], "even": [33, 49], "evennumbervalid": 49, "event": [0, 1, 5, 7, 8, 9, 13, 14, 15, 16, 17, 21, 24, 29, 32, 38, 39, 44], "event2": 24, "event3": 24, "event__participants__name__icontain": 39, "event_first": 21, "event_pydant": [13, 24], "event_pydantic_list": 24, "event_reload1": 21, "event_reload2": 21, "event_second": 21, "event_team": [21, 24, 32, 38], "event_tooearli": 24, "eventlen": 38, "eventpi": [13, 24], "events__id__in": 39, "events__nam": 21, "events__name__in": [0, 21, 32], "events__particip": 39, "events__participants__nam": [0, 21, 32], "events__participants__name__startswith": 21, "events__tourna": [32, 39], "events__tournament__id": 21, "events__tournament__nam": 39, "events__tournament_id": 21, "events_count": [21, 39], "events_count__gt": [21, 39], "events_count_with_filt": 21, "events_count_with_filter__gt": 21, "events_num": [13, 24], "everi": [17, 32, 36, 38, 44], "everyon": [0, 1], "everyth": [2, 18], "evstratbg": 3, "evstratenko": 3, "exact": [0, 39, 41], "exactli": [28, 38, 39], "exampl": [1, 2, 4, 5, 13, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 34, 36, 37, 38, 39, 47, 49], "example1": 21, "excel": 33, "except": [0, 5, 8, 9, 13, 17, 18, 21, 23, 24, 27, 28, 30, 39, 40, 47, 49], "exclud": [0, 13, 23, 24, 38, 39, 40, 44, 47], "exclude_raw_field": [0, 13, 47], "exclude_readonli": [0, 13, 22], "exclude_unset": [0, 22], "exclus": 30, "execut": [18, 21, 35, 38, 39, 44], "execute_insert": [18, 44], "execute_mani": [18, 44], "execute_queri": [0, 5, 18, 21, 44], "execute_query_dict": [18, 21, 44], "execute_script": [0, 18, 44], "executor": [18, 23, 44], "executor_class": [18, 44], "exist": [0, 2, 5, 18, 28, 30, 33, 38, 39, 40, 43, 44, 47], "existsqueri": [38, 39, 40, 44, 47], "exit": [4, 37, 44], "expand": 41, "expect": [0, 1, 2, 5, 17, 21, 28, 33, 39, 41], "expectedfailur": [6, 17, 47], "expens": 39, "experi": 1, "explain": [0, 39], "explicit": [1, 2, 13, 14, 38], "explicitli": [0, 13, 21, 23, 38, 39], "export": [0, 4], "expr": [11, 12], "express": [0, 1, 11, 12, 21, 29, 31, 34, 38, 39, 40, 44, 47], "extend": [30, 34], "extens": 30, "extern": [18, 44], "extra": [0, 13, 24, 31, 34, 38, 39, 41, 44], "extract": 0, "extrem": [29, 32], "f": [0, 2, 20, 21, 22, 23, 25, 26, 27, 31, 34, 40, 47, 49], "face": 1, "facto": 41, "factori": 17, "fail": [0, 5, 21, 28, 38, 43, 44, 49], "failur": [0, 17], "fair": 1, "faith": 1, "fall": 42, "fals": [0, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 25, 29, 30, 31, 37, 38, 39, 42, 44, 49], "famili": 0, "familiar": 33, "family_nam": 23, "fast": 17, "fastapi": [0, 6, 19, 47], "faster": [0, 2, 17, 41], "featur": [2, 11, 18, 30, 33, 41, 47], "fetch": [0, 5, 13, 21, 24, 28, 32, 38, 39, 44], "fetch_for_list": [21, 38, 40, 44, 47], "fetch_insert": [18, 44], "fetch_rel": [0, 21, 38, 39, 40, 44, 47], "fetched_princip": 21, "fetched_school": 21, "few": 38, "field": [0, 2, 6, 9, 10, 11, 12, 13, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 38, 39, 40, 41, 44, 46, 47, 49], "field_": 38, "field_a": [38, 44], "field_b": [38, 44], "field_c": 38, "field_d": 38, "field_nam": [31, 38, 39, 44], "field_typ": [0, 30], "fielderror": [28, 39, 40, 47], "fieldinfo": [9, 13], "fieldnam": 0, "fields_": 39, "fields_for_select": 39, "fields_for_select_list": 39, "fieldselectqueri": [39, 40, 47], "fifa": 39, "file": [0, 2, 7, 8, 9, 10, 14, 15, 16, 17, 18, 21, 32, 33, 37, 39, 44], "file_path": [5, 21], "filenam": 37, "filter": [0, 19, 22, 23, 24, 29, 30, 31, 32, 33, 36, 38, 39, 40, 41, 44, 47], "filterinfodict": 29, "final": [0, 6, 17, 21, 29, 33, 47], "find": [0, 18, 29, 38, 39, 44], "fine": 38, "finish": 17, "fir": 21, "firebird": 41, "first": [0, 4, 21, 24, 29, 30, 31, 32, 33, 37, 38, 39, 40, 44, 47], "first_nam": 38, "firstev": 38, "firstklaa": 3, "firstli": 13, "firstparticip": 38, "fishi": 39, "fix": [38, 44, 47], "fixtur": [17, 23, 41], "fk": [0, 21, 38, 39], "fk_field": [38, 44], "fkname": 38, "flag": [0, 31, 49], "flat": [21, 39], "float": [18, 30], "floatfield": [0, 21, 30, 40, 47, 49], "florimond": 3, "florimondmanca": 3, "fmt": 35, "focus": 1, "follow": [1, 2, 10, 13, 17, 18, 24, 30, 32, 33, 34, 35, 38, 39], "foo": [13, 21, 38, 39, 42, 44], "forc": [0, 13, 18, 30, 38, 39, 44], "force_cr": [0, 38, 44], "force_index": [0, 39], "force_upd": [0, 38, 44], "foreign": [0, 30, 38, 39, 44], "foreign_kei": 18, "foreignfield": [21, 38], "foreignfk": 38, "foreignkei": [0, 30, 38, 39, 44], "foreignkeyfield": [0, 13, 21, 24, 30, 32, 33, 38, 39, 40, 47], "foreignkeyfieldinst": [30, 39], "foreignkeynullablerel": [21, 24, 39, 40, 47], "foreignkeyrel": [21, 24, 38, 39, 40, 47], "forget": 0, "form": [18, 30], "formalis": 0, "format": [0, 2, 7, 8, 9, 11, 13, 14, 15, 16, 21, 30, 32, 35, 37, 38, 39, 44], "formatt": 35, "formattim": 35, "forward": [0, 30, 41], "forward_kei": 30, "foster": 1, "found": [34, 38, 39, 44], "found_ev": 29, "four": 45, "framework": [0, 2, 8, 13, 21, 32, 33, 41], "free": 1, "fresh": 17, "from": [0, 1, 5, 9, 13, 14, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 42, 44, 46, 49], "from_attribut": 13, "from_field": 39, "from_orm": 13, "from_queryset": [0, 13, 22, 24, 47], "from_queryset_singl": [0, 13, 47], "from_tortoise_orm": [13, 22, 23, 24, 47], "full": [0, 11, 12, 29, 39], "full_hierarchy__async_for": 21, "full_hierarchy__fetch_rel": 21, "full_nam": 23, "full_text": 34, "fulli": [0, 13], "fulltext": 34, "fulltextindex": [6, 11, 34, 47], "func": 0, "function": [0, 6, 7, 8, 12, 13, 14, 15, 16, 17, 19, 24, 28, 30, 31, 32, 33, 38, 39, 40, 43, 44, 47, 48, 49], "function_cast": 30, "functool": 30, "further": [0, 1, 38, 39, 41], "furthermor": 17, "futur": [0, 23, 44], "g": [0, 18, 24, 38, 44], "gao": 3, "gather": 25, "gen": 0, "genat": 0, "gender": 1, "gener": [0, 2, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 24, 25, 29, 30, 31, 32, 33, 37, 38, 39, 43, 44, 46], "generate_config": 23, "generate_schema": [0, 7, 8, 9, 14, 15, 16, 20, 21, 22, 23, 24, 25, 26, 27, 32, 33, 38, 43, 44], "generate_schema_for_cli": [40, 43, 47], "generated_sql": 30, "geometri": 34, "geometryfield": [6, 11, 30, 34, 47], "get": [0, 2, 5, 13, 17, 18, 20, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 36, 38, 39, 40, 41, 44, 46, 47], "get_annot": 0, "get_connect": [0, 44], "get_db_field_typ": 30, "get_default_timezon": [40, 46, 47], "get_for_dialect": 30, "get_or_cr": [0, 38, 39, 40, 44, 47], "get_or_non": [0, 36, 38, 39, 40, 44, 47], "get_queryset": 36, "get_schema_sql": [21, 40, 43, 47], "get_timezon": [40, 46, 47], "get_use_tz": [40, 46, 47], "getattr": 23, "getdbconfig": [6, 17, 47], "getenv": 23, "getlogg": 35, "getmessag": 35, "gets_talked_to": [21, 24], "ginindex": [6, 12, 34, 47], "gistindex": [6, 12, 47], "github": [0, 3, 4, 33, 37], "gitter": 2, "give": [17, 32, 38], "given": [5, 28, 30, 38, 39, 43, 44, 45, 46, 49], "global": 0, "go": 0, "goal": 41, "gone": [18, 25], "gong": 3, "good": [1, 18, 38], "gorodetskii": 3, "got": 38, "gracefulli": 1, "great": [21, 29, 49], "greater": [39, 49], "greatli": 39, "green": [0, 2, 17], "grigi": 3, "grigoriadi": 3, "group": [0, 19, 31, 39, 47], "group_bi": [0, 21, 38, 39], "gt": 39, "gte": 39, "guarante": [0, 17], "guess": 37, "guid": [0, 2, 38], "guidelin": 2, "h": [3, 4, 35, 37], "h1": [21, 24], "h2": [21, 24], "h3": [21, 24], "ha": [0, 2, 5, 7, 8, 9, 13, 14, 15, 16, 17, 18, 21, 30, 31, 33, 35, 38, 39, 42, 43, 44, 46], "habit": 38, "hack": 0, "had": 0, "handl": [0, 13, 18, 24, 33], "handler": [0, 8, 9], "hang": 2, "hao": 3, "happen": [0, 13, 21, 24, 38, 44], "harass": 1, "hardcod": 2, "harm": 1, "harsha": 3, "harshanarayana": 3, "has_db_field": 30, "hasattr": 30, "hash": 0, "hashindex": [6, 12, 47], "have": [0, 1, 2, 5, 7, 8, 9, 13, 14, 15, 16, 17, 18, 21, 24, 29, 30, 32, 33, 38, 39, 41, 44, 48], "haven": 32, "head": 37, "header": [40, 47], "heavi": 3, "hello": 39, "help": [0, 2, 4, 29, 30, 37, 38], "helper": [0, 13, 17, 24, 32, 33, 43, 44], "henc": [13, 24, 33], "heon": [3, 21], "here": [0, 2, 13, 17, 18, 21, 24, 30, 32, 33, 38, 39, 41, 43, 44, 49], "hezouat": 3, "hidden": 0, "hide": 2, "high": [0, 18, 44], "highlight": 35, "hint": [0, 38, 39], "histori": 37, "hit": 39, "holubakha": 3, "hongquan": 3, "honour": [0, 13, 24, 41], "hood": 2, "hook": [0, 7, 14, 15], "host": [7, 8, 9, 14, 15, 16, 18, 44], "hour": [23, 39], "how": [0, 4, 5, 10, 13, 21, 24, 30, 33, 34, 37, 38, 39, 44], "howev": [0, 2, 13, 24, 33, 38, 39], "html": [2, 46], "http": [0, 1, 2, 3, 4, 11, 23, 30, 33, 35, 37, 46], "http_201_creat": 27, "http_400_bad_request": 27, "httpexcept": 27, "httpnotfounderror": [6, 9, 47], "httpx": 23, "huf": 21, "huge": [3, 13], "hummer12007": 3, "hypothesi": 41, "h\u1ed3ng": 3, "i": [0, 1, 2, 5, 8, 9, 10, 11, 13, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 41, 42, 43, 44, 46, 49], "icontain": 39, "id": [0, 13, 17, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 38, 39, 44], "id__gt": 23, "id__icontain": 21, "id__in": [21, 39], "id_list": [38, 39, 44], "idea": 33, "ident": [1, 21], "identifi": 0, "idp": 29, "iendswith": 39, "iexact": [0, 39], "ignor": [0, 13, 29, 38, 39, 44], "ignore_conflict": [38, 39, 44], "imageri": 1, "immedi": [7, 8, 9, 14, 15, 16, 32], "immun": 33, "immut": 0, "implement": [0, 5, 18, 21, 32, 41, 46, 49], "implicit": 0, "import": [0, 2, 13, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 44, 49], "importerror": 23, "improv": [0, 2, 32, 38], "in_bulk": [0, 38, 39, 40, 44, 47], "in_transact": [0, 21, 40, 47, 48], "inact": 18, "inappropri": 1, "incid": 1, "includ": [0, 1, 13, 17, 24, 32, 38, 39, 47], "include_rout": 23, "inclus": 1, "incompat": 0, "incomplet": [0, 2, 38, 39, 44], "incompleteinstanceerror": [0, 28, 38, 39, 40, 44, 47], "inconsist": [0, 33], "incorrect": 0, "increas": [0, 33], "indent": 24, "index": [0, 6, 11, 12, 18, 30, 34, 38, 39, 44, 47], "index_list": 39, "index_nam": [0, 39], "index_typ": 34, "indexerror": 0, "indic": [0, 18, 30, 38, 39, 44], "individu": 1, "info": [0, 18, 22, 32], "inform": [0, 1, 30, 35, 38, 39, 44], "ing": 0, "inherit": [0, 34, 38, 49], "ini": [18, 37], "init": [0, 5, 13, 18, 19, 21, 32, 33, 37, 41, 42, 43, 44, 46, 47], "init_memory_sqlit": [0, 6, 17, 21, 47], "init_model": [0, 13, 24, 44], "init_orm": 9, "initi": [0, 5, 6, 17, 24, 33, 37, 43, 44, 47], "initialis": [0, 13, 17, 24, 32, 33, 44], "initialize_test": 17, "inject": [0, 33], "inline_com": 18, "inner": [29, 30], "innodb": 2, "insensit": [0, 18, 39], "insert": [0, 18, 21, 38, 39, 43, 44], "insid": [0, 7, 8, 9, 14, 15, 16, 48], "inspect": 41, "inspir": [33, 46], "instal": [0, 2, 7, 8, 9, 14, 15, 16, 17, 18, 30, 32, 44], "instanc": [0, 1, 5, 13, 17, 21, 29, 30, 31, 32, 33, 38, 39, 44, 46], "instance_list": [38, 44], "instanti": 0, "instead": [0, 2, 13, 17, 18, 29, 30, 38, 39, 44, 46, 49], "instruct": [0, 30], "insult": 1, "int": [0, 12, 13, 18, 21, 23, 24, 30, 39, 44, 49], "integ": [0, 13, 18, 30, 37, 38, 44, 49], "integr": [0, 7, 8, 9, 14, 15, 16, 18, 28, 30], "integrityerror": [0, 8, 9, 28, 38, 40, 44, 47], "intenum": [21, 30], "intenumfield": [0, 21, 30, 40, 47], "interact": [4, 39], "interest": [1, 38, 39], "interfac": [0, 2, 5, 18, 33, 36, 38], "intern": [0, 13, 39], "interpret": [32, 44], "intfield": [0, 13, 17, 20, 21, 23, 24, 25, 26, 27, 30, 32, 33, 36, 38, 40, 44, 47, 49], "intmodel": 29, "intnum__gt": 29, "intnum__lt": 29, "introduc": [13, 24], "introduct": [33, 46], "introspect": 0, "invalid": [0, 21, 28, 44, 49], "invert": 29, "investig": 1, "involv": 41, "ipakeev": 3, "ipv4address": 49, "ipv6address": 49, "is_awar": [40, 46, 47], "is_distinct": 31, "is_dst": 46, "is_naiv": [40, 46, 47], "isaqu": 3, "isaquealv": 3, "isinst": 23, "isn": [2, 38, 39, 42, 44], "isnul": [38, 39], "iso8601": 24, "isol": [0, 17], "isolatedasynciotestcas": [0, 17], "isolatedtestcas": [6, 17, 47], "issu": [0, 1, 2, 18, 33], "issubclass": 30, "istartswith": 39, "item": [0, 13, 23, 28, 35, 37, 46], "iter": [0, 9, 17, 21, 32, 38], "its": [0, 1, 5, 13, 17, 29, 34, 38, 44], "itself": [30, 39], "ivan": 3, "j": 18, "jeon": 3, "jeon1": 21, "jeon2": 21, "jeon3": 21, "jinlong": 3, "jiyeon": 3, "jiyeonseo": 3, "jj5": 18, "join": [0, 2, 21, 29, 31, 39], "join_typ": 29, "jong": 3, "journal": 18, "journal_mod": 18, "journal_size_limit": 18, "json": [0, 7, 8, 9, 13, 14, 15, 16, 23, 24, 26, 27, 30, 31, 32, 37, 38, 39, 44], "json_load": 23, "json_respons": 20, "json_set": 31, "jsonb": 0, "jsondecodeerror": 27, "jsonextract": 31, "jsonfield": [0, 30, 31, 39, 40, 47], "jsonifi": 25, "jsonmodel": 39, "jsonrespons": 27, "jsonschema": 30, "jsonset": 31, "junior": 39, "just": [0, 2, 4, 13, 29, 32, 33, 34, 38, 39, 41, 42, 44], "karanam": 3, "kayak": 3, "keep": [0, 2, 29, 31, 33, 39, 44], "kei": [0, 7, 8, 9, 11, 14, 15, 16, 18, 21, 28, 30, 31, 38, 39, 44], "keyerror": [0, 27, 28], "keyword": [0, 29, 38], "kigawa": 3, "kind": 32, "klaa": 3, "klauser": 3, "klein": 3, "know": [0, 13], "known": [0, 39], "kw": 23, "kwarg": [0, 11, 12, 18, 29, 30, 38, 39, 44], "kx": 18, "label": [0, 17, 44], "labrador": 39, "lack": 32, "lane": 24, "languag": 1, "larg": [0, 30], "larger": [0, 18], "largest": [31, 33], "last": [13, 24, 37, 39], "later": [13, 30], "latest": [0, 37, 38, 44], "launch": 14, "lazi": [0, 13], "lazili": 0, "lead": 0, "leadership": 1, "leaf": 0, "leak": [0, 5, 8, 9], "least": [17, 39], "leav": [13, 30], "len": [13, 21, 24, 38], "length": [0, 2, 13, 21, 24, 30, 31, 39, 40, 47, 49], "less": [0, 2, 49], "let": [0, 2, 13, 18, 24, 38], "lev": 3, "level": [0, 1, 5, 13, 18, 20, 21, 25, 26, 27, 39, 44], "levelnam": 35, "leverag": [0, 38], "lexer": 35, "li": 3, "librari": [32, 44, 46], "life": 0, "lifespan": [0, 9, 23], "lifespan_test": 23, "lifespanmanag": 23, "lifetim": 5, "lift": [0, 3], "lightweight": [7, 8, 9, 14, 15, 16], "like": [0, 4, 13, 18, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 44], "limit": [0, 18, 29, 38, 39, 41], "line": [0, 2, 17, 18], "lineno": 35, "link": 21, "lint": 2, "linter": [0, 2, 6, 47], "linux": [2, 32], "list": [0, 2, 5, 13, 17, 18, 19, 21, 23, 29, 30, 37, 38, 39, 44, 47, 49], "list1": 17, "list2": 17, "list_al": [20, 25, 26, 27], "list_of_modul": [7, 8, 9, 14, 15, 16, 17, 44], "listen": [38, 44], "liter": [38, 39], "littl": [32, 38], "live": 5, "lntuition": 3, "load": [0, 10, 17, 30, 38, 44], "local": [18, 46], "localhost": [7, 8, 9, 14, 15, 16, 44], "localtim": [40, 46, 47], "locat": [18, 37], "lock": [38, 39, 44], "log": [0, 2, 20, 25, 26, 27, 40, 47], "logger": [0, 35], "logger_db_cli": 35, "logger_tortois": 35, "logic": [18, 29, 46], "logrecord": 35, "long": [0, 30, 41], "long2ic": [0, 3], "longer": 0, "longtext": 0, "look": [0, 2, 8, 9, 13, 17, 18, 30, 32, 38], "lookup": [0, 30, 38], "loop": [0, 17, 41, 44], "loos": [21, 24], "loose2": 21, "lost": 0, "lot": [0, 38], "low": [5, 18, 44], "lower": [0, 21, 31, 39, 40, 47], "lowest_team_id": 21, "lqmanh": 3, "lru": 0, "lt": 39, "lte": 39, "luckili": 29, "lyon": 3, "l\u01b0\u01a1ng": 3, "m": [31, 35], "m1": 36, "m2": 36, "m2m": [0, 32, 39], "m2m_field": [38, 39, 44], "macro": 0, "made": 29, "magist\u00e0": 3, "mai": [0, 1, 8, 9, 17, 23, 32, 38, 39, 44], "mail": 1, "main": [14, 19, 32, 39, 44, 47], "main_custom_timezon": 23, "maintain": [1, 38], "mainten": [0, 2], "major": [0, 38], "make": [0, 1, 2, 4, 5, 21, 29, 30, 31, 32, 33, 37, 38, 39, 41, 44, 46], "make_awar": [40, 46, 47], "make_n": 0, "make_na": [0, 40, 46, 47], "makefil": 2, "malform": 0, "manag": [0, 5, 13, 21, 24, 32, 33, 38, 40, 41, 44, 47, 48], "managermodel": 36, "manca": 3, "mang": 0, "mani": [0, 18, 29, 30, 33, 38, 39, 44], "manipul": 0, "manner": 39, "manual": [0, 13, 19, 24, 33, 38, 47], "manytomani": [0, 30, 38, 44], "manytomanyfield": [0, 21, 24, 30, 32, 33, 38, 39, 40, 47], "manytomanyrel": [21, 24, 30, 38, 39, 40, 47], "map": [0, 9, 13, 17, 33, 38, 39, 44], "mapper": 33, "mariadb": [0, 33, 40, 47], "mark": [0, 2, 17, 23], "mass": [0, 38, 44], "master": [21, 42], "match": [0, 17, 32, 39, 44, 49], "mateusz": 3, "matter": [39, 46], "matur": [33, 41], "max": [0, 2, 30, 31, 40, 47, 49], "max_digit": [21, 30, 38], "max_inactive_connection_lifetim": 18, "max_length": [0, 13, 21, 22, 23, 24, 27, 30, 32, 38, 49], "max_queri": 18, "max_recurs": [13, 24, 47], "max_valu": 49, "max_work": 23, "maximum": [0, 13, 18, 30], "maxlength": 0, "maxlengthvalid": [40, 47, 49], "maxsiz": [0, 18], "maxvaluevalid": [0, 40, 47, 49], "mayb": [32, 44], "mean": [2, 30, 31, 38], "meant": 39, "measur": 2, "mechan": 0, "media": 1, "meet": [39, 49], "member": [1, 21], "memori": [0, 2, 4, 5, 7, 8, 9, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 26, 27, 29], "memory_sqlit": 23, "mere": 13, "messag": [0, 4, 35, 37, 38], "meta": [0, 13, 21, 24, 34, 36, 38, 40, 44, 47], "meta_overrid": 13, "metaclass": 10, "metacod": 30, "metadata": [9, 13, 38, 44], "meta\u7c7b": [40, 47], "method": [0, 5, 13, 24, 27, 30, 32, 38, 39, 42, 43, 44, 49], "methodnam": 17, "microsecond": 39, "microsoft": [0, 18, 32, 33], "mid": 41, "middl": 29, "migrat": [33, 37, 41], "mike": 3, "min": [0, 21, 31, 40, 47, 49], "min_length": 49, "min_valu": 49, "mind": [2, 5, 33], "minim": 0, "minimis": 0, "minimum": [0, 18, 38, 44], "minlengthvalid": [40, 47, 49], "minor": 0, "minsiz": [0, 18], "minut": 39, "minvaluevalid": [0, 40, 47, 49], "mirrorrim": 3, "misc": 23, "miss": [0, 18, 24], "mistak": [0, 33, 39], "mixin": [0, 30], "mode": [0, 11, 18, 21], "model": [0, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 49], "model_computed_field": [9, 13, 47], "model_config": [0, 9, 13, 47], "model_dump": [13, 22, 23, 24], "model_dump_json": [13, 23, 24], "model_field": [9, 13, 47], "model_nam": [30, 32], "models_path": [0, 44], "modifi": [0, 5, 21, 38, 39], "modified_at": [23, 38], "modul": [0, 2, 7, 8, 9, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 30, 32, 33, 37, 38, 44, 45], "moduletyp": [9, 17], "mojix": 3, "mojixcod": 3, "monica": [21, 24], "month": 39, "moo": [18, 21], "more": [0, 4, 11, 18, 21, 28, 29, 30, 32, 33, 37, 38, 39, 44], "most": [0, 2, 21, 39], "mostli": [18, 44], "move": 0, "mrstork": 3, "msg": [17, 39], "msg2": 39, "mssql": [0, 40, 47], "much": [0, 2, 13], "multidb": 0, "multilay": 29, "multilin": 30, "multipl": [0, 17, 18, 28, 42, 44], "multipleobjectsreturn": [0, 28, 38, 40, 44, 47], "multiprocess": 23, "must": [0, 17, 30, 37, 38, 39, 44], "mutabl": 0, "mutat": [0, 29], "mvp": 41, "my_app": 44, "myabstractbasemodel": 38, "myisam": 2, "mykola": 3, "mykyta": 3, "mymodel": 17, "mypass": 18, "mypi": 23, "mysql": [0, 2, 6, 21, 25, 31, 32, 33, 34, 37, 39, 40, 41, 46, 47], "mysql8": 37, "mysqlclient": 41, "myuser": 18, "m\u1ea1nh": 3, "n": [0, 21, 23, 31, 37], "naiv": [13, 46], "name": [0, 9, 11, 12, 13, 17, 18, 20, 21, 22, 23, 24, 26, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 44, 45, 48], "name1": [38, 44], "name2": [38, 44], "name__contain": 33, "name__icontain": [21, 39], "name__iexact": 0, "name__startswith": 39, "name_in_dict": 39, "name_len": 21, "name_len__gt": 21, "name_length": [13, 24], "name_lo": 21, "name_low": 39, "name_upp": 39, "namemixin": 38, "namespac": [0, 38, 44], "narayana": 3, "nation": 1, "nativ": [0, 2, 18, 30, 46], "natur": [30, 38], "nebuhr": 3, "necessari": [1, 38, 44], "need": [0, 2, 4, 5, 13, 14, 17, 18, 21, 23, 24, 29, 30, 31, 32, 34, 37, 38, 42, 44], "neg": [0, 39], "negat": [0, 29], "neither": 30, "nest": [0, 29, 32], "network": 18, "never": [24, 28, 36, 38, 39, 44], "new": [5, 13, 17, 20, 21, 24, 25, 26, 31, 32, 33, 38, 39, 44, 47], "new_column": 37, "newer": 0, "newval": 0, "nexport": 23, "next": [0, 13, 38], "ngram": 34, "nguy\u1ec5n": 3, "nickola": 3, "nls_lang": 18, "nmysql": 21, "no_act": [0, 30], "no_cont": 22, "no_delai": 0, "node": [21, 29], "nomin": [0, 38], "non": [0, 2, 22, 23, 30, 38, 39], "non_existent_t": 21, "none": [0, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 21, 23, 29, 30, 31, 34, 35, 38, 39, 41, 43, 44, 45, 46, 48], "nop": 29, "normal": [21, 30, 38, 39], "nose2": [0, 2, 6, 47], "nosec": [23, 25], "not_annot": 24, "not_in": 39, "not_isnul": 39, "not_third_ev": 29, "notabl": 0, "note": [11, 14, 18, 21, 24, 30], "notexistormultipl": [28, 40, 47], "noth": [0, 18, 44], "notimplementederror": 24, "novaluesfetch": [13, 21, 24, 28, 40, 47], "now": [0, 13, 21, 23, 24, 31, 33, 37, 40, 45, 46, 47], "nowait": [0, 38, 39, 44], "npostgresql": 21, "nrelat": 24, "nsome": 0, "null": [0, 11, 12, 21, 23, 24, 30, 31, 38, 39, 49], "nullabl": [0, 30, 38, 39, 44], "nullalbl": 0, "num": 13, "number": [0, 17, 18, 31, 39, 44, 49], "numer": [0, 30], "o": [13, 17, 23, 33], "o2o": 0, "o2o_field": [38, 44], "obj": [0, 13, 17, 39], "obj0": 21, "obj1": 39, "obj2": 39, "obj3": 39, "obj4": 39, "obj5": 39, "obj6": 39, "object": [0, 4, 5, 9, 10, 13, 18, 21, 24, 28, 29, 30, 32, 33, 36, 38, 39, 42, 44], "objectdoesnotexisterror": [0, 28, 40, 47], "oblig": 1, "obsolet": 0, "obtain": [5, 39], "obviou": 2, "obvious": 17, "occur": [28, 33, 48], "ocean": [21, 24], "odbc": 18, "odbcinst": 18, "off": [13, 18, 21, 30, 31], "offens": 1, "offici": [1, 18], "offlin": 1, "offset": [0, 18, 39, 41], "often": [2, 10, 31, 32], "oh": [13, 49], "ok": 22, "old": [0, 5, 24, 25], "old_column": 37, "older": 47, "oliveira": 3, "omit": [29, 46], "on_conflict": [38, 39, 44], "on_delet": [0, 21, 24, 30], "on_shutdown": 7, "on_startup": 7, "onc": [0, 32, 44], "ondelet": [21, 24, 30, 40, 47], "one": [0, 2, 7, 8, 9, 13, 14, 15, 16, 17, 18, 21, 28, 31, 35, 36, 38, 39, 44, 48, 49], "ones": 13, "onesi": 24, "onetoon": [0, 30, 38, 44], "onetoonefield": [0, 21, 24, 30, 39, 40, 47], "onetoonefieldinst": [30, 39], "onetoonenullablerel": [24, 39, 40, 47], "onetoonerel": [0, 21, 24, 39, 40, 47], "onli": [0, 2, 7, 8, 9, 11, 13, 14, 15, 16, 18, 30, 31, 37, 38, 39, 43, 44, 46, 48], "onlin": 1, "op": 39, "open": [0, 1, 2, 14, 25, 44], "openapi": 22, "openapihandl": 22, "oper": [0, 2, 21, 28, 29, 30, 36, 38, 39, 42, 44], "operationalerror": [5, 13, 21, 28, 29, 38, 39, 40, 44, 47], "oppos": 33, "opt": 30, "optim": [0, 30, 38, 39, 44], "optimis": 2, "option": [0, 4, 5, 9, 11, 13, 17, 18, 21, 29, 30, 31, 32, 34, 37, 38, 39, 43, 44, 48], "ora": 0, "oracl": [0, 32, 33, 40, 47], "oracle\u4e2d\u7684\u7f16\u7801": [40, 47], "order": [0, 5, 13, 18, 21, 24, 32, 38, 39, 41, 44], "order_bi": [0, 21, 32, 38, 39], "org": [1, 35, 46], "orient": 1, "origin": [5, 42], "orjson": [0, 30, 32], "orm": [0, 2, 4, 5, 6, 10, 13, 17, 20, 22, 23, 25, 26, 27, 28, 32, 37, 38, 39, 41, 44, 47], "oserror": 0, "other": [1, 2, 21, 29, 32, 33, 34, 38, 47], "other_model": 37, "other_pet": 39, "otherwis": [0, 1], "our": [13, 41, 47], "out": [0, 2, 29, 32, 33, 41, 44], "output": [2, 39, 44], "over": [0, 38], "overhaul": 0, "overhead": 0, "overrid": [0, 5, 13, 17, 30, 36, 38], "overridden": [0, 30], "ovsyanka83": 3, "own": [0, 2, 17, 30, 35, 38, 44], "own_record": 35, "owner": 39, "owner__last__not_isnul": 39, "owner__nam": 39, "owner__name__isnul": 39, "owner__other_pets__0__nam": 39, "p": [17, 24], "packag": 32, "pair": 30, "pakeev": 3, "paradigm": 33, "param": [0, 21, 29, 39], "param1": 18, "param2": 18, "paramet": [0, 5, 7, 8, 9, 13, 14, 15, 16, 17, 18, 21, 28, 29, 30, 31, 33, 38, 39, 40, 43, 44, 45, 47, 48, 49], "parameter": 39, "parametr": [0, 18, 33, 41, 44], "paramserror": [0, 28, 38, 39, 40, 44, 47], "parent": [21, 23], "park": 3, "pars": [0, 18, 27], "parser": [18, 34], "parser_nam": [11, 34], "part": [0, 2, 5, 13, 17, 21, 29, 30, 32, 39, 43, 44], "partial": [0, 18, 24, 28, 30, 38, 39, 44], "particip": [1, 21, 24, 32, 38, 39], "participant_1": 39, "participant_2": 39, "participantlen": 38, "participants__id": 21, "participants__nam": [0, 21], "participants__not": 21, "particular": 41, "pass": [0, 5, 17, 18, 21, 28, 30, 32, 38, 39, 44, 49], "password": [0, 2, 7, 8, 9, 14, 15, 16, 18, 44], "password_hash": 23, "patch": [0, 22], "path": [0, 4, 7, 8, 9, 14, 15, 16, 17, 18, 23, 42, 44], "pathlib": 23, "pattern": [5, 49], "paul": 3, "payload": 27, "peek": 2, "peng": 3, "peopl": 2, "pep8": 2, "per": [0, 11, 30, 31], "perfect": [17, 18], "perform": [0, 2, 29, 32, 33, 38, 39, 41, 44], "perman": 1, "permiss": [1, 44], "persist": [0, 28, 38, 39, 44], "person": 1, "physic": 1, "pick": [0, 2], "pilat": 3, "pip": [0, 32], "pitch": 2, "pjongi": 3, "pk": [0, 17, 18, 21, 23, 29, 30, 31, 36, 38, 40, 44, 47], "pk_field": [38, 44], "pk_name": 28, "pk_val": 28, "pkval": 0, "pl": 24, "place": [0, 2, 33, 39], "plainto_tsqueri": 12, "plaintotsqueri": [0, 6, 12, 47], "plan": [0, 39], "pleas": [0, 2, 5, 13, 18, 30, 32, 44], "pledg": 47, "pluggabl": 33, "plugin": [0, 2, 10, 13, 17], "point": [14, 18, 21, 30, 33], "polici": 1, "polit": 1, "poni": 33, "pool": [0, 18, 35, 44], "pool_recycl": 18, "poolconnectionwrapp": [18, 44], "pop": 42, "popul": [0, 14, 24, 25, 38, 39, 44], "popular": 33, "populate_field_object": 31, "port": [7, 8, 9, 14, 15, 16, 18, 20, 25, 26, 44], "posit": [0, 1, 18, 44], "posix": [0, 39], "possibl": [0, 29, 30, 33, 39], "possibli": 41, "post": [0, 1, 20, 22, 23, 27], "post_delet": [21, 40, 45, 47], "post_sav": [21, 40, 45, 47], "postgr": [0, 2, 6, 7, 8, 9, 14, 15, 16, 17, 18, 21, 31, 34, 35, 40, 44, 47], "postgres_posix_regex": 39, "postgresindex": 34, "postgreslex": 35, "postgresql": [0, 2, 31, 33, 39, 40, 46, 47], "postgresqlindex": 34, "potenti": 0, "power": 0, "pr": [0, 2, 33], "practic": 5, "pragma": 18, "pre": [0, 13, 18, 24, 39, 44], "pre_delet": [21, 40, 45, 47], "pre_sav": [21, 40, 45, 47], "preced": [0, 39], "precis": 18, "predefin": 39, "preemptiv": 32, "prefer": [0, 2], "prefetch": [0, 13, 19, 24, 32, 39, 40, 47], "prefetch_rel": [0, 21, 32, 38, 39], "prefix": [23, 39], "preliminari": 0, "prepar": 0, "present": [24, 38, 44], "preserv": [0, 18, 21, 31], "pretti": 32, "prevent": [0, 13, 38], "previou": 5, "priestch": 3, "primari": [0, 11, 18, 28, 30, 32, 38, 39, 44], "primarili": 18, "primary_kei": [0, 11, 12, 13, 17, 20, 21, 22, 23, 24, 25, 26, 27, 30, 32, 33, 38], "princip": 21, "print": [0, 5, 13, 21, 23, 24, 31, 32, 33, 35, 39], "prioriti": [0, 2], "privat": [0, 1, 41], "privatwolk": 3, "prize": [21, 38], "probabl": 13, "problem": [0, 28], "process": [0, 33], "processpoolexecutor": 23, "prod": [21, 32], "produc": 39, "product": [8, 9, 18], "profession": 1, "project": [1, 2, 10, 33, 38], "promot": 0, "propag": 0, "proper": [0, 46], "properli": [0, 13, 44], "properti": [0, 5, 13, 30, 38, 41, 44], "protect": [0, 13, 24, 39], "provid": [0, 2, 5, 10, 13, 17, 18, 29, 30, 31, 33, 36, 38, 39, 41, 43, 44], "psycopg": [0, 2, 18, 32], "ptpython": 4, "public": [0, 1], "publish": 1, "pull": [2, 29], "purpos": [0, 30, 44], "put": [13, 22, 42], "py": [0, 2, 4, 6, 19, 47], "py312": 0, "py37": 0, "pydant": [0, 6, 8, 9, 19, 22, 30, 47], "pydantic2": 0, "pydantic_model_cr": [0, 6, 13, 22, 24, 47], "pydantic_queryset_cr": [6, 13, 24, 47], "pydanticlistmodel": [6, 13, 47], "pydanticmeta": [0, 6, 19, 23, 47], "pydanticmodel": [0, 6, 13, 47], "pydanticmodelcr": 0, "pydanticundefin": 13, "pygment": 35, "pygmentsformatt": 35, "pylint": [0, 6, 20, 22, 23, 25, 26, 27, 33, 47], "pylintrc": 10, "pymysql": 0, "pypi": [0, 2], "pypika": [0, 3, 18, 29, 30, 31, 34, 39, 44], "pypy3": 0, "pytest": [17, 23], "python": [0, 2, 8, 18, 23, 24, 29, 30, 38, 41, 44, 46, 47], "python3": [0, 20, 26, 27], "python_program": 21, "python_typ": 30, "pythonpath": 23, "pytz": 23, "pyyaml": [7, 8, 9, 14, 15, 16, 44], "q": [0, 21, 29, 38, 39, 40, 44, 47], "q_object": 39, "qualifi": [38, 44], "qualnam": [30, 45], "quang": 3, "quart": [0, 6, 19, 47], "quart_app": [14, 25], "quarter": 39, "quasar6x": 3, "queri": [0, 18, 21, 29, 30, 32, 33, 35, 36, 38, 39, 41, 42, 44], "query_class": [18, 44], "query_util": [0, 21, 39, 40, 47], "query_without_app": 23, "querybuild": 39, "querymodifi": 29, "queryset": [0, 2, 13, 19, 21, 30, 31, 38, 40, 44, 47], "querysetsingl": [0, 13, 38, 39, 40, 44, 47], "queryset\u548clist": [6, 47], "quick": [2, 4, 37], "quit": 32, "quot": 0, "quote_plu": 18, "qu\u00e2n": 3, "qwerty123": [7, 8, 9, 14, 15, 16, 44], "q\u8868\u8fbe\u5f0f": [40, 47], "race": [0, 1], "rais": [0, 5, 7, 8, 9, 14, 15, 16, 17, 21, 23, 24, 27, 28, 29, 30, 38, 39, 40, 43, 44, 46, 47, 49], "raise_does_not_exist": 39, "rand": [0, 31, 40, 47], "random": [0, 17, 25, 31, 40, 47], "randomis": 17, "rang": [0, 21, 32, 39], "rapidjson": 0, "rate": 21, "rather": [0, 2, 38, 44], "raw": [0, 13, 18, 29, 30, 38, 39, 40, 44, 47], "raw_field": 30, "rawsql": [0, 29], "rawsqlqueri": [38, 39, 40, 44, 47], "re": [0, 18, 49], "reach": 0, "read": [0, 21, 32, 38, 39], "readonli": 13, "reason": [1, 17], "rebecca": 3, "rebkavet": 3, "receiv": 38, "recommend": [0, 5, 8, 9, 13, 18, 38, 43, 44], "reconnect": 0, "record": [0, 13, 24, 30, 33, 35, 38, 39, 44], "recurs": [0, 13, 19, 24, 47], "recycl": 18, "reduc": [0, 2], "reduct": 0, "redund": 2, "ref": 13, "refactor": 0, "refer": [0, 7, 8, 9, 13, 14, 15, 16, 17, 21, 24, 29, 30, 32, 38, 40, 44, 46, 47], "referenc": [0, 38], "referenti": [0, 13, 18, 21, 29, 31, 39], "reformat": 0, "refresh": [29, 38, 44], "refresh_from_db": [0, 29, 38, 40, 44, 47], "regard": [0, 1, 29, 33], "regardless": [1, 2, 29], "regex": [0, 49], "regexp": 39, "regexvalid": [40, 47, 49], "regist": [0, 7, 8, 9, 14, 15, 16, 18, 38, 44, 45], "register_listen": [38, 40, 44, 47], "register_orm": 23, "register_tortois": [0, 6, 7, 8, 9, 14, 15, 16, 20, 22, 25, 26, 27, 47], "registertortois": [0, 6, 9, 23, 47], "regress": 0, "regular": [0, 13, 21, 31, 32, 39], "reject": 1, "rel": [0, 2, 33], "relat": [0, 13, 19, 22, 23, 28, 30, 32, 33, 38, 39, 40, 44, 47], "related_nam": [0, 13, 21, 24, 30, 32, 38], "relation_field": 39, "relationalfield": 0, "relations_recirs": 0, "relationship": [0, 13, 21, 24, 30, 32, 33, 38, 44], "relative_to": 23, "releas": [0, 44], "reliabl": 30, "religion": 1, "reload": [22, 23], "remain": 42, "remot": [0, 38, 44], "remote_model": 39, "remov": [1, 5, 13, 32, 39, 44, 47], "renam": [0, 37], "render": 18, "repeat": [2, 30, 33], "repercuss": 1, "repetit": 38, "replac": [0, 9, 13, 17, 18, 35, 41], "report": [0, 1, 2], "repres": [1, 13, 29, 30, 31, 32], "represent": [0, 1, 24, 30], "request": [0, 2, 17, 20, 26, 27, 30, 39], "requir": [0, 9, 13, 17, 18, 27, 29, 30, 33, 37, 38, 39, 44], "requirecap": [0, 6, 17, 47], "requires_limit": 18, "reserv": [0, 38], "reset": [5, 17, 30], "resolv": [0, 29, 30, 31, 38, 39], "resolve_filt": 39, "resolve_for_queryset": 39, "resolve_ord": 39, "respect": [1, 2], "respons": [0, 22, 23, 26, 27, 38, 47], "restor": [0, 5], "restrict": [30, 38], "result": [0, 1, 13, 21, 23, 24, 29, 31, 38, 39, 44], "resultset": [18, 39, 44], "ret": 21, "retain": 5, "retract": 47, "retri": 0, "retriev": [17, 18, 42], "return": [0, 5, 7, 8, 9, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48], "reus": 0, "revers": [0, 13, 24, 30, 38, 44], "reverserel": [13, 21, 24, 38, 39, 40, 47], "revert": 0, "review": 1, "revimi": 3, "rework": 0, "rfk": 0, "right": [0, 1, 18, 21], "risk": 2, "riski": 5, "roadmap": 41, "robust": 0, "rodrigo": 3, "role": 38, "rolemodel": 38, "roll": 21, "rollback": [17, 21, 37, 48], "root": [0, 2, 13, 21, 24, 25, 37], "root2": 21, "rootmodelroottyp": 13, "rout": [0, 25, 26, 27, 42], "router": [0, 19, 22, 23, 42, 44, 47], "router1": 44, "router2": 44, "row": [0, 18, 38, 39, 44], "rows_affect": 0, "rozum": 3, "rozumalex": 3, "rstrip": 35, "ru": 1, "rule": [33, 39], "run": [0, 2, 4, 13, 14, 17, 18, 21, 23, 24, 25, 26, 27, 28, 32, 33, 39, 41, 44, 48], "run_app": 20, "run_async": [0, 17, 21, 24, 32, 33, 44], "runner": [0, 14, 17, 18, 23, 44], "runtest": 17, "runtim": [5, 35], "runtimewarn": 0, "russian": 18, "ryan": 3, "safe": [0, 21, 30, 33, 40, 41, 43, 44, 47], "sai": 0, "said": 44, "same": [0, 2, 5, 7, 8, 9, 13, 14, 15, 16, 21, 30, 31, 38, 39, 42, 44], "sampl": 0, "sane": [2, 13], "sang": [3, 21], "sanic": [0, 6, 19, 47], "santa": [21, 24], "save": [0, 11, 21, 29, 30, 31, 32, 33, 38, 39, 40, 42, 44, 47], "saved_ev": 21, "scalar": 39, "scan": 39, "scenario": 39, "schema": [0, 7, 8, 9, 13, 14, 15, 16, 18, 19, 23, 24, 25, 30, 32, 33, 37, 38, 40, 41, 44, 46, 47], "schema_gener": [18, 44], "schema_json": 24, "schema\u521b\u5efa": [19, 47], "scheme": 42, "school": 21, "school1": 21, "school2": 21, "school__nam": 21, "school_id": 21, "school_with_filt": 21, "school_without_filt": 21, "scope": [0, 17, 23, 47], "score": 38, "script": [0, 18, 32, 33, 44], "search": [0, 6, 11, 12, 33, 38, 39, 44, 47], "searchcriterion": [6, 11, 12, 47], "second": [18, 21, 24, 39], "second_cli": 21, "second_tourna": 21, "secondli": 13, "section": [0, 17, 37, 39], "secur": 47, "see": [0, 4, 7, 8, 9, 11, 13, 14, 15, 16, 17, 18, 29, 30, 33, 37, 38, 39, 44], "seed": 31, "select": [0, 5, 18, 21, 30, 31, 38, 39, 42, 44, 46], "select_for_upd": [0, 38, 39, 40, 44, 47], "select_rel": [0, 39], "selected_ev": 32, "self": [0, 13, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 34, 35, 36, 38, 39, 42, 44, 49], "semicolon": [18, 44], "send": [0, 21, 45], "sender": [21, 45], "sens": [31, 39], "seo": 3, "separ": [0, 1, 2, 17, 18, 21, 30, 39, 49], "sequenc": [0, 18, 39, 44], "serd": 32, "serial": [13, 21, 24, 30, 32, 41], "serialis": [0, 13, 24], "serializ": [13, 30, 38, 44], "serov": 3, "serv": 5, "server": [0, 14, 18, 19, 25, 32, 33, 44, 47], "servic": [14, 21, 32, 33], "session": 17, "set": [0, 1, 2, 4, 5, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 30, 31, 32, 33, 34, 37, 38, 39, 42, 43, 44, 46], "set_default": 30, "set_nul": 30, "set_start_method": 23, "setformatt": 35, "setlevel": 35, "settl": 2, "setup": 17, "sever": [0, 32, 39], "sexual": 1, "sh": 35, "shaloba": 3, "shanghai": 23, "sheep": 21, "shell": [14, 25, 40, 47], "ship": 41, "shirt": 24, "shlomi": 3, "short": [0, 41], "shortcut": 0, "should": [0, 2, 5, 7, 8, 9, 13, 14, 15, 16, 17, 18, 21, 29, 30, 34, 38, 39, 44, 46, 49], "shouldn": [32, 44], "show": [0, 1, 4, 5, 13, 21, 37], "shown": 32, "shutdown": [8, 9, 16], "side": [0, 31], "sign": [18, 30], "signal": [0, 19, 38, 40, 44, 45, 47], "signal_post_delet": 21, "signal_post_sav": 21, "signal_pre_delet": 21, "signal_pre_sav": 21, "signal_sav": 21, "signatur": 17, "signific": [0, 30], "significantli": 0, "silent": [0, 39], "similarli": 18, "simpl": [0, 2, 5, 13, 21, 24, 29, 30, 32, 33, 38, 41, 42, 44], "simpletestcas": [6, 17, 47], "simpli": [13, 29, 34], "simplifi": 0, "simultan": 0, "sina": 3, "sinaso": 3, "sinc": [0, 10, 13, 18, 38], "singl": [0, 7, 8, 13, 14, 15, 16, 17, 21, 30, 38, 39, 44], "single_connect": 0, "singleton": 5, "singular": 13, "sinichkin": 3, "size": [0, 1, 13, 18, 24, 30], "skip": [0, 2, 6, 17, 30, 47], "skip_lock": [0, 38, 39, 44], "skip_to_python_if_n": 30, "skipif": [6, 17, 47], "skiptest": [6, 17, 47], "skipunless": [6, 17, 47], "slave": [21, 42], "slice": [0, 39], "slight": 0, "slightli": [33, 41], "slow": [2, 17], "slower": 17, "slq": 35, "sm0k": 3, "small": [0, 29, 30, 44], "smaller": 0, "smallest": 31, "smallint": 0, "smallintfield": [0, 30, 40, 47, 49], "snippet": [5, 29], "snksynthesi": 3, "so": [0, 2, 5, 13, 14, 18, 24, 30, 31, 32, 33, 38, 39, 43, 44], "social": 1, "socket": [0, 18], "sohangir": 3, "solodukha": 3, "solut": 41, "some": [0, 2, 8, 9, 13, 17, 18, 21, 29, 30, 32, 34, 38, 39, 41, 49], "some_purpos": 2, "someapp": 17, "somedb": 18, "someev": 38, "somemodel": [31, 38], "someparticip": 38, "somepurpos": 2, "someth": [0, 30], "sometim": [29, 39], "somewhat": 41, "somewher": 24, "sort": [13, 24, 39], "sort_alphabet": [13, 47], "sorted_kei": 17, "sourc": [0, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 24, 28, 29, 30, 31, 33, 38, 39, 43, 44, 45, 46, 48, 49], "source_field": [0, 11, 12, 30], "space": 1, "spatialindex": [6, 11, 34, 47], "spawn": 23, "special": [3, 18, 29, 38, 39, 44], "specialis": 39, "specif": [0, 1, 2, 9, 11, 12, 13, 18, 30, 38, 39, 44, 49], "specifi": [0, 2, 7, 8, 9, 13, 14, 15, 16, 17, 18, 21, 29, 30, 32, 33, 37, 38, 39, 42, 44, 46], "speed": [0, 30], "speedup": 0, "spgistindex": [6, 12, 47], "spice": 29, "split": 0, "sql": [0, 18, 19, 29, 30, 31, 32, 33, 35, 38, 39, 43, 44, 47], "sql_dialect": 30, "sql_type": 30, "sqlite": [0, 2, 4, 5, 7, 8, 9, 14, 15, 16, 17, 20, 21, 22, 23, 24, 26, 27, 31, 32, 33, 39, 40, 42, 43, 44, 46, 47], "sqlite3": [0, 5, 18, 21, 31, 32, 33, 44], "sqlitecli": 0, "sqltype": 30, "ssl": [0, 18], "stage": [0, 13], "stale": 18, "standard": [0, 13, 17, 18, 33, 39, 41, 47], "stanislav": 3, "starlett": [0, 6, 9, 19, 47], "start": [2, 4, 13, 14, 25, 30, 32, 33, 37, 38, 39, 45], "start_transact": 0, "starts_with": 0, "startswith": [35, 39], "startup": [7, 8, 9, 14, 15, 16, 23], "state": [0, 5, 23], "statement": [0, 13, 18, 29, 31, 38, 39, 44, 48], "static": [0, 2, 9], "statu": [25, 27, 36], "status": 25, "status_cod": [23, 27], "statusmanag": 36, "stdout": [2, 35], "step": 39, "stephan": 3, "sticki": 42, "still": [0, 38, 44], "stop": [17, 39], "storag": [2, 5], "store": [0, 11, 18, 30, 37, 39, 46], "str": [0, 9, 13, 17, 20, 21, 22, 23, 25, 26, 27, 29, 30, 31, 34, 38, 39, 43, 44, 46], "straightforward": 32, "straightforwardli": [2, 33], "strategi": 41, "streamhandl": 35, "street": [21, 24], "string": [0, 2, 7, 8, 9, 13, 14, 15, 16, 17, 18, 21, 24, 30, 38, 42, 44], "strip": 23, "strongli": 0, "structur": [2, 18, 24, 30], "student": 21, "student1": 21, "student_school": 21, "students__nam": 21, "style": [0, 2, 17], "sub": [29, 41], "subclass": [0, 30, 34, 38], "submit": [0, 23], "subqueri": [0, 29], "subscript": 0, "subset": [13, 38, 44], "substr": 39, "subsystem": 2, "success": [17, 37], "suffix": 13, "sugar": 0, "suit": 2, "suitabl": 31, "sum": [21, 31, 40, 47], "sum__gt": 21, "super": [0, 30, 31, 34, 36], "superclass": 30, "superloach": 3, "suppli": 0, "support": [0, 2, 11, 13, 17, 18, 21, 28, 29, 30, 31, 32, 33, 37, 38, 39, 41, 44], "support_for_upd": 18, "support_index_hint": 18, "support_update_limit_order_bi": 18, "supports_transact": 18, "supppli": 0, "sure": [5, 30, 39], "suscept": 0, "svms1": 3, "switch": 33, "sy": 35, "sync": [13, 17, 21, 38], "synchron": 33, "syncronis": 0, "syntact": 0, "syntax": [0, 35, 37], "system": [0, 8, 9, 18], "system_administr": 21, "szeredi": 3, "szuc": 3, "t": [0, 2, 13, 17, 18, 21, 24, 29, 30, 32, 33, 37, 38, 39, 42, 43, 44, 49], "t1": 29, "t_conn": [18, 44, 48], "tabl": [0, 17, 21, 29, 30, 31, 33, 38, 39, 43, 44], "table_descript": [0, 21, 38], "take": [0, 1, 29, 30, 39, 49], "talks_to": [21, 24], "target": [2, 18, 44], "task": 31, "tconn": 21, "team": [1, 2, 13, 21, 24, 32, 38, 39], "team1": 24, "team2": 24, "team3": 24, "team_first": 21, "team_memb": [21, 24], "team_pydant": 24, "team_second": 21, "team_siz": 24, "tear": [0, 7, 8, 9, 14, 15, 16, 33], "teardown": [7, 8, 14, 15, 16, 17, 23], "technologi": 33, "tell": [13, 39], "templat": [0, 21, 28], "temporari": 1, "temporarili": 1, "tend": 2, "term": [2, 30, 31, 34, 41], "termin": 35, "terminal_formatt": 35, "terminalformatt": 35, "terra": 3, "test": [0, 2, 6, 7, 8, 9, 14, 15, 16, 18, 19, 21, 24, 32, 33, 37, 38, 39, 41, 42, 44, 47], "test2": 24, "test_": 17, "test_api": [19, 47], "test_create_us": 23, "test_create_user_east": 23, "test_item": 17, "test_mysql": 2, "test_mysql_myisam": 2, "test_postgres_asyncpg": 2, "test_postgres_psycopg": 2, "test_query_without_app": 23, "test_run_sqlite_onli": [0, 17], "test_skip": 17, "test_someth": 17, "test_something_async": 17, "test_sqlit": 2, "test_user_list": 23, "testal": 2, "testcas": [0, 6, 17, 47], "testdb": 17, "testfil": 2, "testlast": 24, "testmodel": [2, 17], "testsometh": 17, "testsqlit": 17, "testus": 23, "testusereast": 23, "text": [0, 4, 11, 12, 18, 21, 23, 30, 31, 37, 39], "textfield": [0, 11, 17, 21, 24, 30, 33, 34, 38, 39, 40, 47], "thakryptex": 3, "than": [0, 2, 17, 18, 28, 29, 38, 39, 44, 49], "thank": 3, "the_tourna": 38, "thei": [0, 1, 13, 29, 30, 33, 38, 39, 43, 44, 45], "them": [0, 2, 13, 29, 30, 32, 38, 39, 44], "therefor": 5, "thi": [0, 1, 2, 4, 5, 8, 9, 11, 13, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 37, 38, 39, 44, 46, 48, 49], "thing": [2, 29, 39], "third": [21, 24], "thirli": 13, "those": [0, 2, 18, 29, 30, 32, 39], "though": [2, 18], "threaten": 1, "three": 18, "through": [0, 21, 24, 30, 32, 36, 38, 39], "throw": [0, 18, 38, 44], "thrown": 0, "tiabogar": 3, "tiago": 3, "time": [0, 2, 13, 23, 24, 30, 38, 41, 46], "timedelta": [0, 30], "timedeltafield": [0, 30, 40, 47], "timefield": [0, 46], "timeout": 18, "timestamp": [13, 21, 24, 46], "timestampmixin": 38, "timestamptz": 46, "timetz": 46, "timezon": [0, 9, 21, 23, 40, 41, 42, 44, 47], "titl": [13, 22, 23], "tmp": [17, 21, 42], "to_attr": [21, 39], "to_attr_events_first": 21, "to_attr_events_second": 21, "to_db_valu": [0, 30], "to_field": [0, 21, 30], "to_python_valu": 30, "to_tsqueri": 12, "to_tsvector": 12, "tocker": 2, "togeth": [0, 38, 44], "token": [5, 21], "too": [2, 32, 39], "tool": [4, 29], "top": [0, 4], "tortois": [0, 2, 4, 5, 6, 10, 11, 12, 13, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49], "tortoise_mysql_pass": 2, "tortoise_orm": [4, 37], "tortoise_postgres_pass": 2, "tortoise_test_app": [0, 17], "tortoise_test_db": [17, 23], "tortoise_test_modul": 17, "tortoisecli": [40, 47], "tortoiseorm": 4, "totsqueri": [6, 12, 47], "totsvector": [6, 12, 47], "touch": 0, "tour": 33, "tournament": [0, 13, 21, 24, 29, 30, 32, 33, 38, 39], "tournament2": 24, "tournament__id": 21, "tournament__nam": [0, 21, 39], "tournament_id": [21, 38], "tournament_list": 39, "tournament_nam": 39, "tournament_pydant": [13, 24], "tournament_pydantic_earli": 24, "tournament_pydantic_list": [13, 24], "tournament_test_id": 21, "tournament_with_filt": [21, 39], "tournament_with_filtered_to_attr": 21, "tourpi": [13, 24], "toward": 1, "track": [13, 29, 31, 33, 39], "tracker": 33, "trade": 33, "transact": [0, 2, 17, 18, 19, 28, 32, 33, 38, 39, 40, 44, 47, 48], "transactioncontext": 48, "transactionmanagementerror": [28, 38, 40, 44, 47], "transform": [0, 31], "transport": 23, "trdex": 3, "tri": 44, "trim": [0, 21, 31, 39, 40, 47], "trimmed_nam": 21, "troll": 1, "true": [0, 5, 7, 8, 9, 11, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 30, 32, 33, 34, 37, 38, 39, 43, 44, 46, 49], "truncat": [0, 17], "truncationtestcas": [0, 6, 17, 47], "truncmonth": 31, "try": [2, 5, 13, 21, 23, 24, 27, 30, 31], "tsvectorfield": [6, 12, 30, 47], "tupl": [0, 13, 18, 23, 29, 38, 39, 44], "turn": 0, "tutori": [8, 9, 13, 24, 32, 41], "tweak": [0, 2], "twice": 0, "two": [0, 13, 19, 24, 35, 36, 39, 42, 46, 47, 49], "tylindu": 3, "type": [0, 2, 5, 7, 8, 9, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 29, 30, 31, 34, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48], "typeerror": 39, "typic": [5, 18, 38, 44], "typo": 0, "tz": 0, "tzinfo": 46, "u": 38, "un": 0, "unaccept": 1, "uncondition": 17, "under": 2, "underli": 5, "underscor": [38, 39], "understand": [10, 39], "unexpect": 17, "unfamiliar": 29, "unfortun": 33, "unicod": 0, "unifi": 0, "union": [9, 17, 18, 22, 30, 44], "uniqu": [0, 11, 12, 19, 23, 30, 38, 39, 44, 47], "unique_togeth": [0, 38, 44], "unit": 17, "unittest": [0, 17, 33], "unix": [0, 18], "unixodbc": 18, "unknown": 39, "unless": [17, 21, 38, 46], "unpack": 13, "unsaf": 0, "unspecifi": [38, 44], "unsupportederror": [28, 40, 47], "until": [5, 38, 39, 44], "untyp": 23, "unwelcom": 1, "up": [0, 2, 5, 7, 8, 9, 14, 15, 16, 17, 29, 30, 31, 32, 33, 38, 42, 44], "updat": [0, 2, 5, 18, 21, 22, 29, 30, 31, 35, 37, 38, 39, 42, 44], "update_field": [0, 21, 29, 38, 39, 44], "update_from_dict": [0, 38, 40, 44, 47], "update_kwarg": 39, "update_or_cr": [0, 38, 40, 44, 47], "updatequeri": [39, 40, 47], "upgrad": [0, 37], "upon": 2, "upper": [0, 21, 31, 39, 40, 47], "uri": 0, "url": [0, 2, 17, 18], "urllib": 18, "urushev": 3, "us": [0, 1, 2, 4, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 21, 24, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 49], "usag": [0, 2, 4, 10, 13, 14, 17, 20, 21, 22, 23, 24, 25, 26, 27, 30, 34, 36, 37, 38, 39, 42, 44, 49], "usd": 21, "use_index": [0, 39], "use_tz": [0, 9, 21, 40, 42, 44, 47], "user": [0, 2, 7, 8, 9, 13, 14, 15, 16, 18, 20, 22, 23, 25, 26, 27, 29, 38, 44], "user_id": 23, "user_list": 23, "user_obj": 23, "user_pydant": 23, "userin": 22, "usermodel": 38, "usernam": [18, 22, 23, 27, 38, 44], "userout": 22, "userpydanticin": 22, "userpydanticout": 22, "users_cr": 22, "users_delet": 22, "users_list": 22, "users_patch": 22, "users_put": 22, "users_rout": 23, "usertest": 23, "using_db": [0, 21, 38, 39, 44], "usual": [2, 13, 17, 39], "utc": [9, 21, 23, 42, 44, 46], "utc_now": 23, "utc_tz": 23, "utcnow": [0, 30], "utcoffset": [0, 46], "utf8": 18, "utf8mb4": [0, 18], "util": [0, 7, 8, 9, 14, 15, 16, 17, 21, 40, 43, 47], "uuid": [0, 11, 21, 22, 30], "uuid4": [11, 30], "uuidfield": [0, 6, 11, 21, 22, 30, 38, 40, 47], "uvicorn": [22, 23, 27], "uvloop": 32, "v": [4, 37], "v1": [9, 13, 41], "v2": 0, "v3": 22, "val": [21, 35], "valid": [0, 11, 12, 13, 18, 21, 24, 28, 30, 38, 40, 41, 47, 49], "validate_even_numb": 49, "validate_ipv46_address": [40, 47, 49], "validate_ipv4_address": [40, 47, 49], "validate_ipv6_address": [40, 47, 49], "validationerror": [28, 30, 40, 47, 49], "validatormodel": 49, "valu": [0, 2, 11, 13, 18, 21, 29, 30, 31, 38, 39, 44, 45, 46, 49], "value_list": 0, "valueerror": [21, 30, 38, 39, 44, 46], "values_list": [0, 21, 29, 31, 39], "valueslistqueri": [0, 39, 40, 47], "valuesqueri": [39, 40, 47], "var": [0, 17], "varchar": [18, 30], "vari": 39, "variabl": [0, 2, 4, 17, 18, 32, 37, 38, 39, 44], "variou": 38, "verbatim": [18, 44], "verbos": [2, 18, 39], "veri": [0, 2, 9, 30, 39], "verifi": 23, "verify_mod": 18, "versatil": 29, "version": [0, 1, 2, 4, 22, 37], "version_num": 37, "veryforeignfield": 38, "via": [0, 1, 13, 17, 18, 24, 38], "view": 39, "viewpoint": 1, "vinai": 3, "vinayinvic": 3, "violat": 2, "virtual": [29, 30, 31, 38, 39], "vitali": 3, "vladimir": 3, "vlakiu": 3, "volunt": 2, "vv": 2, "wa": [0, 13, 21, 24, 28, 33, 39], "wai": [0, 2, 9, 13, 36, 38, 41, 42], "wait": [18, 44], "waket": 3, "waketzheng": 3, "wal": 18, "wallner": 3, "wallneradam": 3, "want": [0, 2, 13, 14, 29, 30, 31, 33, 34, 35, 38, 39, 44], "warn": 30, "wasn": 0, "watter": 3, "we": [0, 1, 2, 7, 8, 9, 10, 13, 14, 15, 16, 18, 21, 24, 29, 30, 31, 32, 33, 38, 39, 41, 43, 44], "web": [8, 20], "webserv": [7, 15], "week": 39, "weiliang": 3, "weim": 3, "welcom": [1, 2], "well": [0, 29, 30, 33, 38, 39], "what": [1, 2, 13, 21, 29, 30, 38, 39, 46], "when": [0, 1, 2, 5, 17, 18, 21, 28, 30, 33, 34, 38, 39, 40, 43, 44, 46, 47], "where": [0, 2, 13, 18, 24, 30, 31, 32, 38, 39, 44], "wherev": [0, 44], "whether": [0, 30, 38, 39, 44, 49], "which": [0, 1, 5, 7, 8, 9, 13, 14, 15, 16, 17, 18, 30, 31, 32, 33, 34, 36, 38, 39, 43, 44, 46], "whichev": [0, 38], "while": [0, 5], "whitespac": 31, "who": [1, 38], "whole": 39, "whose": 39, "why": 33, "widespread": 38, "wiki": 1, "window": [0, 2, 32], "winerror": 0, "wip": 2, "wish": 33, "with_db": [18, 44], "within": [0, 1, 14, 25], "without": [0, 1, 2, 13, 21, 24, 29, 32, 37, 38, 39, 41, 44], "wizzygeek": 3, "won": [0, 2, 38], "word": 2, "work": [0, 2, 13, 17, 18, 21, 24, 30, 32, 33, 38, 39, 41], "workaround": [0, 18, 39], "worker": [0, 25], "workflow": [43, 44], "world": [33, 39], "wors": 33, "would": [0, 5, 13, 18, 21, 30, 38, 39, 44], "wrap": [0, 29, 48], "wrapper": 30, "write": [21, 29, 32, 33, 38, 42, 49], "wrong": 0, "wsl": 2, "www": 2, "x": 0, "xxx": 21, "y": [31, 35], "year": 39, "yeop": 3, "yet": [2, 33], "yield": 23, "yml": [7, 8, 9, 14, 15, 16, 44], "yollei": 3, "you": [0, 2, 4, 7, 8, 9, 13, 14, 15, 16, 17, 18, 21, 23, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 42, 44, 46, 48, 49], "young": [33, 38], "your": [0, 2, 10, 17, 18, 29, 30, 32, 33, 35, 37, 38, 39, 44, 46, 48], "yourapp": 0, "yourself": [13, 32, 33, 35, 38], "yuval": 3, "yuvalbenari": 3, "zero": [0, 30], "zheng": 3, "zmiev": 3, "zoliszeredi": 3, "zolt\u00e1n": 3, "zone": [23, 46], "\u4e00\u4e2a\u5916\u90e8\u5bf9\u8c61\u53ef\u80fd\u6709\u4e00\u4e2a\u5b57\u6bb5\u53eb": 38, "\u4e00\u4e2a\u6269\u5c55": 30, "\u4e00\u4e2a\u793a\u4f8b\u662f\u7b80\u5355\u5730\u5c01\u88c5": 30, "\u4e00\u4e2a\u7b80\u5355\u7684\u5217\u8868\u662f\u6839\u5bf9\u8c61": 13, "\u4e00\u4e9b\u4f7f\u7528\u6848\u4f8b\u5305\u62ec": 29, "\u4e00\u4e9b\u5185\u7f6e\u7d22\u5f15\u53ef\u4ee5\u5728": 34, "\u4e00\u4e9b\u6d4b\u8bd5\u4f1a\u59cb\u7ec8\u8fd0\u884c": 2, "\u4e00\u4e9b\u6d4b\u8bd5\u4f7f\u7528\u786c\u7f16\u7801\u7684\u6570\u636e\u5e93": 2, "\u4e00\u5bf9\u4e00": [0, 30, 40, 47], "\u4e00\u79cd\u662f\u5728": 36, "\u4e00\u79cd\u662f\u901a\u8fc7\u4f20\u9012\u7ed9\u5b9a\u503c\u7f16\u5199\u51fd\u6570": 49, "\u4e00\u8d77\u4f7f\u7528\u65f6\u4f1a\u5f15\u53d1": 0, "\u4e00\u8d77\u5de5\u4f5c": 0, "\u4e0a\u4e0b\u6587": 18, "\u4e0a\u4e0d\u4f1a\u81ea\u52a8\u5b89\u88c5": 32, "\u4e0a\u4e3a\u5c0f\u6574\u6570\u5217\u8bbe\u7f6e\u4e3a": 0, "\u4e0a\u539f\u751f\u8fd0\u884c\u6d4b\u8bd5\u5c1a\u4e0d\u652f\u6301": 2, "\u4e0a\u662f\u9ed8\u8ba4\u7684": 32, "\u4e0a\u6709\u4e00\u4e2a\u804a\u5929\u5ba4": 2, "\u4e0a\u672a\u751f\u6210\u5916\u952e\u7ea6\u675f\u7684\u95ee\u9898": 0, "\u4e0a\u6b63\u786e\u8f6c\u6362": 0, "\u4e0a\u6dfb\u52a0": 0, "\u4e0a\u8ff0\u793a\u4f8b\u7b49\u6548\u4e8e": 29, "\u4e0b\u4e00\u4e2a\u5b57\u6bb5\u662f": 38, "\u4e0b\u65e0\u6cd5\u5de5\u4f5c": 2, "\u4e0b\u8fd0\u884c\u65f6\u8fd9\u4e9b\u6d4b\u8bd5\u5c06\u88ab\u8df3\u8fc7": 2, "\u4e0b\u9762\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u4ee3\u7801\u7247\u6bb5": 5, "\u4e0b\u9762\u662f\u6765\u81ea": 38, "\u4e0d\u533a\u5206\u5927\u5c0f\u5199\u7684": 39, "\u4e0d\u533a\u5206\u5927\u5c0f\u5199\u7684\u76f8\u7b49": 39, "\u4e0d\u540c\u7684\u6570\u636e\u5e93\u7ba1\u7406\u7cfb\u7edf": 46, "\u4e0d\u5c5e\u4e8e\u516c\u5171": 0, "\u4e0d\u5e78\u7684\u662f": 33, "\u4e0d\u5efa\u8bae\u8fd9\u6837\u505a": 5, "\u4e0d\u6355\u83b7": 2, "\u4e0d\u662f": 30, "\u4e0d\u662f\u5076\u6570": 49, "\u4e0d\u751f\u6210\u8986\u76d6\u7387\u62a5\u544a": 2, "\u4e0d\u80fd\u8fd9\u6837\u505a": 29, "\u4e0e": [0, 2, 33], "\u4e0e\u5176\u4ed6": 33, "\u4e0e\u5b9e\u4f8b\u4e0a\u76f8\u5173\u5bf9\u8c61\u7684\u53e6\u4e00\u79cd\u5904\u7406\u65b9\u6cd5\u662f\u5728": 39, "\u4e14\u9700\u8981\u77ed\u5c0f": 0, "\u4e24\u4e2a\u6a21\u578b\u90fd\u9700\u8981\u88ab\u4fdd\u5b58": 38, "\u4e2a\u5b57\u7b26": 0, "\u4e2a\u65f6": 0, "\u4e2d": [0, 4, 13, 38, 39], "\u4e2d\u4e0d\u5b58\u5728": 30, "\u4e2d\u4e0d\u5de5\u4f5c\u7684\u60c5\u51b5": 0, "\u4e2d\u4f7f\u7528": [0, 29, 36, 38, 39], "\u4e2d\u4f7f\u7528\u51fd\u6570": 0, "\u4e2d\u4f7f\u7528\u5b50\u67e5\u8be2": 29, "\u4e2d\u4f7f\u7528\u5b50\u67e5\u8be2\u8fdb\u884c": 0, "\u4e2d\u5305\u542b\u4e3b\u952e": 0, "\u4e2d\u5305\u542b\u4e86\u6a21\u578b\u4e3b\u952e": 0, "\u4e2d\u5b57\u6bb5\u987a\u5e8f": 0, "\u4e2d\u5b83\u4f7f\u7528": 39, "\u4e2d\u5b9a\u4e49\u4e86\u6a21\u578b": 0, "\u4e2d\u5b9a\u4e49\u6a21\u578b\u65f6": 38, "\u4e2d\u5b9a\u4e49\u7684\u6a21\u578b": 39, "\u4e2d\u5e26\u6709\u6ce8\u91ca\u7684\u5217\u8ba1\u6570\u95ee\u9898": 0, "\u4e2d\u5ffd\u7565": 0, "\u4e2d\u627e\u5230": 34, "\u4e2d\u6307\u5b9a": 0, "\u4e2d\u652f\u6301": 0, "\u4e2d\u6587": [0, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 23, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 49], "\u4e2d\u6587\u7b49": 18, "\u4e2d\u663e\u5f0f\u67e5\u8be2\u5b83\u4eec": 39, "\u4e2d\u6709\u4e24\u4e2a\u914d\u7f6e\u9879": 46, "\u4e2d\u671f\u8ba1\u5212": 47, "\u4e2d\u67d0\u4e9b\u7c7b\u578b\u7684": 0, "\u4e2d\u68c0\u7d22": 18, "\u4e2d\u6ca1\u6709\u7ea6\u675f\u7684\u5916\u952e\u5b57\u6bb5\u7684\u6ce8\u91ca": 0, "\u4e2d\u6dfb\u52a0": 0, "\u4e2d\u7684": [0, 34], "\u4e2d\u7684\u67d0\u4e2a\u5b57\u6bb5\u4e0d\u5728": 0, "\u4e2d\u7684\u6f5c\u5728\u7ade\u4e89\u6761\u4ef6": 0, "\u4e2d\u7684\u9519\u8bef": 0, "\u4e2d\u88ab\u5ffd\u7565\u7684\u95ee\u9898": 0, "\u4e2d\u8986\u76d6": 0, "\u4e2d\u8f93\u5165\u7684": 0, "\u4e2d\u8fc7\u65f6\u7684": 0, "\u4e2d\u9605\u8bfb\u66f4\u591a\u5173\u4e8e\u5b9a\u4e49\u6a21\u578b\u7684\u4fe1\u606f": 32, "\u4e2d\u9605\u8bfb\u66f4\u591a\u793a\u4f8b": 32, "\u4e3a": [0, 39], "\u4e3a\u4e86\u9632\u6b62\u51fa\u73b0\u5e38\u89c1\u9519\u8bef": 0, "\u4e3a\u4e86\u9632\u6b62\u8fd9\u79cd\u60c5\u51b5": 38, "\u4e3a\u4ec0\u4e48\u8981\u6784\u5efa": 47, "\u4e3a\u67e5\u8be2\u96c6\u6dfb\u52a0": 0, "\u4e3a\u6bcf\u4e2a\u5b9e\u4f53\u7f16\u5199\u7a0d\u5fae\u4e0d\u540c\u7684\u4ee3\u7801": 33, "\u4e3a\u786e\u4fdd\u8fde\u63a5\u88ab\u5173\u95ed": 44, "\u4e3a\u9a8c\u8bc1\u5f02\u5e38\u6dfb\u52a0\u5b57\u6bb5\u540d\u79f0": 0, "\u4e3b\u8981\u76ee\u7684\u662f\u89e3\u51b3": 18, "\u4e3b\u952e": [40, 47], "\u4e4b\u524d": [0, 13], "\u4e4b\u540e": [32, 42], "\u4e4b\u540e\u88ab\u8c03\u7528": 13, "\u4e4b\u95f4\u7684\u91cd\u5927\u5dee\u5f02\u6216\u5e38\u89c1\u95ee\u9898": 18, "\u4e5f\u4e0d\u4f1a\u4e0e\u5176\u4ed6\u6a21\u578b\u5efa\u7acb\u5173\u7cfb": 38, "\u4e5f\u662f": 30, "\u4e5f\u662f\u4e00\u6837\u7684": 31, "\u4e5f\u662f\u5173\u7cfb\u7684\u539f\u59cb\u5b57\u6bb5": 0, "\u4e5f\u662f\u53ef\u9009\u7684": 32, "\u4e5f\u6709\u4e0d\u540c\u7684\u884c\u4e3a": 46, "\u4e86\u89e3\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f": 4, "\u4e8b\u4ef6": 13, "\u4e8b\u52a1": [19, 33, 40, 47], "\u4ea4\u4e92\u5f0f": [40, 47], "\u4ea4\u4ed8": 41, "\u4ea4\u66ff\u9886\u5148": 33, "\u4ec5\u5728\u5185\u5b58": 2, "\u4ec5\u5728\u6211\u4eec\u6b63\u786e\u521d\u59cb\u5316": 13, "\u4ec5\u5728\u6709\u53ef\u91cd\u590d\u7684\u57fa\u51c6\u6d4b\u8bd5\u53ef\u4f9b\u6d4b\u91cf\u65f6\u8fdb\u884c\u6027\u80fd": 2, "\u4ec5\u5f53\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6\u65f6\u624d\u5141\u8bb8\u5bf9\u6a21\u578b\u8fdb\u884c\u66f4\u6539": 0, "\u4ec5\u6267\u884c\u9884\u671f\u7684\u529f\u80fd": 2, "\u4ec5\u7528\u4e8e\u8c03\u8bd5": 18, "\u4ec5\u9700": 13, "\u4ecd\u7136\u662f\u4e00\u4e2a\u5e74\u8f7b\u7684\u9879\u76ee": 38, "\u4ece": [0, 13, 42], "\u4ece\u51fd\u6570\u66f4\u6539\u4e3a\u61d2\u60f0\u8fd4\u56de\u53ef\u8fed\u4ee3\u5bf9\u8c61": 0, "\u4ece\u6570\u636e\u5e93\u4e2d\u5220\u9664\u5b9e\u4f8b": 39, "\u4ece\u9ed8\u8ba4\u6765\u6e90": 18, "\u4ee3\u66ff": 0, "\u4ee3\u7801\u5bf9\u6570\u636e\u4e4b\u95f4\u7684\u5173\u7cfb\u6ca1\u6709\u6982\u5ff5": 33, "\u4ee3\u7801\u7247\u6bb5": 29, "\u4ee3\u7801\u7ed3\u6784\u5982\u4e0b": 2, "\u4ee5": 39, "\u4ee5\u4e0b\u4efb\u4f55\u5b9a\u4e49\u90fd\u662f\u6a21\u578b\u4e2d\u6709\u6548\u7684\u4e3b\u952e\u5b9a\u4e49": 38, "\u4ee5\u4e0b\u5b9a\u4e49\u662f\u6709\u6548\u7684": 38, "\u4ee5\u4e0b\u5e93\u53ef\u4ee5\u7528\u4f5c\u52a0\u901f\u5668": 32, "\u4ee5\u4e0b\u662f\u4e00\u4e9b\u4f7f\u7528\u67e5\u8be2\u96c6\u7684\u5e38\u89c1\u573a\u666f": 39, "\u4ee5\u4e0b\u662f\u4f7f\u7528": 34, "\u4ee5\u4e0b\u662f\u521b\u5efa": 34, "\u4ee5\u4e0b\u662f\u53ef\u7528\u5b57\u6bb5\u7684\u5217\u8868\u4ee5\u53ca\u8fd9\u4e9b\u5b57\u6bb5\u7684\u81ea\u5b9a\u4e49\u9009\u9879": 30, "\u4ee5\u4e0b\u662f\u7f16\u5199\u81ea\u5b9a\u4e49\u9a8c\u8bc1\u5668\u7684\u793a\u4f8b": 49, "\u4ee5\u4e0d\u5f3a\u5236\u6267\u884c\u5f15\u7528\u5b8c\u6574\u6027": 18, "\u4ee5\u4e86\u89e3": 13, "\u4ee5\u4e86\u89e3\u5176\u5de5\u4f5c\u539f\u7406": 39, "\u4ee5\u4e86\u89e3\u53ef\u7528\u9009\u9879": 13, "\u4ee5\u4fbf\u4e8e\u5e0c\u671b\u5207\u6362\u5230": 33, "\u4ee5\u4fbf\u521b\u5efa\u6a21\u578b\u4e4b\u95f4\u7684\u53cd\u5411\u5173\u7cfb": [32, 44], "\u4ee5\u4fbf\u60a8\u65e0\u9700\u624b\u52a8\u5904\u7406": 33, "\u4ee5\u4fbf\u6211\u4eec\u53ef\u4ee5\u76f8\u4e92\u5e2e\u52a9": 2, "\u4ee5\u4fbf\u66f4\u597d\u5730\u7406\u89e3": 39, "\u4ee5\u5148\u5220\u9664\u5217\u518d\u521b\u5efa": 37, "\u4ee5\u5339\u914d\u8ba1\u6570\u7ed3\u679c\u4e0e": 0, "\u4ee5\u53ca\u66f4\u591a": 47, "\u4ee5\u56de\u663e": 18, "\u4ee5\u5728\u4e0d\u5220\u9664\u5217\u7684\u60c5\u51b5\u4e0b\u91cd\u547d\u540d": 37, "\u4ee5\u5b58\u50a8\u548c\u67e5\u8be2\u679a\u4e3e\u7c7b\u578b": 30, "\u4ee5\u6307\u5b9a\u4e0e\u6a21\u578b\u4f7f\u7528\u7684\u786e\u5207\u67b6\u6784": 0, "\u4ee5\u663e\u793a\u66f4\u597d\u7684": 0, "\u4ee5\u66f4\u8f7b\u677e\u5730\u6d4b\u8bd5\u52a8\u6001\u6784\u5efa\u7684\u67e5\u8be2": 0, "\u4ee5\u6765\u5b83\u5df2\u635f\u574f": 0, "\u4ee5\u6765\u5b83\u5df2\u88ab\u5f03\u7528": 0, "\u4ee5\u6d88\u9664\u5f03\u7528\u8b66\u544a": 0, "\u4ee5\u751f\u6210\u67e5\u8be2\u4e2d\u7684": 29, "\u4ee5\u786e\u4fdd\u5b89\u5168\u548c\u4e00\u81f4\u7684\u6570\u636e\u8fc1\u79fb": 41, "\u4ee5\u786e\u4fdd\u6309\u805a\u5408\u8fdb\u884c\u7b5b\u9009\u53ef\u4ee5\u6b63\u5e38\u5de5\u4f5c": 0, "\u4ee5\u83b7\u53d6\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f": 37, "\u4ee5\u8986\u76d6\u9ed8\u8ba4\u7ba1\u7406\u5668": 38, "\u4ee5\u8be6\u7ec6\u6f14\u793a\u5982\u4f55\u5728\u5b9e\u8df5\u4e2d\u4f7f\u7528\u6b64": 5, "\u4ee5\u8c03\u7528\u4ee5\u4e0b\u5185\u5bb9": 17, "\u4ee5\u907f\u514d\u547d\u540d\u51b2\u7a81\u95ee\u9898": 0, "\u4ee5\u907f\u514d\u5f71\u54cd\u5168\u5c40\u65f6\u533a": 0, "\u4ee5\u9632\u4e24\u6b21\u8fde\u63a5\u540c\u4e00\u5f20\u8868": 0, "\u4ee5\u9632\u5faa\u73af\u4f9d\u8d56": 0, "\u4efb\u4f55\u5e2e\u52a9\u4eba\u4eec\u4f7f\u7528\u8be5\u9879\u76ee\u7684\u5185\u5bb9": 2, "\u4efb\u4f55\u7c7b\u90fd\u53ef\u4ee5\u4f7f\u7528": 38, "\u4f18\u5148\u4e8b\u9879": 47, "\u4f1a\u59cb\u7ec8\u5728\u6570\u636e\u5e93\u4e2d\u5b58\u50a8": 46, "\u4f1a\u751f\u6210": 0, "\u4f1a\u81ea\u52a8\u521b\u5efa\u8be5\u7c7b\u7684\u5355\u4f8b\u5b9e\u4f8b": 5, "\u4f20\u9012\u81ea\u5b9a\u4e49ssl\u8bc1\u4e66": [40, 47], "\u4f46": [13, 31], "\u4f46\u4e0d\u63a8\u8350\u7528\u4e8e\u751f\u4ea7\u73af\u5883": 18, "\u4f46\u4e0d\u652f\u6301": 39, "\u4f46\u4e5f\u5b58\u5728\u5dee\u5f02": 46, "\u4f46\u4ee5\u4e00\u79cd\u975e\u5e38\u7279\u5b9a\u7684\u65b9\u5f0f\u5b9e\u73b0": 9, "\u4f46\u53ea\u63a8\u8350\u4ee5\u4e0b\u5b57\u6bb5\u7c7b\u578b": 38, "\u4f46\u53ef\u4ee5\u4f7f\u7528\u5728\u6a21\u578b\u4e2d\u5b9a\u4e49\u7684\u7ba1\u7406\u5668": 36, "\u4f46\u53ef\u4ee5\u5728": 38, "\u4f46\u53ef\u4ee5\u5728\u8c03\u8bd5\u5668\u548c\u89e3\u91ca\u5668\u4e2d\u63d0\u4f9b": 32, "\u4f46\u53ef\u9009\u62e9\u6dfb\u52a0\u52a9\u624b\u6765\u6355\u83b7\u5e76\u62a5\u544a\u6b63\u786e\u7684\u9519\u8bef": 0, "\u4f46\u5728\u8fdb\u884c\u805a\u5408": 18, "\u4f46\u5e76\u4e0d\u662f\u6240\u6709\u7684\u90fd\u5b8c\u7f8e": 18, "\u4f46\u5e94\u4ec5\u5728\u9ad8\u7ea7\u60c5\u51b5\u4e0b\u76f4\u63a5\u4f7f\u7528": 18, "\u4f46\u60a8\u53ef\u4ee5\u8c03\u6574\u4e00\u4e9b\u8bbe\u7f6e\u6765\u63d0\u9ad8\u901f\u5ea6": 2, "\u4f46\u63d0\u4f9b\u4e86\u7f16\u5199\u539f\u59cb": 29, "\u4f46\u65e0\u6cd5\u7ee7\u7eed\u8fdb\u884c": 2, "\u4f46\u662f": 0, "\u4f46\u6700\u521d\u7684\u5c1d\u8bd5\u5e76\u6ca1\u6709\u4e00\u4e2a\u5e72\u51c0\u7684": 33, "\u4f46\u7531\u4e8e": 13, "\u4f46\u8fd9\u4e5f\u610f\u5473\u7740\u51cf\u5c11\u5197\u4f59": 2, "\u4f46\u8fd9\u4e9b\u5de5\u5177\u65e0\u6cd5\u68c0\u6d4b\u51fa\u4e0d\u660e\u663e\u7684\u6837\u5f0f\u504f\u597d": 2, "\u4f46\u8fd9\u662f\u4e00\u4e2a\u597d\u4e60\u60ef": 38, "\u4f46\u9700\u8981\u8bbe\u7f6e": 32, "\u4f4d\u4e8e": 0, "\u4f5c\u4e3a": [0, 5], "\u4f5c\u4e3a\u4e00\u4e2a": 44, "\u4f5c\u4e3a\u4e3b\u952e\u65f6\u7684": 0, "\u4f5c\u4e3a\u66f4\u6709\u8da3\u7684\u6848\u4f8b": 39, "\u4f5c\u4e3a\u670d\u52a1\u7684\u4e00\u90e8\u5206\u8fd0\u884c": 32, "\u4f5c\u4e3a\u6d4b\u8bd5\u73af\u5883\u53d8\u91cf": 0, "\u4f5c\u4e3a\u8fc1\u79fb\u7684\u4e00\u4e2a\u5c5e\u6027": 41, "\u4f60\u4e0d\u4ec5\u60f3\u6309\u76f8\u5173\u6570\u636e\u8fdb\u884c\u8fc7\u6ee4": 39, "\u4f60\u4e0d\u5e0c\u671b\u8fdb\u884c\u989d\u5916\u7684\u67e5\u8be2": 39, "\u4f60\u4e5f\u53ef\u4ee5\u4ece\u81ea\u5df1\u7684\u6a21\u578b\u5b50\u7c7b\u6d3e\u751f": 38, "\u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528": 39, "\u4f60\u4e5f\u53ef\u4ee5\u8fd9\u6837\u8fc7\u6ee4\u76f8\u5173\u5bf9\u8c61": 39, "\u4f60\u53ea\u9700\u8981\u7f16\u5199\u4e00\u4e2a\u5305\u542b": 42, "\u4f60\u53ef\u4ee5\u4ece\u6a21\u578b\u7c7b\u5f00\u59cb\u4f60\u7684\u67e5\u8be2": 39, "\u4f60\u53ef\u4ee5\u4f7f\u7528": 39, "\u4f60\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u4e4b\u4e00\u8fc7\u6ee4\u65e5\u671f\u90e8\u5206": 39, "\u4f60\u53ef\u4ee5\u50cf\u8fd9\u6837\u5f02\u6b65\u8fed\u4ee3\u5b83": 38, "\u4f60\u53ef\u4ee5\u5728": [29, 39], "\u4f60\u53ef\u4ee5\u5728\u672c\u6587\u6863\u7684": 39, "\u4f60\u53ef\u4ee5\u5728\u8fd9\u91cc\u67e5\u770b\u5b8c\u6574\u793a\u4f8b": 39, "\u4f60\u53ef\u4ee5\u5f00\u59cb\u63cf\u8ff0\u81ea\u5df1\u7684\u6a21\u578b": 38, "\u4f60\u53ef\u4ee5\u83b7\u5f97\u8fd9\u6837\u7684\u81ea\u52a8\u8865\u5168": 38, "\u4f60\u53ef\u4ee5\u8fd9\u6837\u4f7f\u7528\u5b83\u4eec": 39, "\u4f60\u65e0\u6cd5\u83b7\u53d6\u72b6\u6001\u7b49\u4e8e": 36, "\u4f60\u8fd8\u53ef\u4ee5\u56f4\u7ed5\u76f8\u5173\u5b9e\u4f53\u6784\u5efa\u67e5\u8be2": 39, "\u4f60\u9700\u8981\u505a\u7684\u5c31\u662f\u4e3a\u8d1f\u8d23\u5173\u7cfb\u7684\u5b57\u6bb5\u5411\u6a21\u578b\u6dfb\u52a0\u4e00\u4e9b\u6ce8\u89e3": 38, "\u4f7f": [0, 41], "\u4f7f\u51fd\u6570\u5d4c\u5957": 0, "\u4f7f\u7528": [0, 2, 10, 13, 18, 29, 33, 35, 38, 39, 46], "\u4f7f\u7528\u5168\u5c40\u552f\u4e00\u6807\u8bc6\u7b26\u521b\u5efa": 0, "\u4f7f\u7528\u5185\u7f6e": 0, "\u4f7f\u7528\u53ef\u8c03\u7528\u51fd\u6570\u6ce8\u91ca\u989d\u5916\u6570\u636e": 13, "\u4f7f\u7528\u591a\u4e2a\u6570\u636e\u5e93\u7684\u6700\u7b80\u5355\u65b9\u6cd5\u662f\u8bbe\u7f6e\u6570\u636e\u5e93\u8def\u7531\u65b9\u6848": 42, "\u4f7f\u7528\u5b57\u6bb5\u7c7b\u578b": 46, "\u4f7f\u7528\u6587\u6863\u5b57\u7b26\u4e32\u548c\u6587\u6863\u6ce8\u91ca": 13, "\u4f7f\u7528\u65b9\u6cd5": [40, 47], "\u4f7f\u7528\u65f6": 18, "\u4f7f\u7528\u793a\u4f8b": 0, "\u4f7f\u7528\u7ba1\u7406\u5668\u6709\u4e24\u79cd\u65b9\u5f0f": 36, "\u4f7f\u7528\u7ed9\u5b9a\u7684": 39, "\u4f7f\u7528\u9700\u8c28\u614e": 2, "\u4f7f\u7528\u9ed8\u8ba4\u7684": 2, "\u4f7f\u7528\u9ed8\u8ba4\u7ba1\u7406\u5668\u65f6": 36, "\u4f7f\u9ed8\u8ba4\u5e8f\u5217\u5316\u5668\u652f\u6301\u67d0\u79cd\u9a8c\u8bc1": 41, "\u4f8b\u5982": [0, 2, 4, 13, 18, 29, 31, 33, 34, 37, 38, 39], "\u4f8b\u5982\u6253\u5370\u8c03\u8bd5": 35, "\u4f8b\u5982\u67d0\u79cd\u5e26\u6709\u5d4c\u5957\u652f\u6301\u7684\u5e8f\u5217\u5316\u5668": 32, "\u4f9d\u8d56\u9879": 0, "\u4fbf\u5229\u6027": 41, "\u4fdd\u6301\u7b80\u5355": 2, "\u4fdd\u7559\u5173\u952e\u5b57\u4f5c\u4e3a\u51fd\u6570\u5b57\u6bb5\u540d\u79f0\u7684\u95ee\u9898": 0, "\u4fe1\u53f7": [40, 47], "\u4fee\u590d": 0, "\u4fee\u590d\u4e0e": 0, "\u4fee\u590d\u4e86": 0, "\u4fee\u590d\u4e86\u4f7f\u7528": 0, "\u4fee\u590d\u4e86\u5728\u5177\u6709\u6307\u5b9a\u987a\u5e8f\u7684\u805a\u5408\u4e2d\u7f3a\u5c11": 0, "\u4fee\u590d\u4e86\u5728\u5916\u952e\u4e0a\u6267\u884c": 0, "\u4fee\u590d\u4e86\u5728\u8fde\u63a5\u5b57\u7b26\u4e32\u4e2d\u5904\u7406": 0, "\u4fee\u590d\u4e86\u65f6\u533a\u6a21\u5757\u4e2d": 0, "\u4fee\u590d\u4e86\u89e3\u7801\u524d\u9a8c\u8bc1": 0, "\u4fee\u590d\u4e86\u975e\u6587\u672c\u5b57\u6bb5\u7684": 0, "\u4fee\u590d\u4f7f\u7528": 0, "\u4fee\u590d\u4f7f\u7528\u65e7\u5f0f": 0, "\u4fee\u590d\u4f7f\u7528\u805a\u5408\u7684\u8fde\u63a5\u67e5\u8be2\u4e2d\u7684\u9519\u8bef": 0, "\u4fee\u590d\u4f7f\u7528\u81ea\u5b9a\u4e49\u5b57\u6bb5\u65f6\u7684": 0, "\u4fee\u590d\u4f9d\u8d56\u89e3\u6790\u9519\u8bef": 0, "\u4fee\u590d\u51b2\u7a81\u65f6\u4e0d\u6267\u884c\u4efb\u4f55\u64cd\u4f5c\u7684\u95ee\u9898": 0, "\u4fee\u590d\u521b\u5efa\u7d22\u5f15\u7684": 0, "\u4fee\u590d\u5305\u88c5\u7684": 0, "\u4fee\u590d\u5341\u8fdb\u5236\u5b57\u6bb5\u7684\u6700\u5c0f": 0, "\u4fee\u590d\u53cd\u5411\u5173\u7cfb\u7684": 0, "\u4fee\u590d\u53ef\u53d8\u9ed8\u8ba4\u503c": 0, "\u4fee\u590d\u5728": 0, "\u4fee\u590d\u5728\u4f7f\u7528": 0, "\u4fee\u590d\u5728\u540c\u65f6\u4f7f\u7528": 0, "\u4fee\u590d\u5728\u5b9e\u4f8b\u4e0a\u8fd0\u884c": 0, "\u4fee\u590d\u5728\u8fdb\u884c\u81ea\u5f15\u7528\u805a\u5408\u65f6\u4f7f\u7528\u8fde\u63a5\u7684\u9519\u8bef\u4e00\u4fa7\u8fdb\u884c\u805a\u5408\u7684\u95ee\u9898": 0, "\u4fee\u590d\u5728\u8fdb\u884c\u81ea\u5f15\u7528\u805a\u5408\u65f6\u4f7f\u7528\u9519\u8bef\u8fde\u63a5\u4fa7\u7684\u805a\u5408\u95ee\u9898": 0, "\u4fee\u590d\u591a\u6b21\u6307\u5b9a\u76f8\u5173\u6a21\u578b\u65f6\u51fa\u73b0\u7684": 0, "\u4fee\u590d\u5d4c\u5957": 0, "\u4fee\u590d\u5d4c\u5957\u5b57\u6bb5\u4e0a\u7684": 0, "\u4fee\u590d\u5f53\u5916\u952e\u4e3a\u6574\u6570": 0, "\u4fee\u590d\u5ffd\u7565\u9650\u5236\u7684\u96f6\u503c": 0, "\u4fee\u590d\u6240\u6709\u65e5\u5fd7\u8bb0\u5f55\u4ee5\u4f7f\u7528": 0, "\u4fee\u590d\u66f4\u65b0\u9519\u8bef\u4e2d\u7684": 0, "\u4fee\u590d\u6a21\u5757\u7c7b\u578b": 0, "\u4fee\u590d\u6b63\u5411\u5173\u7cfb\u7684": 0, "\u4fee\u590d\u7531": 0, "\u4fee\u590d\u901a\u8fc7\u53cd\u5411\u5916\u952e\u4e0e\u81ea\u8eab\u8fde\u63a5\u4ee5\u8fdb\u884c\u8fc7\u6ee4\u548c\u6ce8\u91ca\u7684\u95ee\u9898": 0, "\u4fee\u590d\u91cd\u7528\u503c\u548c": 0, "\u4fee\u590d\u9650\u5236\u5ffd\u7565\u96f6\u7684\u95ee\u9898": 0, "\u4fee\u590d\u975e\u8fc7\u6ee4\u67e5\u8be2\u7684\u6ce8\u91ca\u4f20\u64ad\u95ee\u9898": 0, "\u4fee\u8865\u67e5\u8be2\u65f6": 0, "\u4fee\u9970\u7b26\u5e94\u901a\u8fc7\u53cc\u4e0b\u5212\u7ebf\u5206\u9694": 39, "\u503c": [0, 49], "\u503c\u800c\u4e0d\u662f\u5b9e\u9645\u6587\u672c": 18, "\u5047\u8bbe\u5b83\u5728": 4, "\u5047\u8bbe\u60a8\u5728": 0, "\u5047\u8bbe\u8fd9\u662f\u4f7f\u7528\u7684": 5, "\u5141\u8bb8": 0, "\u5141\u8bb8\u4f7f\u7528": 0, "\u5141\u8bb8\u51fd\u6570\u7ed3\u679c\u6309\u7ec4\u5206\u7ec4": 0, "\u5141\u8bb8\u5728": 0, "\u5141\u8bb8\u5728\u6ce8\u91ca\u4e2d\u4f7f\u7528": 0, "\u5141\u8bb8\u5b57\u6bb5\u7684\u9ed8\u8ba4\u5173\u952e\u5b57\u4e3a\u5f02\u6b65\u51fd\u6570": 0, "\u5141\u8bb8\u5c06\u6a21\u5757\u5bf9\u8c61\u4f20\u9012\u7ed9": 0, "\u5141\u8bb8\u5c06\u81ea\u5b9a\u4e49": 0, "\u5141\u8bb8\u5f00\u53d1\u8005\u81ea\u5b9a\u4e49\u751f\u6210\u7684": 0, "\u5141\u8bb8\u8fdb\u4e00\u6b65\u7684\u8fc7\u6ee4\u548c\u4e00\u4e9b\u66f4\u590d\u6742\u7684\u64cd\u4f5c": 39, "\u5141\u8bb8\u907f\u514d\u591a\u6b21\u8c03\u7528": 0, "\u5143\u7d20": 13, "\u5168\u53c2\u6570\u5316\u67e5\u8be2\u7684\u66f4\u6539": 41, "\u5168\u6587\u641c\u7d22": [0, 11, 12, 39], "\u5173\u4e8e": [0, 17, 39], "\u5173\u7cfb": [0, 13, 19, 47], "\u5173\u7cfb\u4e0a\u4f7f\u7528\u81ea\u5b9a\u4e49\u5173\u8054\u7c7b\u65f6\u51fa\u73b0\u7684\u91cd\u590d\u95ee\u9898": 0, "\u5173\u7cfb\u548c\u521d\u59cb\u5316": [6, 47], "\u5173\u7cfb\u5728\u54ea\u91cc": 13, "\u5173\u7cfb\u5b57\u6bb5": [40, 47], "\u5173\u7cfb\u7684": 39, "\u5173\u7cfb\u7684\u9884\u53d6": 0, "\u5173\u7cfb\u7ba1\u7406\u975e\u5e38\u7b80\u5355": 32, "\u5173\u952e\u5b57\u53c2\u6570": 29, "\u5176\u4e2d": [32, 39], "\u5176\u4e2d\u5305\u542b\u4e00\u4e2a\u51fd\u6570": [7, 8, 14, 15, 16], "\u5176\u4e2d\u5305\u542b\u4e00\u4e2a\u7c7b": 9, "\u5176\u4e2d\u5305\u542b\u6765\u81ea": [32, 33, 44], "\u5176\u503c\u76f8\u5e94": 39, "\u5176\u6b21": 13, "\u5177\u4f53\u7684\u8fc7\u6ee4\u9009\u9879\u8bf7\u53c2\u89c1\u76f8\u5173\u6587\u6863": 29, "\u5177\u6709\u4e00\u4e2a": 13, "\u5177\u6709\u4e0d\u540c\u7684\u5e76\u53d1\u6a21\u578b": 33, "\u5177\u6709\u4e0e\u5176\u76f8\u5173\u7684\u5b57\u6bb5\u7684\u6b63\u6574\u6570\u8303\u56f4": 0, "\u5177\u6709\u4e3b\u952e": 0, "\u517c\u5bb9": 0, "\u5185\u5b58": 2, "\u5185\u5b58\u4e2d": 29, "\u5185\u5b58\u4f18\u5316": 2, "\u5185\u5b58\u6570\u636e\u5e93": 17, "\u5185\u5b58\u6570\u636e\u5e93\u4e0a\u8fd0\u884c\u6d4b\u8bd5": 2, "\u5185\u7f6e\u6821\u9a8c\u5668": [40, 47], "\u51fa\u73b0\u7684\u9519\u8bef": 0, "\u51fd\u6570": [0, 6, 19, 40, 47], "\u51fd\u6570\u540e\u518d\u4f7f\u7528": 0, "\u51fd\u6570\u548c\u805a\u5408": [40, 47], "\u51fd\u6570\u5bf9\u5b57\u6bb5\u7684\u6bcf\u4e2a\u5b9e\u4f8b\u5e94\u7528\u8f6c\u6362": 31, "\u51fd\u6570\u5e76\u4e14\u968f\u540e\u4f7f\u7528": 0, "\u51fd\u6570\u5fd8\u8bb0\u4e86": 0, "\u51fd\u6570\u6253\u5370\u8fd4\u56de\u7ed3\u679c\u65f6": 0, "\u5206\u652f": 0, "\u5206\u7ec4": [19, 47], "\u5217\u51fa\u4e86\u5e38\u89c1\u64cd\u4f5c": 2, "\u5217\u51fa\u6240\u6709\u8fc1\u79fb\u9879": 37, "\u5217\u8868\u4e5f\u53ef\u4ee5": 38, "\u5217\u8868\u6a21\u578b": 13, "\u5219": 38, "\u5219\u4e0d\u5e94\u7528\u9ed8\u8ba4\u6392\u5e8f": 38, "\u5219\u4e3a": 18, "\u5219\u4f1a\u5f15\u53d1": 0, "\u5219\u4f7f\u7528\u6765\u81ea": 39, "\u5219\u53ef\u4ee5\u94fe\u63a5": 38, "\u5219\u5b57\u7b26\u4e32\u4e3a": 18, "\u5219\u5c06\u5f15\u53d1": 0, "\u5219\u5e94\u4f7f\u7528": 34, "\u5219\u9700\u8981\u8fdb\u884c": 18, "\u5219\u9ed8\u8ba4\u4e3a": 29, "\u5219\u9ed8\u8ba4\u4e3a\u7b2c\u4e00\u884c\u4f5c\u4e3a\u63cf\u8ff0": 0, "\u521b\u5efa": [29, 34, 40, 47], "\u521b\u5efa\u4e00\u4e2a": [32, 33, 44], "\u521b\u5efa\u4e00\u4e2a\u5217\u8868\u6a21\u578b\u4ee5\u5e8f\u5217\u5316\u67e5\u8be2\u96c6": 13, "\u521b\u5efa\u4e00\u4e2a\u6a21\u578b": 13, "\u521b\u5efa\u4e0d\u5e26\u8fc7\u6ee4\u6761\u4ef6\u7684": 39, "\u521b\u5efa\u5668": [6, 47], "\u521b\u5efa\u5b83": 39, "\u521b\u5efa\u5bf9\u8c61": [13, 39], "\u521b\u5efa\u5e26\u6709\u7ed9\u5b9a\u6392\u9664\u6761\u4ef6\u7684": 39, "\u521b\u5efa\u5e26\u6709\u7ed9\u5b9a\u6ce8\u91ca\u7684": 39, "\u521b\u5efa\u5e26\u6709\u7ed9\u5b9a\u8fc7\u6ee4\u6761\u4ef6\u7684": 39, "\u521b\u5efa\u6211\u4eec\u7684": 13, "\u521b\u5efa\u7684": 0, "\u521b\u5efa\u9650\u4e8e\u4e00\u4e2a\u5bf9\u8c61\u7684": 39, "\u521d\u59cb\u5316": [40, 47], "\u521d\u59cb\u5316app": [0, 33, 40, 47], "\u521d\u59cb\u5316db": [40, 47], "\u521d\u59cb\u5316\u60a8\u7684\u6a21\u578b\u548c\u6570\u636e\u5e93\u5982\u4e0b": 33, "\u521d\u59cb\u5316\u65f6": 5, "\u521d\u59cb\u5316\u914d\u7f6e\u6587\u4ef6\u548c\u4f4d\u7f6e": 37, "\u521d\u59cb\u5316\u914d\u7f6e\u6587\u4ef6\u5e76\u751f\u6210\u6839\u8fc1\u79fb\u4f4d\u7f6e": 37, "\u5220\u9664": 0, "\u5220\u9664\u4e86": 0, "\u5220\u9664\u4e86\u5bf9": 0, "\u5220\u9664\u5bf9": 0, "\u5220\u9664\u6d4b\u8bd5\u4e2d\u7684": 0, "\u5230\u5b83\u4eec\u539f\u59cb\u7684\u6570\u636e\u5e93": 42, "\u524d\u8a00": [40, 47], "\u529f\u80fd": [38, 40, 47], "\u529f\u80fd\u6240\u5fc5\u9700\u7684": 17, "\u52a0\u8f7d\u63d2\u4ef6": 17, "\u52a0\u901f\u5668": 0, "\u52a9\u624b": 0, "\u52a9\u624b\u7684": 0, "\u5305\u542b\u4e24\u4e2a\u53ef\u8c03\u7528\u51fd\u6570\u4f5c\u4e3a\u8ba1\u7b97\u5217": 13, "\u5305\u542b\u4ee5\u9017\u53f7\u5206\u9694\u7684\u6a21\u5757\u8def\u5f84\u5217\u8868": 17, "\u5305\u542b\u5217\u8868": 13, "\u5305\u542b\u81ea\u5df1\u7684\u8f85\u52a9\u5b9e\u7528\u7a0b\u5e8f\u6765\u534f\u52a9\u5355\u5143\u6d4b\u8bd5": 17, "\u5305\u62ec\u4e8b\u52a1": 32, "\u5305\u62ec\u61d2\u52a0\u8f7d\u8fde\u63a5\u521b\u5efa\u7b49\u66f4\u591a\u529f\u80fd": 0, "\u5305\u62ec\u6a21\u578b\u4e4b\u95f4\u5173\u7cfb\u7684\u5b57\u6bb5": 38, "\u5347\u7ea7\u5230\u6700\u65b0\u7248\u672c": [40, 47], "\u5347\u7ea7\u5230\u6b64\u7248\u672c\u65f6\u8bf7\u8c28\u614e": 0, "\u5355\u5143\u6d4b\u8bd5\u652f\u6301": [6, 33, 47], "\u5355\u5143\u6d4b\u8bd5\u9519\u8bef": 0, "\u5373": [30, 42], "\u5373\u53ea\u9644\u52a0": 38, "\u5373\u5c06": 43, "\u538b\u7f29\u9519\u8bef": 0, "\u539f\u751fsql": [40, 47], "\u53c2\u6570": [0, 17, 18, 29, 37, 49], "\u53c2\u6570\u4e00\u8d77\u5728\u805a\u5408\u4e0a\u8d77\u4f5c\u7528": 0, "\u53c2\u6570\u4e2d\u65f6\u4f1a\u51fa\u9519": 0, "\u53c2\u6570\u4f20\u64ad\u5230": 0, "\u53c2\u6570\u4f20\u9012\u7ed9asyncpg": 0, "\u53c2\u6570\u5728": 0, "\u53c2\u6570\u65e0\u6548\u7684\u95ee\u9898": 0, "\u53c2\u6570\u7684\u4e00\u90e8\u5206\u4f20\u9012": 0, "\u53c2\u6570\u7684\u8fde\u63a5\u67e5\u8be2": 0, "\u53c2\u6570\u7684\u95ee\u9898": 0, "\u53c2\u6570\u8bbe\u7f6e\u4e3a": [38, 43, 44], "\u53c2\u8003": [6, 47], "\u53ca\u5176\u4e0d\u533a\u5206\u5927\u5c0f\u5199\u7684\u5bf9\u5e94\u9879": 0, "\u53ca\u5176\u5b50\u7c7b": 34, "\u53cd\u5411\u5916\u952e\u5173\u7cfb\u548c\u591a\u5bf9\u591a\u5173\u7cfb": 39, "\u53cd\u5411\u8fc7\u6ee4\u5668": 29, "\u53d7": 33, "\u53d8\u66f4\u65e5\u5fd7": [33, 47], "\u53d8\u91cf\u4ee5\u652f\u6301": 18, "\u53e6\u4e00\u4e2a": [13, 33], "\u53e6\u4e00\u4e2a\u9526\u6807\u8d5b": 33, "\u53e6\u4e00\u79cd\u662f\u5728\u6a21\u578b\u4e2d\u5b9a\u4e49\u7ba1\u7406\u5668": 36, "\u53e6\u4e00\u79cd\u662f\u7ee7\u627f": 49, "\u53ea\u662f\u7a0d\u5fae\u6210\u719f\u4e00\u4e9b": 41, "\u53ea\u6709": 37, "\u53ea\u6709\u5728\u4f60": 39, "\u53ea\u8981\u5b83\u4eec\u53ef\u4ee5\u4ee5\u4e0e\u6570\u636e\u5e93\u517c\u5bb9\u7684\u683c\u5f0f\u8868\u793a": 30, "\u53ea\u9700\u5c06\u5176\u653e\u5165": 42, "\u53ea\u9700\u8981\u8c03\u7528": 33, "\u53ef\u4ee5\u4e3a\u60a8\u7684\u8868\u63d0\u4f9b\u4e00\u4e2a\u660e\u786e\u7684\u540d\u79f0": 38, "\u53ef\u4ee5\u4ece": 13, "\u53ef\u4ee5\u4f7f\u7528": [2, 13], "\u53ef\u4ee5\u4f7f\u7528\u591a\u4e2a\u4fee\u9970\u7b26\u6765\u6307\u5b9a\u6240\u9700\u7684\u64cd\u4f5c": 39, "\u53ef\u4ee5\u5206\u522b\u901a\u8fc7\u73af\u5883\u53d8\u91cf": 2, "\u53ef\u4ee5\u5728\u8c03\u7528": 46, "\u53ef\u4ee5\u589e\u5f3a": 10, "\u53ef\u4ee5\u5bf9\u5176\u6267\u884c\u4ee5\u4e0b\u64cd\u4f5c": 39, "\u53ef\u4ee5\u6267\u884c": 0, "\u53ef\u4ee5\u662f": 18, "\u53ef\u4ee5\u6784\u5efa": 39, "\u53ef\u4ee5\u7528\u4e8e\u8868\u793a\u67b6\u6784\u548c\u5e8f\u5217\u5316": 13, "\u53ef\u4ee5\u8c03\u7528": 13, "\u53ef\u4ee5\u8fd0\u884c\u5728\u6587\u4ef6\u6216\u5185\u5b58\u4e2d": 18, "\u53ef\u4ee5\u8fd9\u6837\u505a": 32, "\u53ef\u4ee5\u901a\u8fc7\u5229\u7528\u7ee7\u627f\u6765\u8282\u7701\u5927\u91cf\u91cd\u590d\u5de5\u4f5c": 38, "\u53ef\u4ee5\u901a\u8fc7\u547d\u4ee4\u884c\u6267\u884c": 17, "\u53ef\u4ee5\u901a\u8fc7\u5b50\u7c7b\u5316\u5b57\u6bb5\u6765\u4f7f\u7528\u4efb\u610f\u7c7b\u578b": 30, "\u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6e": 0, "\u53ef\u53d8\u95ee\u9898": 0, "\u53ef\u63d2\u5165\u6570\u636e\u5e93\u540e\u7aef": 47, "\u53ef\u7528\u4e8e\u5728\u751f\u547d\u5468\u671f\u4e0a\u4e0b\u6587\u4e2d\u8bbe\u7f6e\u548c\u6e05\u7406": 9, "\u53ef\u7ec4\u5408\u7684": 33, "\u53ef\u7ef4\u62a4\u6027": 2, "\u53ef\u80fd\u53ea\u9700\u8fd0\u884c\u4e00\u6b21": [32, 44], "\u53ef\u80fd\u57fa\u4e8e": 41, "\u53ef\u80fd\u7684\u7834\u574f\u6027\u66f4\u6539\u4f1a\u88ab\u6e05\u6670\u8bb0\u5f55": 33, "\u53ef\u8c03\u7528\u51fd\u6570": 13, "\u53ef\u8c03\u7528\u5bf9\u8c61": 0, "\u53ef\u9009\u52a0\u901f\u5668": 47, "\u53ef\u9009\u53c2\u6570": [40, 47], "\u53ef\u9009\u53c2\u6570\u57fa\u672c\u4e0a\u662f\u4efb\u4f55\u6587\u6863\u4e2d\u8bb0\u5f55\u7684": 18, "\u53ef\u9009\u53c2\u6570\u662f\u4f20\u9012\u7ed9\u9a71\u52a8\u7a0b\u5e8f\u7684\u53c2\u6570": 18, "\u53ef\u9009\u53c2\u6570\u662f\u76f4\u63a5\u4f20\u9012\u7ed9\u9a71\u52a8\u7a0b\u5e8f\u7684\u53c2\u6570": 18, "\u53ef\u9009\u7684": 17, "\u53f6\u5b50\u68c0\u6d4b\u4ee5\u5c3d\u91cf\u51cf\u5c11\u91cd\u590d\u7684": 0, "\u540c\u65f6\u6307\u5b9a\u5e94\u7528\u540d\u79f0\u4e3a": [32, 33, 44], "\u540c\u65f6\u6ce8\u610f\u7ed3\u679c\u6309": 13, "\u540c\u6837": 18, "\u540c\u6b65\u4f7f\u7528\u8981\u6c42\u4f60\u5728\u4f7f\u7528\u4e4b\u524d\u8c03\u7528": 38, "\u540d\u79f0\u4e3a": 38, "\u540e\u7684": 0, "\u540e\u7aef\u652f\u6301": 0, "\u5411\u6a21\u578b\u6dfb\u52a0": 0, "\u5411\u6a21\u578b\u7684": 0, "\u5426\u5219": 44, "\u5426\u5219\u4f1a\u5f15\u53d1": 38, "\u542f\u52a8": [40, 47], "\u542f\u52a8\u4e00\u4e2a\u4ea4\u4e92\u5f0f": 4, "\u542f\u53d1": 33, "\u542f\u53d1\u7684": 33, "\u547d\u4ee4": 37, "\u547d\u4ee4\u627e\u5230\u5176\u4f4d\u7f6e": 18, "\u547d\u540d\u7a7a\u95f4\u4e2d\u4f7f\u7528\u5b83\u4eec": 0, "\u548c": [0, 2, 4, 6, 9, 17, 29, 31, 32, 33, 34, 35, 38, 39, 41, 42, 46, 47], "\u548c\u591a\u4e2a\u5de5\u4f5c\u8fdb\u7a0b\u65f6\u53d1\u751f\u6b7b\u9501": 0, "\u548c\u81ea\u52a8\u5b8c\u6210\u624d\u80fd\u6b63\u5e38\u5de5\u4f5c": 13, "\u54cd\u5e94": 0, "\u54cd\u5e94\u4e2d\u8fd4\u56de\u6a21\u578b": 0, "\u54e6\u4e0d": [13, 49], "\u552f\u4e00\u5b57\u6bb5\u5173\u7cfb": [19, 47], "\u554a\u54c8": 13, "\u56e0\u4e3a": 18, "\u56e0\u4e3a\u5982\u679c\u6ca1\u6709\u8fd9\u4e2a": 13, "\u56e0\u4e3a\u5b57\u6bb5\u5df2\u7ecf\u5b9a\u4e49\u4e86\u6709\u6548\u7684\u7c7b\u578b": 13, "\u56e0\u4e3a\u5b83\u5b9e\u9645\u4e0a\u4e0d\u4f1a\u8fde\u63a5": 2, "\u56e0\u4e3a\u5b83\u662f\u4e00\u4e2a\u81f3\u5173\u91cd\u8981\u7684\u5b57\u6bb5": 0, "\u56e0\u4e3a\u5b83\u6ca1\u6709\u4efb\u4f55\u4f5c\u7528": 0, "\u56e0\u4e3a\u6211\u4eec\u4ecd\u4f1a\u5728\u4e00\u6bb5\u65f6\u95f4\u5185\u5c06\u5173\u952e\u9519\u8bef\u4fee\u590d\u53cd\u5411\u79fb\u690d\u5230": 0, "\u56e0\u4e3a\u6211\u4eec\u8ba4\u4e3a\u5b83\u6ca1\u6709\u63d0\u4f9b\u4efb\u4f55\u597d\u5904": 13, "\u56e0\u4e3a\u6a21\u578b\u4e0d\u5b8c\u6574": 0, "\u56e0\u4e3a\u6a21\u578b\u5c1a\u672a\u5b8c\u5168\u521d\u59cb\u5316": 13, "\u56e0\u4e3a\u7b80\u5355\u7684\u4ee3\u7801\u901a\u5e38\u4e0d\u4ec5\u8fd0\u884c\u66f4\u5feb": 2, "\u56e0\u4e3a\u81ea": 0, "\u56e0\u4e3a\u8be5\u5b57\u6bb5\u65e0\u6cd5\u66f4\u65b0": 0, "\u56e0\u4e3a\u8fd9\u4f1a\u6839\u636e\u542f\u52a8\u70b9\u800c\u53d8\u5316": 14, "\u56e0\u4e3a\u8fd9\u5141\u8bb8\u76f4\u63a5\u5206\u914d": 38, "\u56e0\u6b64": [33, 38, 39], "\u56e0\u6b64\u4f60\u53ef\u4ee5\u50cf\u8fd9\u6837\u83b7\u53d6\u6240\u6709\u9526\u6807\u8d5b\u7684\u4e8b\u4ef6": 38, "\u56e0\u6b64\u5728": 2, "\u56e0\u6b64\u5728\u5e8f\u5217\u5316\u4e4b\u524d\u53ef\u4ee5\u4f7f\u7528\u5b83": 13, "\u56e0\u6b64\u5982\u679c": 18, "\u56e0\u6b64\u5f53": 5, "\u56e0\u6b64\u60a8\u6700\u7ec8\u51e0\u4e4e\u662f\u624b\u52a8\u8fde\u63a5\u6570\u636e": 33, "\u56e0\u6b64\u6240\u6709\u8def\u5f84\u90fd\u9700\u8981\u662f\u660e\u786e\u7684": 14, "\u56e0\u6b64\u6a21\u5f0f\u7684\u81ea\u7701\u5c06\u662f\u5168\u9762\u7684": 0, "\u56e0\u6b64\u7b80\u5355\u5730\u8fd0\u884c": 2, "\u56e0\u6b64\u901a\u5e38\u4f7f\u7528": 31, "\u56e0\u6b64\u9700\u8981\u6355\u83b7\u548c\u5904\u7406": 13, "\u5728": [0, 2, 30, 32, 38, 39], "\u5728\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d": 36, "\u5728\u4e24\u4e2a\u7ed9\u5b9a\u503c\u4e4b\u95f4": 39, "\u5728\u4e8b\u4ef6\u6a21\u578b\u4e2d": 38, "\u5728\u4f60\u4ece\u5bf9\u8c61\u83b7\u5f97\u67e5\u8be2\u96c6\u540e": 39, "\u5728\u4f7f\u7528": 2, "\u5728\u5047\u5b9a\u8fde\u63a5\u5df2\u5931\u6548\u5e76\u5f3a\u5236\u91cd\u65b0\u8fde\u63a5\u4e4b\u524d\u7684\u975e\u6d3b\u52a8\u8fde\u63a5\u6301\u7eed\u65f6\u95f4": 18, "\u5728\u5173\u95ed\u5e76\u66ff\u6362\u8fde\u63a5\u4e4b\u524d\u7684\u6700\u5927\u67e5\u8be2\u6b21\u6570": 18, "\u5728\u51fd\u6570": 13, "\u5728\u521b\u5efa": 0, "\u5728\u5b57\u6bb5\u503c\u66f4\u6539\u65f6\u7684\u9519\u8bef": 0, "\u5728\u5b57\u6bb5\u63cf\u8ff0\u4e2d\u6dfb\u52a0": 0, "\u5728\u5b9a\u4e49\u5b57\u6bb5\u65f6\u4f7f\u7528": 34, "\u5728\u5b9e\u4f8b\u4e2d\u586b\u5145\u5b57\u6bb5": 39, "\u5728\u5c06\u503c\u4f20\u9012\u7ed9": 0, "\u5728\u5f02\u6b65\u4e0a\u4e0b\u6587\u4e2d": 13, "\u5728\u60a8\u5b9a\u4e49\u6240\u6709\u6a21\u578b\u540e": [32, 44], "\u5728\u60a8\u7684": [17, 18], "\u5728\u6240\u6709\u56db\u79cd\u6570\u636e\u5e93\u7c7b\u578b\u4e0a\u8fd0\u884c\u6d4b\u8bd5": 2, "\u5728\u629b\u51fa\u9519\u8bef\u4e4b\u524d\u7b49\u5f85\u8fde\u63a5\u7684\u6301\u7eed\u65f6\u95f4": 18, "\u5728\u6570\u636e\u5e93\u7ea7\u522b\u751f\u6548": 0, "\u5728\u65e0\u9700\u6b63\u786e\u8bbe\u7f6e\u7684\u60c5\u51b5\u4e0b\u751f\u6210\u6a21\u5f0f": 0, "\u5728\u66f4\u65b0\u591a\u4e2a": 0, "\u5728\u679a\u4e3e": 30, "\u5728\u6a21\u578b\u5feb\u6377\u65b9\u6cd5\u4e2d\u7684\u4f4d\u7f6e\u9519\u8bef": 0, "\u5728\u6b64": 29, "\u5728\u6e05\u7406\u4e2d": 17, "\u5728\u6e90\u5206\u53d1\u4e2d\u5305\u542b": 0, "\u5728\u751f\u6210\u6a21\u5f0f\u65f6": [44, 46], "\u5728\u7a7a\u6570\u636e\u5e93\u4e0a\u751f\u6210\u67b6\u6784": 43, "\u5728\u7a7a\u6570\u636e\u5e93\u4e0a\u751f\u6210\u6a21\u5f0f": [32, 44], "\u5728\u83b7\u53d6\u5bf9\u8c61\u540e": 39, "\u5728\u8986\u76d6\u9ed8\u8ba4\u7ba1\u7406\u5668\u540e": 36, "\u5728\u8bbe\u7f6e\u4e2d": 17, "\u5728\u8bbf\u95ee\u6570\u636e\u5e93\u65f6\u4e5f\u5f88\u5bb9\u6613\u72af\u9519": 33, "\u5728\u8fd0\u884c\u65f6\u5c1d\u8bd5\u4fee\u6539\u6216\u8986\u76d6\u5176\u884c\u4e3a\u662f\u6709\u98ce\u9669\u7684": 5, "\u5728\u8fd9\u4e2a\u793a\u4f8b\u4e2d": 18, "\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b": [0, 39], "\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u4e0d\u9700\u8981\u65e9\u671f\u521d\u59cb\u5316": 13, "\u5728\u8fd9\u91cc": [13, 32, 38, 44], "\u5728\u8fd9\u91cc\u4f20\u9012": 18, "\u5728\u8fd9\u91cc\u6211\u4eec\u4f7f\u7528\u6587\u4ef6": [32, 33, 44], "\u5728\u9009\u62e9\u7c7b\u578b\u67e5\u8be2\u4e2d\u63d0\u4f9b": 0, "\u5728\u9879\u76ee\u7684": 10, "\u5757": [0, 13], "\u57df\u5957\u63a5\u5b57\u8fde\u63a5": 18, "\u57fa\u4e8e": [0, 4], "\u57fa\u672cdb\u5ba2\u6237\u7aef": [40, 47], "\u57fa\u672c\u4e0a\u662f": 9, "\u57fa\u672c\u4f7f\u7528": [19, 47], "\u57fa\u672c\u5b57\u6bb5": [40, 47], "\u57fa\u672c\u7528\u6cd5": [6, 19, 47], "\u57fa\u672c\u975e\u5173\u7cfb\u793a\u4f8b": [19, 47], "\u57fa\u7840": 2, "\u57fa\u7840\u51fd\u6570\u7c7b": [40, 47], "\u57fa\u7840\u6570\u636e\u5e93\u5ba2\u6237\u7aef\u63a5\u53e3\u5728\u6b64\u63d0\u4f9b": 18, "\u57fa\u7c7b\u4e0d\u9650\u4e8e\u6a21\u578b\u7c7b": 38, "\u589e\u52a0\u4e86\u5bf9": 0, "\u589e\u52a0\u4e86\u5bf9\u90e8\u5206\u6a21\u578b\u7684\u652f\u6301": 0, "\u589e\u52a0\u4e86\u7ba1\u7406\u6570\u636e\u7684\u590d\u6742\u6027": 33, "\u589e\u52a0\u5411\u805a\u5408\u51fd\u6570\u63d0\u4f9b": 0, "\u589e\u5f3a": 0, "\u589e\u5f3a\u7684\u6d4b\u8bd5\u652f\u6301": 41, "\u5904\u7406\u7684\u5bf9\u7acb\u8303\u5f0f\u76f8\u6096": 33, "\u5907\u6ce8": [19, 47], "\u590d\u6742\u7684\u9884\u83b7\u53d6": [40, 47], "\u5916\u952e": [0, 30, 40, 47], "\u591a\u4e2a\u6570\u636e\u5e93\u548c\u66f4\u590d\u6742\u7684\u67e5\u8be2": 32, "\u591a\u5bf9\u591a": [0, 30, 40, 47], "\u591a\u5bf9\u591a\u5173\u7cfb": [40, 47], "\u591a\u6570\u636e\u5e93": [19, 47], "\u5927\u4e8e\u4f20\u5165\u7684\u503c": 39, "\u5927\u4e8e\u6216\u7b49\u4e8e\u4f20\u5165\u7684\u503c": 39, "\u5927\u5c0f\u5199\u4e0d\u654f\u611f\u7684\u5b9e\u73b0\u4e5f\u4ec5\u90e8\u5206\u5b8c\u6210": 18, "\u592a\u597d\u4e86": 29, "\u5982": 2, "\u5982\u4e0b\u6240\u793a": 38, "\u5982\u4fc4\u6587": 18, "\u5982\u679c": [0, 18, 37], "\u5982\u679c\u4e0b\u4e00\u4e2a\u952e\u4e5f\u662f\u4e00\u4e2a\u5916\u90e8\u5bf9\u8c61": 38, "\u5982\u679c\u4e0d\u5b9a\u4e49\u4e3b\u952e": 38, "\u5982\u679c\u4e0d\u7b26\u5408\u67d0\u4e9b\u6761\u4ef6\u5219\u5f15\u53d1": 49, "\u5982\u679c\u4e0d\u9700\u8981\u6574\u4e2a\u5916\u90e8\u5bf9\u8c61": 38, "\u5982\u679c\u5176\u4e2d\u4efb\u4f55\u4e00\u4e2a\u6709\u5bc6\u7801": 2, "\u5982\u679c\u5728": 18, "\u5982\u679c\u5728\u52a0\u8f7d\u6a21\u578b\u7684\u6a21\u5757\u4e2d\u5b9a\u4e49\u4e86\u53d8\u91cf": 38, "\u5982\u679c\u5728\u6574\u6570\u5b57\u6bb5\u4e0a\u4f7f\u7528\u6b64\u9009\u9879": 38, "\u5982\u679c\u5b89\u88c5": 32, "\u5982\u679c\u5bc6\u7801\u5305\u542b\u7279\u6b8a\u5b57\u7b26": 18, "\u5982\u679c\u60a8\u4e0d\u4f7f\u7528": 17, "\u5982\u679c\u60a8\u4ecd\u7136\u9700\u8981": 0, "\u5982\u679c\u60a8\u4f7f\u7528": 37, "\u5982\u679c\u60a8\u4f7f\u7528\u6846\u67b6": 32, "\u5982\u679c\u60a8\u5728": 44, "\u5982\u679c\u60a8\u5728\u7b80\u5355\u811a\u672c\u4e2d\u8fd0\u884c\u6b64\u4ee3\u7801": 32, "\u5982\u679c\u60a8\u5c06": 32, "\u5982\u679c\u60a8\u60f3\u4f7f\u7528": 0, "\u5982\u679c\u60a8\u60f3\u4f7f\u7528\u5176\u4ed6\u7d22\u5f15\u7c7b\u578b": 34, "\u5982\u679c\u60a8\u60f3\u518d\u6b21\u8bbf\u95ee\u66f4\u65b0\u540e\u7684": 29, "\u5982\u679c\u60a8\u60f3\u63a7\u5236": 35, "\u5982\u679c\u60a8\u60f3\u67e5\u770b\u6302\u8d77\u6d4b\u8bd5\u7684\u5e95\u5c42\u60c5\u51b5\u4ee5\u8fdb\u884c\u8c03\u8bd5": 2, "\u5982\u679c\u60a8\u60f3\u8d21\u732e": [2, 33], "\u5982\u679c\u60a8\u6267\u884c": 0, "\u5982\u679c\u60a8\u6709\u4e00\u4e2a\u672a\u5b8c\u6210\u7684\u66f4\u6539": 2, "\u5982\u679c\u60a8\u6ca1\u6709\u81ea\u5df1\u5b9a\u4e49": 32, "\u5982\u679c\u60a8\u7684": 37, "\u5982\u679c\u60a8\u8bbf\u95ee\u672a\u6307\u5b9a\u7684\u5b57\u6bb5": 0, "\u5982\u679c\u624b\u52a8\u5c06\u4e3b\u952e\u503c\u8bbe\u7f6e\u4e3a": 0, "\u5982\u679c\u63d0\u4f9b": 0, "\u5982\u679c\u6709\u9002\u5f53\u7684": 32, "\u5982\u679c\u672a\u627e\u5230": 39, "\u5982\u679c\u67e5\u8be2\u662f\u4f7f\u7528": 38, "\u5982\u679c\u6ca1\u6709": 2, "\u5982\u679c\u6ca1\u6709\u660e\u786e\u6307\u5b9a\u5b57\u6bb5\u7684": 0, "\u5982\u679c\u6ce8\u89e3\u4e0d\u5339\u914d\u4efb\u4f55\u5185\u5bb9\u800c\u5bfc\u81f4\u7684": 0, "\u5982\u679c\u7701\u7565\u8fde\u63a5\u7c7b\u578b": 29, "\u5982\u679c\u7f3a\u5c11": 18, "\u5982\u679c\u901a\u8fc7": 18, "\u5982\u6d4b\u8bd5\u6846\u67b6\u548c": 2, "\u59cb\u7ec8\u5c1d\u8bd5\u6e05\u6670\u5730\u5206\u9694\u672f\u8bed": 2, "\u5b50\u53e5": [29, 38], "\u5b50\u67e5\u8be2": [40, 41, 47], "\u5b50\u7c7b\u5316\u65f6": 30, "\u5b50\u7c7b\u7684\u95ee\u9898": 0, "\u5b57\u5178\u7684\u9644\u52a0": 39, "\u5b57\u6bb5": [0, 6, 29, 33, 40, 41, 47], "\u5b57\u6bb5\u4e0d\u4e3a": 39, "\u5b57\u6bb5\u4e2d\u770b\u5230": 18, "\u5b57\u6bb5\u4e3a": 39, "\u5b57\u6bb5\u5305\u542b\u6307\u5b9a\u5b50\u5b57\u7b26\u4e32": 39, "\u5b57\u6bb5\u5728\u8fd9\u91cc\u5b9a\u4e49": 2, "\u5b57\u6bb5\u5c06\u586b\u5145\u76f8\u5e94\u7684": 39, "\u5b57\u6bb5\u662f\u53ef\u9009\u7684": 32, "\u5b57\u6bb5\u662f\u5426\u4ee5\u503c\u5f00\u5934": 39, "\u5b57\u6bb5\u662f\u5426\u4ee5\u503c\u7ed3\u5c3e": 39, "\u5b57\u6bb5\u6765\u8bf4\u662f\u4e0d\u9700\u8981\u7684": 13, "\u5b57\u6bb5\u6dfb\u52a0": 0, "\u5b57\u6bb5\u7684\u95ee\u9898": 0, "\u5b57\u6bb5\u88ab\u5b9a\u4e49\u4e3a": 30, "\u5b57\u6bcd\u987a\u5e8f\u6392\u5e8f": 13, "\u5b57\u7b26": 0, "\u5b58\u50a8\u5f15\u64ce\u7684": 2, "\u5b58\u5728\u4e00\u4e2a\u9519\u8bef": 17, "\u5b83\u4eec\u4e5f\u53ef\u4ee5\u901a\u8fc7\u4f4d\u8fd0\u7b97\u7b26\u8fdb\u884c\u7ec4\u5408": 29, "\u5b83\u4eec\u5c06\u7531\u6a21\u578b\u53d1\u9001": 45, "\u5b83\u4eec\u5e94\u8be5\u53ef\u4ee5\u6b63\u5e38\u4f7f\u7528": 39, "\u5b83\u4eec\u5f71\u54cd\u65f6\u533a\u8bbe\u7f6e": 46, "\u5b83\u4eec\u7684\u8bbe\u8ba1\u4e0e": 33, "\u5b83\u4f1a\u81ea\u52a8\u5b9a\u4e49": 32, "\u5b83\u4f1a\u8be2\u95ee": 37, "\u5b83\u4f7f\u5f97\u53ef\u4ee5\u5f15\u7528\u6a21\u578b\u5b57\u6bb5\u7684\u503c\u5e76\u4f7f\u7528\u5b83\u4eec\u6267\u884c\u6570\u636e\u5e93\u64cd\u4f5c": 29, "\u5b83\u53ea\u4f1a\u5305\u542b\u76f8\u5173\u8868\u7684\u952e\u503c": 38, "\u5b83\u53ef\u4ee5\u83b7\u53d6\u5916\u952e\u5173\u7cfb": 39, "\u5b83\u53ef\u80fd\u5df2\u7ecf\u4f7f\u7528\u4e86\u5b83": 32, "\u5b83\u5728\u5404\u79cd\u7f16\u8f91\u5668\u4e2d\u7684\u652f\u6301\u5e76\u4e0d\u5e7f\u6cdb": 38, "\u5b83\u5c06\u4e3a\u6240\u6709\u6a21\u578b\u6dfb\u52a0\u81ea\u52a8\u5b8c\u6210": 38, "\u5b83\u5c06\u5b89\u5168\u5730\u4ece\u5b57\u5178\u4e2d\u6279\u91cf\u66f4\u65b0\u503c": 0, "\u5b83\u5c06\u679a\u4e3e\u5e8f\u5217\u5316\u4e3a": 30, "\u5b83\u5c06\u8fd4\u56de\u5bf9\u8c61\u6216\u5f15\u53d1": 0, "\u5b83\u5e94\u8be5\u53ef\u4ee5\u6b63\u5e38\u5de5\u4f5c": 13, "\u5b83\u5e94\u8be5\u662f": 38, "\u5b83\u5e94\u8be5\u662f\u4e00\u4e2a\u5143\u7ec4\u7684\u5143\u7ec4": 38, "\u5b83\u5e94\u8be5\u662f\u53ef\u8fed\u4ee3\u7684\u5b57\u7b26\u4e32": 38, "\u5b83\u624d\u4f1a\u751f\u6210\u67e5\u8be2\u5e76\u5728\u6570\u636e\u5e93\u4e2d\u8fd0\u884c": 39, "\u5b83\u63a5\u53d7\u4e00\u4e2a\u503c": 49, "\u5b83\u63cf\u8ff0\u4e86\u4e0e": 38, "\u5b83\u662f": 4, "\u5b83\u6709\u4e00\u4e2a\u5b57\u6bb5": 38, "\u5b83\u7684\u6027\u80fd\u4e5f\u8868\u73b0\u826f\u597d": 33, "\u5b83\u7684\u8bbe\u8ba1\u4e2d\u94ed\u523b\u7740\u60a8\u4e0d\u4ec5\u5728\u5904\u7406\u8868\u683c": 33, "\u5b83\u8fd8\u53ef\u4ee5\u83b7\u53d6\u53ef\u53d8\u6df1\u5ea6\u7684\u76f8\u5173\u5bf9\u8c61": 39, "\u5b83\u9700\u8981\u6b63\u786e\u5173\u95ed\u8fde\u63a5": 44, "\u5b89\u88c5": 47, "\u5b8c\u5168\u4ece\u63d0\u4f9b\u7684\u53c2\u6570\u914d\u7f6e": 33, "\u5b8c\u5907\u7684\u6a21\u5f0f\u8fc1\u79fb": 41, "\u5b8c\u6574\u6027\u9519\u8bef\u5f02\u5e38\u4e0d\u4e00\u81f4\u95ee\u9898": 0, "\u5b9a\u4e49": [32, 38], "\u5b9a\u4e49\u4e00\u4e2a\u8def\u7531\u5668\u5f88\u7b80\u5355": 42, "\u5b9a\u4e49\u4e86\u5bf9\u88ab\u5f15\u7528\u6a21\u578b\u7684\u76f8\u5173\u67e5\u8be2\u5b57\u6bb5": 38, "\u5b9a\u4e49\u60a8\u7684\u6a21\u578b\u5982\u4e0b": 33, "\u5b9a\u4e49\u8def\u7531": [40, 47], "\u5b9a\u4e49\u9ed8\u8ba4\u6392\u5e8f": 13, "\u5b9e\u4f8b": 39, "\u5b9e\u4f8b\u6dfb\u52a0\u4e00\u4e2a\u65b0\u5c5e\u6027": 31, "\u5b9e\u73b0": 0, "\u5ba2\u6237\u7aef\u7684": 32, "\u5bf9\u4e8e": [32, 34, 41, 46], "\u5bf9\u5176\u4ed6\u6a21\u578b\u7684\u5f15\u7528\u6309\u683c\u5f0f\u5b9a\u4e49": 32, "\u5bf9\u6a21\u578b\u548c\u5b57\u6bb5\u7684\u7406\u89e3": 10, "\u5bf9\u8c61": [0, 13, 39], "\u5bf9\u8c61\u4e5f\u53ef\u4ee5\u5d4c\u5957": 29, "\u5bf9\u8c61\u5173\u7cfb\u6620\u5c04\u5668": 33, "\u5bf9\u8c61\u53ef\u4ee5\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u7ed9": 29, "\u5bf9\u8c61\u53ef\u4ee5\u63a5\u53d7\u4efb\u4f55": 29, "\u5bf9\u8c61\u652f\u6301\u53d6\u53cd": 29, "\u5bf9\u8c61\u65b9\u6cd5": 13, "\u5bf9\u8c61\u6765\u589e\u5f3a\u67e5\u8be2\u529f\u80fd": 29, "\u5bf9\u8c61\u6765\u5b9e\u73b0": 39, "\u5bf9\u8c61\u8868\u793a\u6a21\u578b\u5b57\u6bb5\u7684\u503c": 29, "\u5bf9\u8c61\u88ab\u89c6\u4e3a\u65e0\u64cd\u4f5c": 29, "\u5bf9\u8c61\u975e\u5e38\u7075\u6d3b": 29, "\u5bfc\u5165": 0, "\u5bfc\u51fa": 0, "\u5bfc\u81f4\u5728\u4f7f\u7528": 0, "\u5bfc\u81f4\u5b83\u65e0\u6cd5\u4e0e\u5f02\u6b65\u6d4b\u8bd5\u7528\u4f8b\u4e00\u8d77\u5de5\u4f5c": 17, "\u5c06": [0, 41], "\u5c06\u4ea7\u751f\u4e24\u4e2a\u989d\u5916\u7684\u67e5\u8be2\u6765\u83b7\u53d6\u4f60\u7684\u6570\u636e": 39, "\u5c06\u4f20\u9012": 0, "\u5c06\u4f7f\u7528\u8be5\u5217\u8868": [38, 44], "\u5c06\u4fdd\u6301\u4e0e\u5916\u90e8\u6570\u636e\u5e93\u7684\u8fde\u63a5": 44, "\u5c06\u5217\u8868\u4f5c\u4e3a\u6839\u5143\u7d20": 13, "\u5c06\u521b\u5efa\u4e00\u4e2a\u968f\u673a\u5316\u7684\u6570\u636e\u5e93\u540d\u79f0": 17, "\u5c06\u59cb\u7ec8\u6709\u6548": 17, "\u5c06\u5b57\u6bb5\u7684\u521d\u59cb\u53c2\u6570": 0, "\u5c06\u5f15\u53d1": 0, "\u5c06\u5f3a\u70c8\u5efa\u8bae\u5c3d\u53ef\u80fd\u6267\u884c\u66f4\u65b0\u64cd\u4f5c": 0, "\u5c06\u6253\u5370\u8c03\u8bd5": 35, "\u5c06\u7531\u76f8\u5173\u9526\u6807\u8d5b\u7684\u540d\u79f0\u586b\u5145": 39, "\u5c06\u786e\u4fdd\u8fde\u63a5\u88ab\u5173\u95ed": 44, "\u5c06\u81ea\u52a8\u4f7f\u7528": 32, "\u5c06\u81ea\u52a8\u7528\u4e8e": 32, "\u5c06\u8bbe\u7f6e\u4e3a": 38, "\u5c06\u8fd4\u56de": 0, "\u5c06\u8fdb\u884c\u81ea\u52a8\u5316\u7684\u6837\u5f0f\u68c0\u67e5\u548c": 2, "\u5c06\u9ed8\u8ba4\u503c\u4f20\u64ad\u5230": 0, "\u5c0f\u4e8e\u4f20\u5165\u7684\u503c": 39, "\u5c0f\u4e8e\u6216\u7b49\u4e8e\u4f20\u5165\u7684\u503c": 39, "\u5c0f\u5e2e\u52a9\u51fd\u6570": 44, "\u5c1a\u4e0d\u652f\u6301\u53cd\u5e8f\u5217\u5316": 13, "\u5c3d\u53ef\u80fd\u9075\u5faa": 2, "\u5c55\u793a\u4e86\u5982\u4f55\u8bbf\u95ee\u8be5\u63a5\u53e3": 5, "\u5c5e\u6027": 0, "\u5c5e\u6027\u672a\u8bbe\u7f6e\u7684\u95ee\u9898": 0, "\u5d4c\u5957\u8fc7\u6ee4\u5668": 29, "\u5df2\u6709\u8bb8\u591a\u73b0\u5b58\u4e14\u6210\u719f\u7684": 33, "\u5df2\u88ab\u5f03\u7528": 0, "\u5e0c\u671b\u80fd\u591f\u76f4\u63a5\u4ece": 14, "\u5e2e\u52a9\u51fd\u6570": [40, 47], "\u5e38\u89c4": 13, "\u5e38\u89c4\u9009\u62e9\u6a21\u578b\u5b9e\u4f8b": 39, "\u5e72\u51c0": 47, "\u5e76\u4e0d\u539f\u751f\u652f\u6301\u8bb8\u591a\u5e38\u89c1\u7684\u6570\u636e\u7c7b\u578b": 18, "\u5e76\u4e0d\u662f\u6784\u5efa": 33, "\u5e76\u4e14": 0, "\u5e76\u4e14\u4e5f\u5b9a\u4e49\u4e86\u5173\u7cfb": 13, "\u5e76\u4e14\u53ef\u4ee5\u50cf\u8fd9\u6837\u521b\u5efa\u62bd\u8c61\u6a21\u578b": 38, "\u5e76\u4e14\u53ef\u4ee5\u81ea\u52a8\u751f\u6210\u4e3b\u952e": 0, "\u5e76\u4e14\u5c06\u901a\u8fc7\u4e00\u4e2a\u67e5\u8be2\u5b8c\u6210": 39, "\u5e76\u4e14\u60a8\u5c06\u5728": 0, "\u5e76\u4e14\u60a8\u6ca1\u6709\u5728": 0, "\u5e76\u4e14\u662f\u9ed8\u8ba4\u503c": 17, "\u5e76\u4e14\u6bcf\u4e2a\u4e8b\u4ef6\u7684": 39, "\u5e76\u4e14\u6bcf\u4e2a\u4e8b\u4ef6\u7684\u9526\u6807\u8d5b\u4e5f\u5c06\u88ab\u9884\u53d6": 39, "\u5e76\u4e14\u7ecf\u5e38\u4e0e\u5206\u7ec4\u4e00\u8d77\u4f7f\u7528": 31, "\u5e76\u4e14\u81ea\u7136\u5730": 30, "\u5e76\u4f7f\u7528": 0, "\u5e76\u50cf\u8fd9\u6837\u4f7f\u7528\u5b83": 33, "\u5e76\u53c2\u8003": 8, "\u5e76\u544a\u8bc9\u521b\u5efa\u5668\u4f7f\u7528\u5b83\u4eec": 13, "\u5e76\u5728\u5e94\u7528\u7684\u751f\u547d\u5468\u671f\u5185\u4fdd\u6301\u5728\u5185\u5b58\u4e2d": 5, "\u5e76\u5728\u62c6\u5378\u65f6\u8fdb\u884c\u6e05\u7406": [7, 8, 14, 15, 16], "\u5e76\u5728\u8fd9\u4e9b\u4e8b\u4ef6\u4e2d\u9884\u53d6\u9526\u6807\u8d5b": 32, "\u5e76\u5b9e\u73b0": 49, "\u5e76\u5bf9\u4f18\u79c0\u4e14\u6d41\u884c\u7684": 33, "\u5e76\u5c06": [0, 39], "\u5e76\u5c06\u5728\u6700\u7ec8\u67e5\u8be2\u4e2d\u88ab\u5ffd\u7565": 29, "\u5e76\u5c06\u60a8\u7684\u6570\u636e\u5e93\u5ba2\u6237\u7aef\u4e0e\u76f8\u5e94\u7684\u6a21\u578b\u5339\u914d": [32, 44], "\u5e76\u5c06\u9ed8\u8ba4\u503c\u8bbe\u4e3a": 0, "\u5e76\u5e2e\u52a9\u60a8\u627e\u5230\u6240\u9700\u5185\u5bb9": 29, "\u5e76\u5e8f\u5217\u5316\u4e8b\u4ef6": 13, "\u5e76\u63d0\u4f9b\u8f85\u52a9\u51fd\u6570\u6765\u5e8f\u5217\u5316\u8be5\u6a21\u578b\u53ca\u5176\u76f8\u5173\u5bf9\u8c61": 13, "\u5e76\u6d4f\u89c8": 9, "\u5e76\u8ddf\u8e2a\u5173\u7cfb": 33, "\u5e76\u8fd4\u56de\u5b9e\u4f8b\u800c\u4e0d\u662f\u5217\u8868": 39, "\u5e78\u8fd0\u7684\u662f": 29, "\u5e8f\u5217\u5316": [0, 6, 8, 9, 24, 47], "\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316": 32, "\u5e8f\u5217\u5316\u5668\u4e0d\u80fd\u8c03\u7528\u5f02\u6b65\u65b9\u6cd5": 13, "\u5e8f\u5217\u5316\u5668\u5c06\u4f7f\u7528\u6b64\u6392\u5e8f\u7ed3\u679c": 13, "\u5e8f\u5217\u5316\u652f\u6301": 41, "\u5e8f\u5217\u5316\u6bd4\u8d5b": 13, "\u5e93": 44, "\u5e94\u7528\u4e0d\u662f\u9ed8\u8ba4\u7684": 37, "\u5e94\u7528\u540d\u79f0": 37, "\u5e94\u7528\u7a0b\u5e8f": 8, "\u5e94\u8be5\u9996\u5148\u8c03\u7528": 29, "\u5e94\u9075\u5faa\u4ee5\u4e0b\u6807\u51c6": 17, "\u5f00\u53d1": 2, "\u5f00\u5934\u7684\u4e8b\u4ef6": 39, "\u5f00\u59cb\u5165\u95e8": [38, 39, 47], "\u5f00\u59cb\u65f6\u53ea\u9700\u8f93\u5165": 2, "\u5f02\u5e38": [0, 13, 40, 47], "\u5f02\u5e38\u5904\u7406\u7a0b\u5e8f": 0, "\u5f02\u6b65\u83b7\u53d6": 38, "\u5f03\u7528": 0, "\u5f15\u53d1\u66f4\u597d\u7684\u9519\u8bef": 0, "\u5f15\u8a00": 47, "\u5f15\u8d77\u7684": 0, "\u5f3a\u5236": 0, "\u5f53": 0, "\u5f53\u4e3b\u952e\u5b57\u6bb5\u4e0d\u662f": 0, "\u5f53\u4e3b\u952e\u7531": 0, "\u5f53\u4f60\u5904\u7406\u76f8\u5173\u6570\u636e\u65f6": 39, "\u5f53\u524d\u7684": 35, "\u5f53\u5916\u952e\u672a\u5305\u542b\u5728": 0, "\u5f53\u5b57\u6bb5\u540c\u65f6\u8bbe\u7f6e\u4e3a\u53ef\u7a7a\u548c\u4e3b\u952e\u65f6\u5f15\u53d1\u4fe1\u606f\u6027\u9519\u8bef": 0, "\u5f53\u5b57\u6bb5\u8d85\u8fc7": 0, "\u5f53\u5c06": 46, "\u5f53\u6027\u80fd\u81f3\u5173\u91cd\u8981\u65f6": 39, "\u5f53\u60a8\u6784\u5efa\u4e00\u4e2a\u4f7f\u7528\u5173\u7cfb\u6570\u636e\u5e93\u7684\u5e94\u7528\u7a0b\u5e8f\u6216\u670d\u52a1\u65f6": 33, "\u5f62\u5f0f\u6307\u5b9a\u6570\u636e\u5e93\u914d\u7f6e": 18, "\u5fc5\u9009\u53c2\u6570": [40, 47], "\u5fc5\u9700": 37, "\u5fc5\u987b\u53c2\u6570": [40, 47], "\u5fc5\u987b\u5728\u6d6e\u70b9\u6570\u4e4b\u95f4\u8fdb\u884c\u8f6c\u6362": 18, "\u5fc5\u987b\u81f3\u5c11\u6307\u5b9a\u4e00\u4e2a\u6a21\u5757\u8def\u5f84": 17, "\u5fc5\u987b\u901a\u8fc7\u5c06": 38, "\u5feb\u6377\u65b9\u6cd5\u6dfb\u52a0\u4e86": 0, "\u5feb\u901f\u5f00\u59cb": [40, 47], "\u6027\u80fd": 2, "\u6027\u80fd\u4f18\u5316": 41, "\u60a8\u4e0d\u5e94\u8be5\u5728\u6bcf\u6b21\u5e94\u7528\u521d\u59cb\u5316\u65f6\u8fd0\u884c\u5b83": [32, 44], "\u60a8\u4e0d\u9700\u8981\u6570\u636e\u5e93\u8fd0\u884c": 2, "\u60a8\u4e5f\u53ef\u4ee5\u4f7f\u7528\u60a8\u7684": 32, "\u60a8\u4e5f\u53ef\u4ee5\u6309\u76f8\u5173\u6a21\u578b\u8fc7\u6ee4\u548c\u6392\u5e8f": 32, "\u60a8\u4ecd\u7136\u9700\u8981\u8c03\u7528": 0, "\u60a8\u4f1a\u4e0d\u65ad\u91cd\u590d\u81ea\u5df1": 33, "\u60a8\u53ea\u9700\u7ee7\u627f": 34, "\u60a8\u53ea\u9700\u8fd0\u884c": 2, "\u60a8\u53ef\u4ee5\u4f7f\u7528": [18, 32], "\u60a8\u53ef\u4ee5\u4f7f\u7528\u5e38\u89c4": 32, "\u60a8\u53ef\u4ee5\u50cf\u8fd9\u6837\u5f00\u59cb\u7f16\u5199\u6a21\u578b": 32, "\u60a8\u53ef\u4ee5\u542f\u52a8": 4, "\u60a8\u53ef\u4ee5\u5728": [29, 32], "\u60a8\u53ef\u4ee5\u5728\u4e0d\u7834\u574f\u67b6\u6784\u7684\u60c5\u51b5\u4e0b\u66f4\u6539\u6a21\u578b\u540d\u79f0": 38, "\u60a8\u53ef\u4ee5\u5728\u66f4\u901a\u7528\u7684\u7c7b\u4e2d\u5b9a\u4e49\u5b57\u6bb5": 38, "\u60a8\u53ef\u4ee5\u5728\u8fd9\u91cc\u53ef\u9009\u5730\u8986\u76d6": 17, "\u60a8\u53ef\u4ee5\u5b89\u88c5": 0, "\u60a8\u53ef\u4ee5\u5b89\u88c5\u4e0a\u8ff0\u6240\u6709\u52a0\u901f\u5668": 32, "\u60a8\u53ef\u4ee5\u5b9a\u4e49\u81ea\u5b9a\u4e49\u51fd\u6570": 31, "\u60a8\u53ef\u4ee5\u5c06\u6570\u636e\u5e93\u914d\u7f6e\u53c2\u6570\u8bbe\u7f6e\u4e3a\u73af\u5883\u53d8\u91cf": 17, "\u60a8\u53ef\u4ee5\u5c06\u9a8c\u8bc1\u5668\u5217\u8868\u4f20\u9012\u7ed9": 49, "\u60a8\u53ef\u4ee5\u5f00\u59cb\u4f7f\u7528\u60a8\u7684\u6a21\u578b": 32, "\u60a8\u53ef\u4ee5\u6309\u7167\u4ee5\u4e0b\u65b9\u5f0f\u8fdb\u884c\u914d\u7f6e": 35, "\u60a8\u53ef\u4ee5\u67e5\u770b": [4, 37], "\u60a8\u53ef\u4ee5\u8f7b\u677e\u5b9e\u73b0\u66f4\u591a\u540e\u7aef": 32, "\u60a8\u53ef\u4ee5\u8fd9\u6837\u505a": [32, 44], "\u60a8\u53ef\u4ee5\u9009\u62e9": 37, "\u60a8\u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\u6765\u8bbe\u7f6e\u914d\u7f6e": 4, "\u60a8\u53ef\u4ee5\u901a\u8fc7\u8fd0\u884c": 2, "\u60a8\u53ef\u80fd\u9700\u8981\u5b89\u88c5": 17, "\u60a8\u5728": 0, "\u60a8\u5c06\u6536\u5230": 0, "\u60a8\u5e94\u7ee7\u627f": 34, "\u60a8\u5e94\u8be5\u4f7f\u7528": 46, "\u60a8\u5fc5\u987b\u50cf\u8fd9\u6837\u5b89\u88c5": 32, "\u60a8\u5fc5\u987b\u6307\u5b9a": 37, "\u60a8\u65e0\u6cd5\u4ec5\u4f9d\u9760\u53c2\u6570\u5316\u67e5\u8be2\u6216\u67e5\u8be2\u6784\u5efa\u5668": 33, "\u60a8\u7684\u6570\u636e\u89c4\u5219\u4e5f\u662f\u5206\u6563\u7684": 33, "\u60a8\u80fd\u591f\u4ee5\u81ea\u7136\u4e14\u6613\u4e8e\u7ef4\u62a4\u7684\u65b9\u5f0f\u5b9a\u4e49\u6a21\u578b": 38, "\u60a8\u8981\u66f4\u65b0\u7684\u6240\u6709\u5b57\u6bb5\u5747\u5728": 0, "\u60a8\u8fd8\u53ef\u4ee5\u4f7f\u7528\u81ea\u5df1\u7684\u683c\u5f0f\u5316\u7a0b\u5e8f\u4e3a": 35, "\u60a8\u8fd8\u53ef\u4ee5\u5728": 29, "\u60a8\u8fd8\u53ef\u4ee5\u5728\u66f4\u65b0\u4e2d\u4f7f\u7528\u51fd\u6570": 31, "\u60a8\u8fd8\u53ef\u4ee5\u9009\u62e9\u5c06": 44, "\u60a8\u9700\u8981\u5148\u5c06": 37, "\u60a8\u9700\u8981\u521b\u5efa\u4e00\u4e2a": 4, "\u60a8\u9700\u8981\u8fdb\u884c\u6bd4\u7b80\u5355\u7684": 29, "\u60a8\u9700\u8981\u914d\u7f6e\u6d4b\u8bd5\u73af\u5883\u7684\u8bbe\u7f6e\u548c\u6e05\u7406": 17, "\u611f\u8c22": 47, "\u6210\u4e3a\u4e8b\u5b9e\u4e0a\u7684": 41, "\u6210\u529f\u4e3a\u5e94\u7528": 37, "\u6210\u529f\u521b\u5efa\u5e94\u7528\u8fc1\u79fb\u4f4d\u7f6e": 37, "\u6210\u529f\u8fc1\u79fb": 37, "\u6211\u4eec\u4e0d\u60f3\u9650\u5236\u5916\u90e8\u5217\u540d\u79f0": 38, "\u6211\u4eec\u4e5f\u53ef\u4ee5\u4ee5\u76f8\u540c\u7684\u65b9\u5f0f\u4e3a": 13, "\u6211\u4eec\u4ecb\u7ecd": 13, "\u6211\u4eec\u4ecd\u7136\u5efa\u8bae\u6539\u7528": 0, "\u6211\u4eec\u4f7f\u7528": 13, "\u6211\u4eec\u4f7f\u7528\u5728": 39, "\u6211\u4eec\u521b\u5efa\u4e00\u4e2a": 44, "\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u4f7f\u7528\u9ed8\u8ba4": 32, "\u6211\u4eec\u521b\u5efa\u4e86\u4e00\u4e2a\u6307\u5411\u9526\u6807\u8d5b\u7684\u5916\u952e\u5f15\u7528": 38, "\u6211\u4eec\u5728": 2, "\u6211\u4eec\u5728\u4e24\u4e2a\u6a21\u578b\u4e2d\u90fd\u6392\u9664\u4e86": 13, "\u6211\u4eec\u5728\u6bcf\u4e2a\u5ba2\u6237\u7aef\u4e0a\u6ce8\u518c\u4e86": 18, "\u6211\u4eec\u5b9a\u4e49\u4e86\u4e00\u4e2a": 13, "\u6211\u4eec\u5b9a\u4e49\u5e26\u6709\u5173\u7cfb\u7684\u6a21\u578b": 13, "\u6211\u4eec\u5c06\u4e3a\u60a8\u521b\u5efa\u4e00\u4e2a\u7c7b\u578b\u4e3a": 38, "\u6211\u4eec\u5c06\u8ba9": 18, "\u6211\u4eec\u5c3d\u91cf\u81ea\u52a8\u5316\u6240\u6709\u53ef\u80fd\u7684\u64cd\u4f5c": 2, "\u6211\u4eec\u5e0c\u671b\u8fd9\u4e9b\u6210\u4e3a\u7ed3\u679c\u96c6\u7684\u4e00\u90e8\u5206": 13, "\u6211\u4eec\u5e94\u8be5\u9632\u6b62\u6ca1\u6709\u9884\u83b7\u53d6\u7684\u60c5\u51b5": 13, "\u6211\u4eec\u5efa\u8bae\u6bcf\u4e2a\u4eba\u90fd\u8fdb\u884c\u66f4\u65b0": 0, "\u6211\u4eec\u5f00\u59cb\u4e86": 33, "\u6211\u4eec\u5f53\u524d\u652f\u6301\u4efb\u4f55\u53ef\u7d22\u5f15\u5b57\u6bb5\u7c7b\u578b\u7684\u5355\u4e00": 38, "\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e2a": 10, "\u6211\u4eec\u65e0\u6cd5\u786e\u5b9a\u521b\u5efa\u6709\u6548": 13, "\u6211\u4eec\u6709": 29, "\u6211\u4eec\u6709\u4e00\u4e2a": 2, "\u6211\u4eec\u6709\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u7684\u96c6\u6210\u5de5\u5177": [7, 8, 9, 14, 15, 16], "\u6211\u4eec\u6709\u5b57\u6bb5": 38, "\u6211\u4eec\u6dfb\u52a0\u4e86\u4e00\u4e9b\u53ef\u80fd\u5bf9\u6211\u4eec\u6709\u8da3\u7684\u5b57\u6bb5": 38, "\u6211\u4eec\u6dfb\u52a0\u4e86\u4e24\u4e2a\u53ef\u8c03\u7528\u51fd\u6570": 13, "\u6211\u4eec\u73b0\u5728\u539f\u751f\u652f\u6301\u4ece": 0, "\u6211\u4eec\u73b0\u5728\u6709\u4e86\u6a21\u578b\u7684\u65e9\u671f\u521d\u59cb\u5316": 0, "\u6211\u4eec\u7684\u77ed\u671f\u76ee\u6807\u662f\u5c06\u5f53\u524d\u5b9e\u73b0\u4f5c\u4e3a": 41, "\u6211\u4eec\u76ee\u524d\u53ea\u652f\u6301\u540c\u6b65\u63a5\u53e3": 38, "\u6211\u4eec\u76f8\u4fe1\u4fdd\u6301\u4ee3\u7801\u7b80\u5355": 2, "\u6211\u4eec\u786e\u4fdd\u4f1a\u5f15\u53d1\u9519\u8bef": 0, "\u6211\u4eec\u786e\u5b9a\u4e86\u4ee5\u4e0b\u539f\u5219": 2, "\u6211\u4eec\u7981\u7528\u9a8c\u8bc1": 18, "\u6211\u4eec\u7ef4\u62a4\u4e00\u4e2a": 33, "\u6211\u4eec\u8981\u6c42\u6bcf\u4e2a\u6a21\u578b\u90fd\u6709\u4e00\u4e2a\u4e3b\u952e": 38, "\u6211\u4eec\u8981\u6c42\u76f4\u63a5\u8fc7\u6ee4\u5668\u5e94\u7528\u4e8e\u5916\u952e\u7684\u6570\u636e\u5e93\u652f\u6301\u5b57\u6bb5": 38, "\u6211\u4eec\u9700\u8981\u4f7f\u7528": 13, "\u6211\u4eec\u9f13\u52b1\u60a8\u53c2\u4e0e\u5e76\u52a0\u5165\u56e2\u961f": 2, "\u6216": [0, 2, 13, 18, 29, 31, 34, 38, 39], "\u6216\u4ea7\u751f\u6b67\u4e49": 38, "\u6216\u4f7f\u7528": 29, "\u6216\u4f7f\u7528\u5177\u4f53\u7684": 18, "\u6216\u5176\u5b50\u7c7b\u7684\u5b9e\u4f8b": 38, "\u6216\u5728\u4ece\u672a\u4fdd\u5b58\u4e4b\u524d\u63d2\u5165\u5b83": 39, "\u6216\u5728\u60a8\u6307\u5b9a\u52a0\u8f7d\u6a21\u578b\u7684\u5176\u4ed6\u5730\u65b9": 44, "\u6216\u66f4\u591a\u7684\u9526\u6807\u8d5b": 39, "\u6216\u6a21\u578b\u7684": 0, "\u6216\u7528\u4e8e\u81ea\u7b7e\u540d\u8bc1\u4e66\u7684\u81ea\u5b9a\u4e49": 18, "\u6216\u8005": [4, 18, 32, 38, 42], "\u6216\u8005\u4f7f\u7528\u51fd\u6570\u800c\u4e0d\u662f\u7c7b": 49, "\u6216\u8005\u5728": 34, "\u6216\u8005\u60a8\u53ef\u4ee5\u63d0\u524d\u8c03\u7528\u4ee5\u83b7\u53d6\u76f8\u5173\u5bf9\u8c61": 32, "\u6216\u8005\u76f4\u63a5\u521b\u5efa": [2, 33], "\u6216\u8005\u901a\u8fc7": [32, 33], "\u6216\u8005\u901a\u8fc7\u73af\u5883\u53d8\u91cf\u9a71\u52a8": 17, "\u6216\u8005\u901a\u8fc7\u76f4\u63a5\u8bbf\u95ee\u6570\u636e\u5e93\u652f\u6301\u5b57\u6bb5": 38, "\u6216\u8005\u901a\u8fc7\u914d\u7f6e\u6587\u4ef6": 17, "\u6216\u81ea\u5b9a\u4e49": 18, "\u6216\u9009\u62e9": 37, "\u6240\u4ee5\u6211\u4eec\u4e0d\u9700\u8981\u7b49\u5f85\u5173\u7cfb": 13, "\u6240\u4ee5\u6b64\u65f6\u5b83\u4e0d\u77e5\u9053\u5173\u7cfb": 13, "\u6240\u4ee5\u8981\u8fd0\u884c\u6d4b\u8bd5": 2, "\u6240\u505a\u7684\u6240\u6709\u7e41\u91cd\u5de5\u4f5c": 3, "\u6240\u6709": 42, "\u6240\u6709\u50cf": 36, "\u6240\u6709\u67e5\u8be2\u90fd\u5c06\u56de\u9000\u5230\u9ed8\u8ba4\u6570\u636e\u5e93": 42, "\u624b\u5199sql": [19, 47], "\u624b\u52a8\u5b9a\u4e49\u53cd\u5411\u5173\u7cfb\u662f\u6709\u7528\u7684": 13, "\u624d\u6709\u610f\u4e49": 31, "\u624d\u80fd\u4f7f\u5176\u6b63\u5e38\u5de5\u4f5c": 17, "\u6253\u5f00": 0, "\u6267\u884c\u521b\u5efa\u64cd\u4f5c": 0, "\u6267\u884c\u66f4\u65b0\u64cd\u4f5c": 0, "\u6269\u5c55": 41, "\u6269\u5c55\u4e00\u4e2a\u5b57\u6bb5": [40, 47], "\u6269\u5c55\u63d0\u4f9b\u7684\u6807\u51c6\u5b57\u6bb5": 41, "\u6269\u5c55\u7d22\u5f15": [40, 47], "\u6269\u5c55\u7d22\u5f15\u5f88\u7b80\u5355": 34, "\u629b\u51fa": 0, "\u62a5\u544a": 0, "\u62a5\u544a\u6240\u6709": 2, "\u62fc\u5199\u9519\u8bef\u4e3a": 0, "\u6307\u4ee4\u6dfb\u52a0\u81ea\u5b9a\u4e49\u5c5e\u6027\u540d\u79f0": 0, "\u6307\u5411": 18, "\u6307\u5b9a": [18, 38], "\u6307\u5b9a\u5916\u952e\u53ef\u4ee5\u901a\u8fc7\u4f20\u9012\u5bf9\u8c61\u5b8c\u6210": 38, "\u6309\u9884\u671f\u5de5\u4f5c": 17, "\u6392\u5e8f\u65f6": 18, "\u6392\u9664\u521b\u5efa\u65f6\u95f4\u6233": 13, "\u63a5\u4e0b\u6765": 13, "\u63a5\u53d7\u503c\u53c2\u6570\u4e2d\u76f8\u540c\u7c7b\u578b": 30, "\u63a5\u53d7\u6709\u6548\u7684": 0, "\u63a5\u53d7\u6709\u6548\u7684\u65e5\u671f\u5b57\u7b26\u4e32": 0, "\u63a5\u53d7\u7684\u9009\u9879": 29, "\u63a5\u6536\u7684\u683c\u5f0f\u76f8\u540c": 38, "\u63cf\u8ff0": 0, "\u63d0\u4ea4\u9519\u8bef\u6216\u8bf7\u6c42\u529f\u80fd": 47, "\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7528\u4e8e\u5904\u7406\u591a\u5bf9\u591a": 39, "\u63d0\u4f9b\u4e86\u7528\u4e8e\u5904\u7406": 39, "\u63d0\u4f9b\u5bf9": 33, "\u63d0\u4f9b\u66ff\u6362\u5e8f\u5217\u5316\u5668\u4e3a\u81ea\u5b9a\u4e49\u89e3\u51b3\u65b9\u6848\u7684\u7b80\u6d01\u65b9\u6cd5": 41, "\u63d0\u4f9b\u7684\u66f4\u590d\u6742\u7684\u67e5\u8be2": 29, "\u63d0\u4f9b\u7ba1\u7406\u547d\u4ee4\u7684\u80fd\u529b": 41, "\u63d0\u5347\u67e5\u8be2\u4e2d\u7684\u6ce8\u91ca\u5b57\u6bb5\u4f18\u5148\u7ea7": 0, "\u63d2\u4ef6": [2, 13, 33, 47], "\u63d2\u4ef6\u6b63\u5e38\u5de5\u4f5c": 2, "\u63d2\u4ef6\u81f3\u6700\u65b0\u7684": 0, "\u63d2\u5165\u5177\u6709\u8986\u76d6\u4e3b\u952e\u7684\u8bb0\u5f55": 0, "\u641c\u7d22": [6, 47], "\u64cd\u4f5c\u5c06\u4f7f\u7528": 42, "\u64cd\u4f5c\u7b26": [29, 39], "\u64cd\u4f5c\u8bbe\u7f6e": 0, "\u652f\u6301": [0, 32, 33, 37, 41], "\u652f\u6301\u4ee5": 18, "\u652f\u6301\u4ee5\u4e0b\u529f\u80fd": 33, "\u652f\u6301\u5173\u7cfb": 33, "\u652f\u6301\u53ef\u53d8\u6df1\u5ea6\u7684\u9884\u53d6\u76f8\u5173\u5b9e\u4f53": 32, "\u652f\u6301\u66f4\u65b0\u4e2d\u7684\u81ea\u5b9a\u4e49\u51fd\u6570": 0, "\u652f\u6301\u7684": 18, "\u652f\u6301\u8bb8\u591a\u6807\u51c6": 33, "\u6539\u8fdb": 0, "\u6539\u8fdb\u5173\u7cfb\u7c7b\u578b\u63d0\u793a": [40, 47], "\u6559\u7a0b": [6, 8, 9, 41, 47], "\u6559\u7a0b\u6765\u6e90": [19, 47], "\u6570\u636e\u5b57\u6bb5": [0, 40, 47], "\u6570\u636e\u5e93": [32, 33, 40, 44, 47], "\u6570\u636e\u5e93\u4e0a\u8fd0\u884c": 2, "\u6570\u636e\u5e93\u4e0a\u8fd0\u884c\u6d4b\u8bd5": 2, "\u6570\u636e\u5e93\u4e2d\u7684\u5b57\u7b26\u4e32\u8868\u793a\u5f62\u5f0f": 30, "\u6570\u636e\u5e93\u4e2d\u8fd0\u884c\u6d4b\u8bd5": 2, "\u6570\u636e\u5e93\u503c": 30, "\u6570\u636e\u5e93\u53ef\u7528\u7684\u7f51\u7edc\u4e3b\u673a": 18, "\u6570\u636e\u5e93\u53ef\u7528\u7684\u7f51\u7edc\u7aef\u53e3": 18, "\u6570\u636e\u5e93\u540e\u7aef": 2, "\u6570\u636e\u5e93\u5b57\u6bb5": [40, 47], "\u6570\u636e\u5e93\u5ba2\u6237\u7aef\u7684\u8fde\u63a5": [43, 44], "\u6570\u636e\u5e93\u65f6\u51fa\u73b0\u7684": 0, "\u6570\u636e\u5e93\u68c0\u7d22\u7684\u5bf9\u8c61\u5c06\u88ab\u4fdd\u5b58\u5230\u540c\u4e00\u6570\u636e\u5e93": 42, "\u6570\u636e\u5e93\u7684\u8fde\u63a5": 0, "\u6570\u636e\u5e93\u8fde\u63a5": 32, "\u6574\u6570\u5b57\u6bb5\u7684": 0, "\u6587\u4ef6\u4e2d": [10, 17, 18], "\u6587\u4ef6\u4e2d\u8282\u7684\u540d\u79f0": 37, "\u6587\u4ef6\u4e2d\u8fd0\u884c\u521d\u59cb\u5316\u5668\u548c\u6700\u7ec8\u5316\u5668": 17, "\u6587\u4ef6\u7684\u8def\u5f84": 18, "\u6587\u6863": [2, 32, 41], "\u65b0\u6bd4\u8d5b": 13, "\u65b0\u9526\u6807\u8d5b": [32, 33], "\u65b9\u6cd5": 0, "\u65b9\u6cd5\u4e2d": [0, 42], "\u65b9\u6cd5\u4e3a": 0, "\u65b9\u6cd5\u4ee5\u652f\u6301\u539f\u59cb": 0, "\u65b9\u6cd5\u652f\u6301\u805a\u5408\u548c\u6570\u636e\u5e93\u51fd\u6570": 39, "\u65b9\u6cd5\u65f6": 39, "\u65b9\u6cd5\u6dfb\u52a0": 0, "\u65b9\u6cd5\u7684\u7c7b": 42, "\u65b9\u6cd5\u91cd\u547d\u540d\u4e3a": 0, "\u65e0\u4e8b\u52a1": 2, "\u65e0\u53c2\u4e0e\u8005": 32, "\u65e0\u6548": 0, "\u65e0\u6cd5\u751f\u6210\u4e3b\u952e": 0, "\u65e0\u8bba\u5b83\u4eec\u662f\u7528\u4f5c": 29, "\u65e0\u8bba\u60a8\u6307\u5b9a\u4e86\u4ec0\u4e48": 2, "\u65e0\u8bba\u60a8\u6b63\u5728\u8fd0\u884c\u54ea\u4e2a\u6d4b\u8bd5\u5957\u4ef6": 2, "\u65e0\u8bba\u60a8\u7684\u6570\u636e\u5e93\u662f\u4ec0\u4e48\u65f6\u533a": 46, "\u65e0\u8bba\u8bbe\u7f6e\u4e86\u4ec0\u4e48": 46, "\u65e0\u9700\u4f7f\u7528\u79c1\u6709": 41, "\u65e5\u5fd7\u5927\u5c0f": 18, "\u65e5\u5fd7\u6a21\u5f0f": 18, "\u65e5\u5fd7\u7684\u884c\u4e3a": 35, "\u65e8\u5728\u89e3\u51b3\u8fd9\u4e9b\u95ee\u9898": 33, "\u65e9\u671f\u521d\u59cb\u5316\u6a21\u578b\u5173\u7cfb": 13, "\u65e9\u671f\u6a21\u578b\u521d\u59cb\u5316": [13, 19, 47], "\u65f6": [0, 46], "\u65f6\u4e22\u5931": 0, "\u65f6\u4f1a\u51fa\u9519": 0, "\u65f6\u4f7f\u7528\u7684\u65f6\u533a": 46, "\u65f6\u51fa\u73b0\u7684": 0, "\u65f6\u533a": [40, 47], "\u65f6\u533a\u652f\u6301": 41, "\u65f6\u533a\u7684\u8bbe\u8ba1\u7075\u611f\u6765\u6e90\u4e8e": 46, "\u65f6\u5bfc\u5165\u8def\u7531\u7684\u4e0d\u6b63\u786e\u62c6\u5206": 0, "\u65f6\u5de5\u4f5c\u4e0d\u6b63\u5e38\u7684\u95ee\u9898": 0, "\u65f6\u7684\u9519\u8bef": 0, "\u65f6\u8bbe\u7f6e": 0, "\u65f6\u8fdb\u884c\u8bbe\u7f6e": 46, "\u65f6\u95f4": 46, "\u6613\u7528\u6027": 2, "\u6613\u7528\u6027\u6539\u8fdb": 41, "\u6620\u5c04\u5230\u5f02\u6b65\u4e16\u754c": 33, "\u662f": [5, 18], "\u662f\u4e00\u4e2a\u5173\u952e\u5b57\u53c2\u6570": 38, "\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\u66ff\u6362\u53c2\u6570": 17, "\u662f\u4e00\u4e2a\u5d4c\u5165\u5f0f\u6570\u636e\u5e93": 18, "\u662f\u4e00\u4e2a\u5e2e\u52a9\u51fd\u6570": [32, 33], "\u662f\u4e00\u4e2a\u5e74\u8f7b\u7684\u9879\u76ee": 33, "\u662f\u4e00\u4e2a\u5f02\u6b65\u7f51\u7edc\u6846\u67b6": 8, "\u662f\u4e00\u4e2a\u6613\u4e8e\u4f7f\u7528\u7684": 33, "\u662f\u4e00\u4e2a\u7279\u6b8a\u8def\u5f84": 18, "\u662f\u4e00\u4e2a\u865a\u62df\u5b57\u6bb5": 38, "\u662f\u4e00\u79cd\u76f8\u5bf9\u8f83\u65b0\u7684\u6280\u672f": 33, "\u662f\u4e00\u9879\u5fd7\u613f\u8005\u5de5\u4f5c": 2, "\u662f\u5426\u4e3a": 0, "\u662f\u63d0\u4f9b\u6570\u636e\u5e93\u67e5\u8be2\u64cd\u4f5c\u7684\u63a5\u53e3": 36, "\u662f\u6a21\u578b\u4e2d\u5b9a\u4e49\u7684\u5b57\u6bb5": 39, "\u662f\u8fc7\u6ee4\u4fee\u9970\u7b26": 39, "\u662f\u9ed8\u8ba4\u7684\u5e94\u7528\u540d\u79f0": 38, "\u663e\u793a\u5386\u53f2": [40, 47], "\u663e\u793a\u5df2\u8fc1\u79fb\u7684\u5934": [40, 47], "\u663e\u793a\u6b64\u6d88\u606f\u5e76\u9000\u51fa": [4, 37], "\u663e\u793a\u7248\u672c\u5e76\u9000\u51fa": 4, "\u663e\u793a\u8fc1\u79fb\u4f4d\u7f6e\u5f53\u524d\u53ef\u7528\u7684\u5934\u90e8": 37, "\u6682\u65f6": 2, "\u66f4\u4e00\u81f4\u5730\u8f6c\u4e49\u6570\u636e\u5e93\u5217": 0, "\u66f4\u591a\u7ec6\u8282\u8bf7\u53c2\u89c1": 18, "\u66f4\u597d\u5730\u5904\u7406\u5b57\u7b26\u4e32\u4e2d\u7684": 0, "\u66f4\u5feb\u7684": 41, "\u66f4\u65b0": 0, "\u66f4\u65b0\u5b9e\u4f8b": 39, "\u66f4\u65b0\u5f00\u53d1": 2, "\u66f4\u65b0\u6a21\u578b\u5e76\u751f\u6210\u8fc1\u79fb\u6587\u4ef6": [40, 47], "\u66f4\u7cdf\u7cd5\u7684\u662f": 33, "\u66ff\u6362\u4e3a": 0, "\u6700\u540e\u4e00\u4e2a\u6bd4\u8d5b": 13, "\u6700\u57fa\u672c\u7684\u5feb\u901f\u6d4b\u8bd5": 2, "\u6700\u591a": 0, "\u6700\u5927\u503c\u9a8c\u8bc1\u5668": 0, "\u6700\u5927\u7684\u53d8\u5316\u5728\u4e8e": 33, "\u6700\u5927\u884c\u957f\u5ea6\u66f4\u6539\u4e3a": 2, "\u6700\u5927\u8fde\u63a5\u6c60\u5927\u5c0f": 18, "\u6700\u597d\u5728\u4e3b\u4ee3\u7801\u4e4b\u5916": [32, 44], "\u6700\u5c0f\u8fde\u63a5\u6c60\u5927\u5c0f": 18, "\u6709\u4e00\u4e2a": 13, "\u6709\u4e00\u4e2a\u4e3b\u8981\u7684\u9650\u5236": 38, "\u6709\u4e00\u4e2a\u9636\u6bb5": 33, "\u6709\u4e24\u4e2a\u65e5\u5fd7\u8bb0\u5f55\u5668": 35, "\u6709\u4e24\u79cd\u65b9\u6cd5\u6765\u7f16\u5199\u81ea\u5b9a\u4e49\u9a8c\u8bc1\u5668": 49, "\u6709\u4e86\u8fd9\u4e2a": 38, "\u6709\u4f55\u7528\u5904": 47, "\u6709\u5173\u66f4\u591a\u4fe1\u606f": [0, 18, 32], "\u6709\u5173\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f": 0, "\u6709\u65f6": [29, 39], "\u6709\u65f6\u9700\u8981\u4ec5\u63d0\u53d6\u67d0\u4e9b\u76f8\u5173\u8bb0\u5f55": 39, "\u670d\u52a1": 14, "\u671f\u671b\u7684\u683c\u5f0f": 0, "\u672a\u4f20\u9012\u5b57\u6bb5\u7684\u95ee\u9898": 0, "\u672a\u5b8c\u5168\u6d4b\u8bd5": 0, "\u672c\u6559\u7a0b\u5173\u4e8e\u65e9\u671f\u521d\u59cb\u5316\u7684\u90e8\u5206\u4ec5\u5728\u60a8\u9700\u8981\u5728\u521d\u59cb\u5316": 13, "\u672c\u6587\u4ef6\u63cf\u8ff0\u4e86\u5982\u4f55\u4f7f\u7528": 39, "\u672c\u6587\u6863\u4ecb\u7ecd\u4e86\u5982\u4f55\u4f7f\u7528": 4, "\u672c\u6587\u6863\u63cf\u8ff0\u4e86\u5982\u4f55\u4f7f\u7528": 37, "\u672c\u6587\u6863\u63cf\u8ff0\u4e86\u5982\u4f55\u8bbf\u95ee\u5e95\u5c42\u8fde\u63a5\u5bf9\u8c61": 5, "\u6765\u4e3a\u5217\u96c6\u8bbe\u7f6e\u590d\u5408\u552f\u4e00\u7d22\u5f15": 38, "\u6765\u4e3a\u5217\u96c6\u8bbe\u7f6e\u590d\u5408\u975e\u552f\u4e00\u7d22\u5f15": 38, "\u6765\u4e3a\u7ed9\u5b9a\u6a21\u578b\u8bbe\u7f6e\u9ed8\u8ba4\u6392\u5e8f": 38, "\u6765\u4ec5\u8fd0\u884c\u7279\u5b9a\u7684\u6d4b\u8bd5": 2, "\u6765\u505a\u5230\u8fd9\u4e00\u70b9": 39, "\u6765\u521b\u5efa": 38, "\u6765\u5237\u65b0\u7279\u5b9a\u5b57\u6bb5": 29, "\u6765\u52a0\u901f\u5173\u952e\u5faa\u73af": 41, "\u6765\u539f\u5b50\u6027\u5730\u66f4\u65b0\u7528\u6237\u4f59\u989d": 29, "\u6765\u5b9a\u4e49\u4e3b\u952e": 38, "\u6765\u6309\u7167\u5e38\u89c4\u65b9\u5f0f\u83b7\u53d6\u6570\u636e": 31, "\u6765\u66f4\u6539": 38, "\u6765\u6784\u5efa\u6a21\u578b\u5bf9\u8c61": 10, "\u6765\u751f\u6210\u66f4\u9ad8\u6548\u7684\u67e5\u8be2": 39, "\u6765\u751f\u6210\u7d22\u5f15\u540d\u79f0": 0, "\u6765\u83b7\u53d6\u5177\u6709\u65f6\u533a\u611f\u77e5\u7684\u65f6\u95f4": 46, "\u6765\u83b7\u53d6\u5bf9\u8c61\u53ca\u5176\u6240\u6709\u76f8\u5173\u9879\u76ee": 0, "\u6765\u83b7\u53d6\u6240\u6709\u5bf9\u8c61": 36, "\u6765\u8986\u76d6\u9ed8\u8ba4\u7684\u7ba1\u7406\u5668": 36, "\u6765\u8bbe\u7f6e\u548c\u62c6\u9664\u6d4b\u8bd5\u6570\u636e\u5e93": 33, "\u6765\u8fc7\u6ee4\u67e5\u8be2": 39, "\u6784\u5efa": 4, "\u6784\u5efa\u57fa\u4e8e\u4e8b\u4ef6\u7684": 8, "\u6784\u5efa\u6587\u6863": 2, "\u6784\u5efa\u67e5\u8be2": 39, "\u6784\u5efa\u7ecf\u5178\u7684": 29, "\u679a\u4e3e\u5b57\u6bb5": [19, 47], "\u67b6\u6784\u6240\u9700\u7684\u8bb0\u5f55\u7c7b\u578b": 13, "\u67b6\u6784\u73b0\u5728\u662f": 13, "\u67e5\u770b\u63cf\u8ff0\u6a21\u578b\u65f6": 0, "\u67e5\u8be2": [0, 18], "\u67e5\u8be2api": [33, 40, 47], "\u67e5\u8be2\u4e0e": 0, "\u67e5\u8be2\u5173\u7cfb\u901a\u5e38\u901a\u8fc7\u8ffd\u52a0\u53cc\u4e0b\u5212\u7ebf": 38, "\u67e5\u8be2\u65f6\u751f\u6210\u7684\u9519\u8bef": 0, "\u67e5\u8be2\u76f8\u5173\u5b9e\u4f53": 32, "\u67e5\u8be2\u96c6\u540e": 39, "\u67e5\u8be2\u96c6\u7684\u4f7f\u7528\u5e94\u660e\u786e\u4e14\u7b80\u6d01": 2, "\u67e5\u8be2\u96c6\u8fd8\u901a\u8fc7": 39, "\u6807\u51c6": 18, "\u6807\u5fd7\u7684\u80fd\u529b": 0, "\u6821\u9a8c": [40, 47], "\u6837\u4f8b": [7, 8, 9, 13, 14, 15, 16, 32, 47], "\u6837\u5f0f": 47, "\u6839\u636e\u6570\u636e\u5e93": 0, "\u683c\u5f0f\u4e0e": 38, "\u683c\u5f0f\u4e3a": 18, "\u683c\u5f0f\u5982\u4e0b": 38, "\u6846\u67b6": [33, 41], "\u68c0\u67e5\u5b57\u6bb5\u7684\u503c\u662f\u5426\u5728\u4f20\u5165\u7684\u5217\u8868\u4e2d": 39, "\u68c0\u67e5\u6784\u5efa\u662f\u5426\u6b63\u5e38": 2, "\u68c0\u67e5\u9519\u8bef": 0, "\u6a21\u5757\u4e2d\u5b9a\u4e49\u53d8\u91cf": 44, "\u6a21\u5757\u6587\u6863": 18, "\u6a21\u5757\u79c1\u6709": 0, "\u6a21\u5757\u8def\u5f84\u4e0d\u80fd\u662f": 14, "\u6a21\u578b": [0, 2, 13, 32, 33, 40, 47], "\u6a21\u578b\u4e2d": 0, "\u6a21\u578b\u4fe1\u53f7": [19, 47], "\u6a21\u578b\u521b\u5efa": [0, 13], "\u6a21\u578b\u521b\u5efa\u5668\u7684\u914d\u7f6e\u9009\u9879": 13, "\u6a21\u578b\u5b9e\u4f8b\u672c\u8eab\u8fd8\u5177\u6709\u8fd9\u4e9b\u65b9\u6cd5": 39, "\u6a21\u578b\u5f00\u59cb": 13, "\u6a21\u578b\u6392\u9664\u6240\u6709\u53ea\u8bfb\u5b57\u6bb5": 0, "\u6a21\u578b\u6587\u6863\u5b57\u7b26\u4e32\u548c\u7d27\u968f\u5b57\u6bb5\u5b9a\u4e49\u7684": 0, "\u6a21\u578b\u65f6\u624d\u9700\u8981": 13, "\u6a21\u578b\u65f6\u68c0\u67e5": 0, "\u6a21\u578b\u672c\u8eab\u6709\u51e0\u4e2a\u65b9\u6cd5\u6765\u5f00\u59cb\u67e5\u8be2": 39, "\u6a21\u578b\u73b0\u5728\u4e0d\u4f1a\u9690\u85cf": 0, "\u6a21\u578b\u73b0\u5728\u5c06\u5177\u6709\u57fa\u672c\u7684\u9a8c\u8bc1\u5143\u7d20": 0, "\u6a21\u578b\u751f\u6210": 13, "\u6a21\u578b\u751f\u6210\u5668": 0, "\u6a21\u578b\u7684": 0, "\u6a21\u578b\u7684\u591a\u5bf9\u591a\u5173\u7cfb": 38, "\u6a21\u578b\u7684\u65e9\u671f\u90e8\u5206\u521d\u59cb\u5316": 0, "\u6a21\u578b\u7684\u6f02\u4eae\u8868\u793a": 32, "\u6a21\u578b\u7c7b": [6, 47], "\u6a21\u578b\u7c7b\u8fd8\u5177\u6709\u4ee5\u4e0b\u65b9\u6cd5\u6765\u521b\u5efa\u5bf9\u8c61": 39, "\u6a21\u578b\u81ea\u52a8\u6784\u5efa": 0, "\u6a21\u578b\u8fdb\u884c\u4ea4\u4e92": 36, "\u6a21\u578b\u90fd\u6709\u4e00\u4e2a\u9ed8\u8ba4\u7684": 36, "\u6b22\u8fce\u60a8\u63d0\u4ea4\u4e00\u4e2a\u65b0\u7684\u8bf7\u6c42": 2, "\u6b63\u5219\u8868\u8fbe\u5f0f\u652f\u6301": 0, "\u6b63\u5219\u8868\u8fbe\u5f0f\u8fdb\u884c\u6bd4\u8f83": 39, "\u6b63\u5982\u6240\u8981\u6c42\u7684\u90a3\u6837": 0, "\u6b63\u786e\u586b\u5145\u4e86\u5fc5\u586b\u5b57\u6bb5\u7684": 0, "\u6b63\u786e\u5904\u7406\u53ef\u7a7a": 0, "\u6b63\u786e\u6027": 2, "\u6b63\u786e\u914d\u5408\u4f7f\u7528": 0, "\u6b64\u5916": [17, 29], "\u6b64\u7248\u672c\u4e0d\u518d\u652f\u6301": 0, "\u6b64\u793a\u4f8b": 5, "\u6bcf\u4e2a": 36, "\u6bcf\u4e2a\u6a21\u578b\u90fd\u5e94\u8be5\u4ece\u57fa\u7840\u6a21\u578b\u6d3e\u751f": 38, "\u6bcf\u4e2a\u76f8\u5173\u6a21\u578b\u7684\u6df1\u5ea6\u5c42\u7ea7\u4ea7\u751f\u4e00\u4e2a\u989d\u5916\u7684\u67e5\u8be2": 39, "\u6bd4\u8d5b\u8bb0\u5f55\u521b\u5efa\u7684\u65e5\u671f\u65f6\u95f4": 13, "\u6ca1\u6709\u8fc7\u6ee4\u53c2\u6570\u7684": 29, "\u6ce8\u5165\u653b\u51fb\u7684\u53d1\u751f\u53d8\u5f97\u5bb9\u6613": 33, "\u6ce8\u5165\u7684\u514d\u75ab": 33, "\u6ce8\u5165\u95ee\u9898": 0, "\u6ce8\u610f": [0, 13], "\u6ce8\u610f\u4e09\u4e2a": 18, "\u6ce8\u610f\u76ee\u524d\u53ea\u652f\u6301": 39, "\u6ce8\u610f\u7c7b\u6587\u6863\u5b57\u7b26\u4e32\u548c\u6587\u6863\u6ce8\u91ca": 13, "\u6ce8\u91ca\u73b0\u5728\u88ab\u7528\u4f5c\u6587\u6863\u5b57\u7b26\u4e32\u548c": 0, "\u6d4b\u8bd5": [2, 32], "\u6d4b\u8bd5\u4ee3\u7801": 2, "\u6d4b\u8bd5\u4f9d\u8d56": 2, "\u6d4b\u8bd5\u6240\u6709\u5185\u5bb9": 2, "\u6d4b\u8bd5\u6846\u67b6\u4f7f\u7528\u73b0\u6709\u7684": 33, "\u6d4b\u8bd5\u7684\u4e0d\u540c\u79cd\u7c7b": 47, "\u6d4b\u8bd5\u8fd0\u884c\u5668": [0, 6, 47], "\u6d4b\u8bd5\u8fd0\u884c\u5668\u90e8\u5206": 17, "\u6d88\u606f": 0, "\u6d89\u53ca": 41, "\u6df7\u5408\u7c7b\u4e0d\u5de5\u4f5c": 0, "\u6dfb\u52a0": 0, "\u6dfb\u52a0\u4e86": 0, "\u6dfb\u52a0\u4e86\u4ece": 0, "\u6dfb\u52a0\u4e86\u57fa\u4e8e": 0, "\u6dfb\u52a0\u4e86\u5bf9": 0, "\u6dfb\u52a0\u4e86\u65b0\u7684\u7edf\u4e00\u4e14\u5f3a\u5927\u7684\u8fde\u63a5\u7ba1\u7406\u63a5\u53e3": 0, "\u6dfb\u52a0\u4e8c\u8fdb\u5236\u538b\u7f29\u652f\u6301": 0, "\u6dfb\u52a0\u5173\u7cfb": 38, "\u6dfb\u52a0\u51b2\u7a81\u4ee5\u66f4\u65b0\u6279\u91cf\u521b\u5efa": 0, "\u6dfb\u52a0\u5230": 0, "\u6dfb\u52a0\u5230\u60a8\u7684": 37, "\u6dfb\u52a0\u5230\u63a5\u53d7\u7a7a\u503c\u7684\u67b6\u6784\u4e2d": 0, "\u6dfb\u52a0\u53c2\u6570": 0, "\u6dfb\u52a0\u53cd\u5e8f\u5217\u5316\u652f\u6301": 41, "\u6dfb\u52a0\u5bf9\u67e5\u8be2\u96c6\u5207\u7247\u7684\u652f\u6301": 0, "\u6dfb\u52a0\u624b\u52a8": 0, "\u6dfb\u52a0\u65e5\u671f\u90e8\u5206\u63d0\u53d6\u8fc7\u6ee4": 0, "\u6dfb\u52a0\u65f6\u533a\u652f\u6301": 0, "\u6dfb\u52a0\u66f4\u591a": 0, "\u6dfb\u52a0\u6a21\u578b\u4fe1\u53f7\u652f\u6301": 0, "\u6dfb\u52a0\u6a21\u578b\u5b57\u6bb5\u9a8c\u8bc1\u5668": 0, "\u6dfb\u52a0\u6a21\u578b\u65b9\u6cd5": 0, "\u6dfb\u52a0\u6a21\u578b\u8ba2\u9605\u67e5\u627e": 0, "\u6dfb\u52a0\u7f3a\u5931\u7684": 0, "\u6dfb\u52a0\u8bed\u6cd5\u9ad8\u4eae": 35, "\u6dfb\u52a0\u8f6c\u6362\u5668": 0, "\u6dfb\u52a0\u989d\u5916\u5b57\u6bb5": 38, "\u6e05\u7406\u7684\u91cd\u8981\u6027": [32, 40, 47], "\u6e90\u4ee3\u7801\u548c\u95ee\u9898\u8ffd\u8e2a\u5668\u53ef\u5728": 33, "\u7136\u540e": 4, "\u7136\u540e\u4f60\u53ef\u4ee5\u4f7f\u7528\u5e38\u89c1\u7684\u51fd\u6570": 38, "\u7136\u540e\u53d1\u73b0\u5e76\u521d\u59cb\u5316\u6a21\u578b": [32, 43, 44], "\u7136\u540e\u53ea\u9700\u8fd0\u884c": 4, "\u7136\u540e\u53ef\u4ee5\u8ffd\u52a0\u4e00\u4e2a\u666e\u901a\u67e5\u8be2\u5c5e\u6027": 38, "\u7136\u540e\u5b9a\u4e49": 17, "\u7136\u540e\u5c06\u4e0a\u9762\u7684\u683c\u5f0f\u5316\u7a0b\u5e8f\u66ff\u6362\u4e3a\u4ee5\u4e0b\u683c\u5f0f\u5316\u7a0b\u5e8f": 35, "\u7136\u540e\u662f\u5916\u90e8\u5bf9\u8c61\u7684\u5b57\u6bb5\u6765\u5b8c\u6210": 38, "\u7136\u800c": [13, 33, 38], "\u719f\u6089\u7684": 47, "\u7248\u672c": 0, "\u7248\u672c\u4e3a": 2, "\u7279\u522b\u5730": 39, "\u7279\u522b\u611f\u8c22": 47, "\u7279\u5b9a\u5b57\u6bb5": [11, 12], "\u7279\u5b9a\u7d22\u5f15": [11, 12], "\u7279\u6b8a": 29, "\u73af\u5883\u53d8\u91cf": 17, "\u73af\u5883\u53d8\u91cf\u6216\u9ed8\u8ba4\u503c": 18, "\u73af\u5883\u53d8\u91cf\u8bbe\u7f6e\u4e3a": 0, "\u73b0\u5728\u4e0d\u662f\u6839\u5bf9\u8c61": 13, "\u73b0\u5728\u4e0d\u8fd4\u56de\u4efb\u4f55\u4e1c\u897f": 0, "\u73b0\u5728\u4f60\u7684\u6570\u636e\u5df2\u7ecf\u8fc1\u79fb\u5230\u6700\u65b0\u7248\u672c": 37, "\u73b0\u5728\u4f60\u7684\u6570\u636e\u5e93\u56de\u6eda\u5230\u6307\u5b9a\u7248\u672c": 37, "\u73b0\u5728\u5177\u6709\u66f4\u597d\u7684\u4ee3\u7801\u5b8c\u6210\u529f\u80fd": 0, "\u73b0\u5728\u518d\u8bd5\u4e00\u6b21": 13, "\u73b0\u5728\u5305\u542b\u6ce8\u91ca": 0, "\u73b0\u5728\u53ea\u6709": 0, "\u73b0\u5728\u53ef\u4ee5\u5728": 0, "\u73b0\u5728\u5728\u6e05\u9664\u8868\u540d\u65f6\u53ef\u4ee5\u6b63\u786e\u5f15\u7528\u8868\u540d": 0, "\u73b0\u5728\u5728\u9ed8\u8ba4\u4f5c\u7528\u57df\u4e2d\u8bc4\u4f30\u6ce8\u89e3": 0, "\u73b0\u5728\u5b9a\u4e49\u4e86\u56db\u79cd\u4fe1\u53f7": 45, "\u73b0\u5728\u6211\u4eec\u6709\u4e86\u4e00\u4e2a": 13, "\u73b0\u5728\u63cf\u8ff0\u5916\u952e": 0, "\u73b0\u5728\u63d0\u4f9b\u4e24\u4e2a\u989d\u5916\u7684\u8f85\u52a9\u51fd\u6570": 0, "\u73b0\u5728\u641c\u7d22\u8bb0\u5f55": 33, "\u73b0\u5728\u652f\u6301": 0, "\u73b0\u5728\u652f\u6301\u5e26\u6709": 0, "\u73b0\u5728\u6a21\u578b\u5c06\u5efa\u7acb\u5173\u7cfb": 0, "\u73b0\u5728\u81f3\u5c11\u9700\u8981": 0, "\u73b0\u5728\u8d1f\u6570\u4e0e": 0, "\u73b0\u6709\u7684\u8fde\u63a5\u7ba1\u7406\u63a5\u53e3\u548c\u76f8\u5173\u7684\u516c\u5171": 0, "\u751f\u4ea7": 32, "\u751f\u547d\u5468\u671f\u652f\u6301": 0, "\u751f\u6210": 13, "\u751f\u6210\u65f6": 0, "\u751f\u6210\u67b6\u6784": 37, "\u751f\u6210\u67b6\u6784\u65f6\u8fd8\u6709\u4e00\u4e2a\u9ed8\u8ba4\u9009\u9879": 43, "\u751f\u6210\u6a21\u5f0f": [32, 33, 44], "\u751f\u6210\u6a21\u5f0f\u5e76\u751f\u6210\u5e94\u7528\u8fc1\u79fb\u4f4d\u7f6e": 37, "\u751f\u6210\u7684": 38, "\u751f\u6210\u8868\u65f6\u4f7f": 0, "\u751f\u6210\u8fc1\u79fb\u53d8\u66f4\u6587\u4ef6": 37, "\u751f\u6210\u975e\u5e38\u8be6\u7ec6\u7684\u8f93\u51fa": 2, "\u7528\u4e8e": 37, "\u7528\u4e8e\u4f7f\u7528": 8, "\u7528\u4e8e\u81ea\u7b7e\u540d\u8bc1\u4e66": 18, "\u7528\u4e8e\u8bbf\u95ee\u6570\u636e\u5e93\u8fde\u63a5": 0, "\u7528\u4e8e\u8fc7\u6ee4": 29, "\u7528\u4e8e\u8fd0\u884c\u7b80\u5355\u7684\u5f02\u6b65": [32, 33], "\u7528\u4e8e\u8fde\u63a5\u7684\u7528\u6237\u540d": 18, "\u7528\u4e8e\u9a8c\u8bc1\u7ed9\u5b9a\u503c\u662f\u5426\u4e3a\u5076\u6570": 49, "\u7528\u6237": 2, "\u7528\u6237\u540d\u7684\u5bc6\u7801": 18, "\u7528\u6cd5": [2, 6, 40, 47], "\u7531\u4e8e": [10, 38], "\u7531\u4e8e\u5e38\u5e38\u7f3a\u5c11": 32, "\u7531\u4e8e\u6bcf\u4e2a\u6570\u636e\u5e93\u5177\u6709\u4e0d\u540c\u7684\u529f\u80fd\u96c6": 18, "\u7531\u4e8e\u8fd9\u4e00\u4ef7\u503c\u89c2\u56e0\u4eba\u800c\u5f02": 2, "\u7531\u5e94\u7528\u540d\u79f0\u548c\u6a21\u578b\u540d\u79f0\u7ec4\u6210": 38, "\u754c\u9762": 47, "\u7684": [0, 13, 34, 38, 49], "\u7684\u4e00\u4e2a\u547d\u4ee4\u884c\u5de5\u5177": 4, "\u7684\u4e00\u4e2a\u793a\u4f8b": [20, 22, 23, 25, 26, 27], "\u7684\u4e00\u4e2a\u91cd\u8981\u90e8\u5206\u662f\u6211\u4eec\u5e0c\u671b\u63d0\u4f9b\u4e00\u4e2a\u7b80\u5355\u7684\u63a5\u53e3": 2, "\u7684\u4e00\u822c\u89c4\u5219\u662f": 39, "\u7684\u4e00\u90e8\u5206": 0, "\u7684\u4e3b\u8981\u5b9e\u4f53\u662f": 32, "\u7684\u4e3b\u952e": 38, "\u7684\u4e8b\u4ef6": [29, 39], "\u7684\u4ea4\u4e92\u5f0f": 4, "\u7684\u5165\u53e3\u70b9": 5, "\u7684\u521d\u6b65\u652f\u6301": 0, "\u7684\u529f\u80fd": 0, "\u7684\u53c2\u6570": 0, "\u7684\u53cd\u5411\u67e5\u627e\u5de5\u4f5c\u65b9\u5f0f\u5b8c\u5168\u76f8\u540c": 38, "\u7684\u53ef\u7a7a\u5b57\u6bb5\u672a\u6807\u8bb0\u4e3a\u53ef\u9009": 0, "\u7684\u56e2\u961f\u7684\u6240\u6709\u9526\u6807\u8d5b": 39, "\u7684\u5904\u7406\u65b9\u5f0f": 33, "\u7684\u5b50\u7c7b": 30, "\u7684\u5b57\u5178\u5217\u8868": 39, "\u7684\u5bf9\u8c61": [36, 39], "\u7684\u5c5e\u6027": 0, "\u7684\u5de5\u4f5c\u65b9\u5f0f\u7c7b\u4f3c\u4e8e": 38, "\u7684\u5f00\u53d1\u8005\u7684\u8fc1\u79fb": 33, "\u7684\u60c5\u51b5\u4e0b": 30, "\u7684\u6240\u6709\u56e2\u961f": 39, "\u7684\u652f\u6301": 0, "\u7684\u66f4\u65b0\u793a\u4f8b": 38, "\u7684\u67e5\u8be2\u90fd\u4f1a\u9075\u5faa\u81ea\u5b9a\u4e49\u7ba1\u7406\u5668\u7684\u884c\u4e3a": 36, "\u7684\u683c\u5f0f\u9519\u8bef\u7684": 0, "\u7684\u6a21\u578b": [32, 33, 44], "\u7684\u6d4b\u8bd5\u7528\u4f8b\u9519\u8bef": 0, "\u7684\u7528\u6cd5": [40, 47], "\u7684\u793a\u4f8b": [30, 34], "\u7684\u7b2c\u4e00\u6b21\u5c1d\u8bd5": 33, "\u7684\u7c7b\u578b\u63d0\u793a": 0, "\u7684\u7ed3\u5408": 9, "\u7684\u80fd\u529b": 29, "\u7684\u884c\u4e3a\u7b26\u5408\u9884\u671f": 41, "\u7684\u8b66\u544a": 0, "\u7684\u8bb0\u5f55\u5668\u800c\u4e0d\u662f\u6839\u8bb0\u5f55\u5668": 0, "\u7684\u8bbe\u8ba1\u65e8\u5728\u529f\u80fd\u6027\u4e0e\u719f\u6089\u6027\u517c\u5907": 33, "\u7684\u8bbe\u8ba1\u8003\u8651\u4e86\u5173\u7cfb": 33, "\u7684\u8bed\u6cd5\u9ad8\u4eae\u683c\u5f0f\u5316\u65e5\u5fd7\u8bb0\u5f55": 35, "\u7684\u8d1f\u503c": 0, "\u7684\u8fde\u63a5\u6d4b\u8bd5": 2, "\u7684\u9009\u9879": 38, "\u7684\u901f\u5ea6\u76f8\u5bf9\u8f83\u6162": 2, "\u7684\u914d\u7f6e\u4e2d\u6216\u5728": 42, "\u7684\u9519\u8bef\u5bfc\u5165": 0, "\u7684\u95ee\u9898": 0, "\u7684\u9ed8\u8ba4\u5b89\u88c5\u73b0\u5728\u4e0d\u5305\u542b\u4efb\u4f55": 0, "\u76ee\u524d\u6211\u4eec\u53ea\u652f\u6301\u4e3a\u5e8f\u5217\u5316\u751f\u6210": 13, "\u76ee\u524d\u6211\u4eec\u53ea\u652f\u6301\u5e8f\u5217\u5316": 0, "\u76ee\u524d\u652f\u6301\u4ee5\u4e0b": 33, "\u76ee\u524d\u652f\u6301\u4ee5\u4e0b\u6570\u636e\u5e93": 18, "\u76ee\u524d\u8fd0\u884c\u6d4b\u8bd5\u7684\u6700\u4f73\u65b9\u6cd5\u662f\u4f7f\u7528": 2, "\u76ee\u6807": 2, "\u76f8\u5173\u7684\u5355\u5143\u6d4b\u8bd5\u9519\u8bef": 0, "\u76f8\u53cd": 38, "\u76f8\u540c\u7684\u6d4b\u8bd5": 2, "\u76f8\u6bd4": 33, "\u770b\u770b\u5b83\u4eec\u7684\u6837\u5b50": 13, "\u77ed\u671f\u8ba1\u5212": 47, "\u786e\u4fdd": [0, 2], "\u786e\u4fdd\u5b89\u5168\u5730\u7ba1\u7406\u60a8\u7684\u6570\u636e": 33, "\u786e\u4fdd\u5b89\u88c5\u5f00\u53d1": 2, "\u786e\u4fdd\u8bbe\u7f6e\u4e86\u4ee5\u4e0b\u5185\u5bb9": 10, "\u786e\u5b9a\u4ece\u6570\u636e\u5e93\u4e2d\u9009\u62e9": 46, "\u793a\u4f8b\u4e2d\u7684\u5355\u5143\u6d4b\u8bd5\u9519\u8bef": 0, "\u793a\u4f8b\u4ee3\u7801": 2, "\u793a\u4f8b\u6d4b\u8bd5\u65e0\u6cd5\u6b63\u5e38\u5de5\u4f5c": 0, "\u793a\u4f8b\u6e90\u4ee3\u7801": 13, "\u79d2": 18, "\u79fb\u81f3": 0, "\u79fb\u9664": 0, "\u79fb\u9664\u4e86\u751f\u6210\u7684": 0, "\u7a0d\u540e\u7684\u6559\u7a0b\u4e2d\u6211\u4eec\u5c06\u5c55\u793a\u76f8\u5173\u9009\u9879": 13, "\u7b2c\u4e09": 13, "\u7b49": 31, "\u7b49\u5f85\u7684\u8fd4\u56de\u503c\u66f4\u52a0\u4e00\u81f4": 0, "\u7b49\u7b49": [2, 38], "\u7b56\u7565\u6784\u5efa\u5668": 41, "\u7b80\u5316\u6a21\u578b\u548c\u7ba1\u7406\u547d\u4ee4\u7684\u68c0\u67e5": 41, "\u7b80\u5355\u6837\u4f8b": [19, 47], "\u7c7b": 0, "\u7c7b\u4e0d\u662f\u5fc5\u9700\u7684": 38, "\u7c7b\u4e2d\u5b9a\u4e49\u7684\u7d22\u5f15\u672a\u5728\u5176\u6a21\u677f\u4e2d\u4f7f\u7528": 0, "\u7c7b\u4e2d\u5b9a\u4e49\u7d22\u5f15": 34, "\u7c7b\u4f3c\u4e8e": 29, "\u7c7b\u578b": 0, "\u7c7b\u5bf9\u8c61\u7684\u5c5e\u6027": 30, "\u7c7b\u65f6\u5e94\u6267\u884c": 0, "\u7c7b\u662f\u4ee5\u5355\u4f8b\u6a21\u5f0f\u5b9e\u73b0\u7684": 5, "\u7c7b\u7684\u5355\u4f8b\u5b9e\u4f8b": 5, "\u7c7b\u7684\u56de\u5f52\u95ee\u9898": 0, "\u7c7b\u914d\u7f6e\u6a21\u578b\u521b\u5efa\u5668": 13, "\u7c98\u9644": 42, "\u7cfb\u5217\u6dfb\u52a0": 0, "\u7d22\u5f15": [6, 40, 47], "\u7ed3\u5408\u4ee5\u4e0a\u4efb\u610f\u7ec4\u5408\u4ee5\u7b80\u5355\u5730\u7f16\u5199\u590d\u6742\u7684\u591a\u5c42\u8fc7\u6ee4\u5668": 29, "\u7ed3\u679c": 0, "\u7ee7\u627f": [40, 47], "\u7efc\u5408": 33, "\u7eff\u8272": [6, 47], "\u7f16\u7801": 18, "\u7f16\u7801\u5bc6\u7801\u7684\u95ee\u9898": 0, "\u7f16\u7801\u6307\u5357": 47, "\u7f16\u8bd1\u5668": 32, "\u8003\u8651\u4f7f\u7528": 41, "\u800c": [35, 46], "\u800c\u4e0d\u652f\u6301\u53cd\u5e8f\u5217\u5316": 0, "\u800c\u4e0d\u662f": [0, 2], "\u800c\u4e0d\u662f\u4ece": 0, "\u800c\u4e0d\u662f\u4f7f\u7528\u672c\u5730\u65f6\u95f4": 46, "\u800c\u4e0d\u662f\u5728\u5e94\u7528\u7a0b\u5e8f\u547d\u540d\u7a7a\u95f4\u4e2d": 0, "\u800c\u4e0d\u662f\u751f\u6210\u7684\u540d\u79f0": 38, "\u800c\u4e0d\u662f\u76f4\u63a5\u8fde\u63a5\u5355\u8bcd": 2, "\u800c\u4e0d\u662f\u81ea\u52a8\u4e3a\u60a8\u67e5\u627e\u6a21\u578b": 44, "\u800c\u4e0d\u662f\u81ea\u52a8\u67e5\u627e\u6a21\u578b": 38, "\u800c\u4e14": 46, "\u800c\u4e14\u9519\u8bef\u4e5f\u66f4\u5c11": 2, "\u800c\u4e14\u9690\u85cf\u9519\u8bef\u7684\u5730\u65b9\u4e5f\u66f4\u5c11": 2, "\u800c\u65e0\u9700\u5c06\u5b83\u4eec\u4ece\u6570\u636e\u5e93\u63d0\u53d6\u5230": 29, "\u800c\u662f\u5728\u5904\u7406\u5173\u7cfb\u6570\u636e": 33, "\u800c\u662f\u76f4\u63a5\u8f93\u51fa": 2, "\u804a\u5929": 47, "\u805a\u5408": [40, 47], "\u805a\u5408\u5e94\u7528\u4e8e\u6574\u4e2a\u5217": 31, "\u80fd\u591f\u5728\u8fc1\u79fb\u4e2d\u8f7b\u677e\u8fd0\u884c\u4efb\u610f\u4ee3\u7801": 41, "\u80fd\u591f\u5b9a\u4e49\u7ba1\u7406\u547d\u4ee4": 41, "\u80fd\u591f\u83b7\u53d6\u8fc1\u79fb\u65f6\u7684\u786e\u5207\u6a21\u578b": 41, "\u811a\u672c": [32, 33], "\u81ea\u52a8\u524d\u5411\u8fc1\u79fb\u6784\u5efa": 41, "\u81ea\u52a8\u63d0\u793a": 38, "\u81ea\u52a8\u683c\u5f0f\u5316\u4ee3\u7801": 2, "\u81ea\u5b9a\u4e49\u51fd\u6570": [40, 47], "\u81ea\u5b9a\u4e49\u6821\u9a8c\u5668": [40, 47], "\u82f1\u6587": [0, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 23, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 49], "\u83b7\u53d6\u4e0e\u5b9e\u4f8b\u76f8\u5173\u7684\u5bf9\u8c61": 39, "\u83b7\u53d6\u5185\u5bb9": 13, "\u83b7\u53d6\u53c2\u4e0e\u4e8b\u4ef6": 39, "\u83b7\u53d6\u53c2\u4e0e\u9526\u6807\u8d5b\u7684\u540d\u79f0\u4e2d\u5305\u542b": 39, "\u83b7\u53d6\u5916\u952e\u53ef\u4ee5\u901a\u8fc7\u5f02\u6b65\u548c\u540c\u6b65\u63a5\u53e3\u8fdb\u884c": 38, "\u83b7\u53d6\u5916\u952e\u5bf9\u8c61": [40, 47], "\u83b7\u53d6\u6240\u6709\u9526\u6807\u8d5b\u540d\u79f0\u4e3a": 39, "\u83b7\u53d6\u7684\u591a\u5bf9\u591a\u548c\u53cd\u5411\u5916\u952e\u5173\u7cfb\u7684\u7ed3\u679c\u5b58\u50a8\u5728\u7c7b\u4f3c\u5217\u8868\u7684\u5bb9\u5668\u4e2d": 39, "\u83b7\u53d6\u7ed9\u5b9a": 39, "\u83b7\u5f97": 33, "\u867d\u7136\u6211\u4eec\u5728\u53ef\u80fd\u7684\u60c5\u51b5\u4e0b\u8fdb\u884c\u4e86\u4eff\u771f": 18, "\u884c\u4e3a": 0, "\u8868\u793a": 29, "\u8868\u793a\u4f7f\u7528\u5185\u5b58\u6570\u636e\u5e93": 18, "\u8868\u793a\u5728\u4e0d\u77e5\u9053\u4e3b\u952e\u7684\u60c5\u51b5\u4e0b\u65e0\u6cd5\u8fdb\u884c\u66f4\u65b0": 0, "\u8868\u793a\u6bcf\u6b21\u4ec5\u8fd0\u884c\u4e00\u4e2a\u6d4b\u8bd5": 2, "\u8868\u793a\u8fd9\u662f\u4e00\u4e2a\u62bd\u8c61\u7c7b": 38, "\u8868\u793a\u94a6\u4f69": 33, "\u8868\u8fbe\u5f0f": [0, 40, 47], "\u8868\u8fbe\u5f0f\u4e0e": 0, "\u8868\u8fbe\u5f0f\u4fdd\u5b58\u548c\u4f7f\u7528": 0, "\u88ab\u5305\u542b\u4e3a\u67b6\u6784\u4e2d\u7684\u63cf\u8ff0": 13, "\u88ab\u6dfb\u52a0": 13, "\u88ab\u79fb\u9664": 13, "\u88ab\u8bc1\u660e\u53ef\u4ee5\u63d0\u9ad8\u6027\u80fd": 32, "\u8981\u4ece\u4e2d\u521b\u5efa": 13, "\u8981\u4f20\u9012\u81ea\u5b9a\u4e49": 18, "\u8981\u4f7f": 17, "\u8981\u4f7f\u7528\u7684": 18, "\u8981\u4f7f\u7528\u7684\u6570\u636e\u5e93": 18, "\u8981\u4fdd\u7559\u5b83": 0, "\u8981\u521b\u5efa\u90e8\u5206\u6a21\u578b": 0, "\u8981\u5411": 38, "\u8981\u5bf9\u503c\u5e94\u7528\u51fd\u6570\u5e76\u83b7\u53d6\u5728\u6570\u636e\u5e93\u7aef\u8ba1\u7b97\u7684\u805a\u5408": 31, "\u8981\u5e8f\u5217\u5316\u4e00\u4e2a\u5bf9\u8c61": 13, "\u8981\u5f00\u59cb\u4f7f\u7528\u6a21\u578b": 38, "\u8981\u67e5\u627e\u540d\u79f0\u4e3a": 29, "\u8981\u83b7\u53d6\u53cd\u5411\u5916\u952e": 38, "\u8981\u8ba9": 0, "\u89c1": 24, "\u89e3\u6790": 0, "\u89e3\u6790\u5668\u65e0\u6cd5\u5904\u7406\u590d\u6742\u5bf9\u8c61": 18, "\u89e3\u6790\u591a\u5bf9\u591a\u5b57\u6bb5\u53ef\u4ee5\u901a\u8fc7\u5f02\u6b65\u548c\u540c\u6b65\u63a5\u53e3\u8fdb\u884c": 38, "\u89e3\u91ca\u5668\u53ef\u80fd\u4ecd\u4f1a\u7b49\u5f85\u8fd9\u4e9b\u8fde\u63a5\u7684\u5b8c\u6210": 44, "\u8ba1\u7b97\u4e8b\u4ef6\u6570\u91cf": 13, "\u8ba1\u7b97\u540d\u79f0\u7684\u957f\u5ea6": 13, "\u8ba1\u7b97\u5b57\u6bb5": [19, 47], "\u8ba1\u7b97\u5b57\u6bb5\u9700\u8981\u624b\u52a8\u6307\u5b9a\u8fd4\u56de\u7c7b\u578b": 13, "\u8ba4\u4e3a\u60a8\u6b63\u5728\u91cd\u547d\u540d\u5217": 37, "\u8ba9": 41, "\u8ba9\u6211\u4eec\u4ece\u4e00\u4e2a\u57fa\u672c\u7684": 13, "\u8ba9\u6211\u4eec\u521b\u5efa\u5e76\u5e8f\u5217\u5316\u5bf9\u8c61": 13, "\u8ba9\u6211\u4eec\u6765\u770b\u4e00\u4e9b\u793a\u4f8b": 38, "\u8ba9\u6211\u4eec\u6dfb\u52a0\u4e00\u4e9b\u8ba1\u7b97\u6570\u636e\u7684\u65b9\u6cd5": 13, "\u8ba9\u6211\u4eec\u8be6\u7ec6\u770b\u770b\u6211\u4eec\u5728\u8fd9\u91cc\u5b8c\u6210\u4e86\u4ec0\u4e48": 38, "\u8bb0\u5f55\u5668\u91cd\u547d\u540d\u4e3a": 0, "\u8bb0\u5f55\u6267\u884c\u67e5\u8be2\u7684\u4fe1\u606f": 35, "\u8bb0\u5f55\u8c03\u8bd5\u8f93\u51fa": 2, "\u8bb0\u5f55\u8fd0\u884c\u65f6\u7684\u4fe1\u606f": 35, "\u8bb8\u591a\u5f00\u53d1\u8005\u5c1d\u8bd5\u5c06\u540c\u6b65": 33, "\u8bbe\u7f6e\u4e3a": [18, 38, 46], "\u8bbe\u7f6e\u4e3a\u4e0e\u5173\u7cfb\u5b57\u6bb5\u7c7b\u578b\u76f8\u540c": 0, "\u8bbe\u7f6e\u4f7f\u7528\u7684\u5b57\u7b26\u96c6": 18, "\u8bbe\u7f6e\u5bc6\u7801": 2, "\u8bbe\u7f6e\u6b64\u9879\u4ee5\u751f\u6210\u5f53\u524d\u6a21\u578b\u521b\u5efa\u7684\u8868\u7684\u6ce8\u91ca\u4fe1\u606f": 38, "\u8bbe\u7f6e\u6b64\u9879\u4ee5\u914d\u7f6e\u624b\u52a8\u8868\u540d\u79f0": 38, "\u8bbe\u7f6e\u6b64\u9879\u4ee5\u914d\u7f6e\u8868\u6240\u5728\u7684\u6a21\u5f0f\u540d\u79f0": 38, "\u8bbe\u8ba1\u4e3a\u53ef\u7528\u4e8e\u73b0\u6709\u9879\u76ee": 33, "\u8bbf\u95ee": 38, "\u8bbf\u95ee\u6240\u6709\u8fde\u63a5\u7ba1\u7406": 5, "\u8bc1\u4e66": 18, "\u8bc4\u4f30\u751f\u6210\u7684\u67b6\u6784": 13, "\u8be5\u4e3b\u952e\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e2a\u4fdd\u7559\u5b57\u6bb5": 38, "\u8be5\u4e8b\u4ef6\u53d1\u751f\u7684\u6bd4\u8d5b": 13, "\u8be5\u51fd\u6570\u5728\u542f\u52a8\u65f6\u8bbe\u7f6e": [7, 8, 14, 15, 16], "\u8be5\u5b57\u6bb5\u662f\u88ab\u6307\u5b9a\u4e3a\u4e3b\u952e\u7684\u5b57\u6bb5\u7684\u522b\u540d": 38, "\u8be5\u5bf9\u8c61\u662f\u4f5c\u4e3a\u4f20\u9012\u7ed9": 5, "\u8be5\u5c5e\u6027\u73b0\u5728\u5c06\u5305\u542b\u6ce8\u91ca\u7684\u6570\u636e": 31, "\u8be5\u65b9\u6cd5\u5c06\u5728\u5185\u5b58\u4e2d\u521b\u5efa\u4e00\u4e2a\u514b\u9686\u5b9e\u4f8b": 0, "\u8be5\u65b9\u6cd5\u73b0\u5728\u88ab\u6807\u8bb0\u4e3a": 0, "\u8be5\u67e5\u8be2\u5c06\u83b7\u53d6\u6240\u6709": 39, "\u8be5\u67e5\u8be2\u5c06\u83b7\u53d6\u6240\u6709\u4e8b\u4ef6\u6570\u91cf\u4e3a": 39, "\u8be5\u793a\u4f8b\u4ec5\u9002\u7528\u4e8e": 31, "\u8be6\u60c5\u89c1": 18, "\u8be6\u60c5\u8bf7\u53c2\u9605": 0, "\u8bed\u53e5": 18, "\u8bed\u53e5\u4e2d\u6dfb\u52a0": 0, "\u8bed\u6cd5": 37, "\u8bf7\u4e0d\u8981\u8fd9\u6837\u505a": 18, "\u8bf7\u52a1\u5fc5\u521b\u5efa\u4e00\u4e2a\u62c9\u53d6\u8bf7\u6c42\u5e76\u6807\u8bb0\u4e3a": 2, "\u8bf7\u53c2\u89c1": [0, 13, 18, 33], "\u8bf7\u53c2\u9605": [5, 13], "\u8bf7\u53c2\u9605\u4e0b\u9762\u7684": 17, "\u8bf7\u5728\u5ba2\u6237\u7aef\u73af\u5883\u4e2d\u8bbe\u7f6e": 18, "\u8bf7\u5c3d\u91cf\u63d0\u4f9b\u7c7b\u578b\u6ce8\u89e3": 2, "\u8bf7\u6267\u884c": 0, "\u8bf7\u6539\u4e3a\u6267\u884c": 0, "\u8bf7\u67e5\u770b": [2, 7, 8, 9, 13, 14, 15, 16, 32, 39], "\u8bf7\u67e5\u770b\u5b98\u65b9": 18, "\u8bf7\u67e5\u770b\u65b9\u6cd5": 32, "\u8bf7\u67e5\u770b\u6b64": 0, "\u8bf7\u67e5\u770b\u95ee\u9898": [2, 33], "\u8bf7\u68c0\u67e5\u662f\u5426\u5df2\u6709\u76f8\u5173\u95ee\u9898\u6216\u62c9\u53d6\u8bf7\u6c42\u5728\u5904\u7406\u60a8\u7684\u95ee\u9898": 2, "\u8bf7\u6ce8\u610f": [13, 14, 39], "\u8bf7\u6ce8\u610f\u8fd9": 0, "\u8bf7\u786e\u4fdd": 30, "\u8bf7\u786e\u4fdd\u5df2\u5b89\u88c5\u76f8\u5e94\u7684": 18, "\u8bf7\u786e\u4fdd\u67e5\u770b": 39, "\u8bf7\u786e\u4fdd\u8c03\u7528": 44, "\u8bf7\u8bb0\u4f4f\u76ee\u6807": 2, "\u8bfb\u53d6\u5b9e\u9645\u503c": 38, "\u8c03\u7528\u591a\u6b21\u65f6\u7684\u9519\u8bef": 0, "\u8c03\u7528\u7684\u4e00\u90e8\u5206\u5b9a\u4e49\u7684\u6570\u636e\u5e93\u914d\u7f6e\u4e2d\u7684\u522b\u540d": 5, "\u8d21\u732e\u5217\u8868": 47, "\u8d21\u732e\u6307\u5357": 47, "\u8de8\u6570\u636e\u5e93\u652f\u6301": 41, "\u8def\u7531": [19, 40, 47], "\u8def\u7ebf\u56fe": 47, "\u8df3\u8fc7\u6b64\u6d4b\u8bd5": 17, "\u8f85\u52a9\u51fd\u6570\u9884\u5148\u83b7\u53d6\u5173\u7cfb\u6570\u636e": 13, "\u8fc1\u79fb": [40, 41, 47], "\u8fc1\u79fb\u5b58\u50a8\u4f4d\u7f6e": 37, "\u8fc1\u79fb\u6587\u4ef6\u540d\u7684\u683c\u5f0f\u4e3a": 37, "\u8fc7\u6ee4": [19, 40, 47], "\u8fc7\u6ee4\u5668": [0, 29], "\u8fc7\u6ee4\u5668\u751f\u6210\u7684\u65e0\u6548": 0, "\u8fc7\u6ee4\u5668\u8fc7\u6ee4\u53cd\u5411": 0, "\u8fc7\u6ee4\u5e76\u5728\u4e0d\u5b9e\u9645\u8bbf\u95ee\u6570\u636e\u5e93\u7684\u60c5\u51b5\u4e0b\u4f20\u9012": 39, "\u8fd0\u884c\u4e0e": 2, "\u8fd0\u884c\u5668\u542f\u52a8": 14, "\u8fd0\u884c\u5b83\u4eec": 2, "\u8fd0\u884c\u6240\u6709\u6d4b\u8bd5": 2, "\u8fd0\u884c\u6d4b\u8bd5": 47, "\u8fd0\u884c\u6d4b\u8bd5\u5957\u4ef6\u65f6\u9700\u8981\u6ce8\u610f\u7684\u4e8b\u9879": 47, "\u8fd4\u56de": 0, "\u8fd4\u56de\u4e0e\u7236\u7c7b\u76f8\u540c\u7684\u7c7b\u578b": 30, "\u8fd8\u53ef\u4ee5\u5728\u5176\u4e0a\u8c03\u7528": 31, "\u8fd8\u5e0c\u671b\u83b7\u53d6\u8be5\u76f8\u5173\u6570\u636e": 39, "\u8fd8\u662f": 29, "\u8fd8\u901a\u8fc7": 32, "\u8fd9\u4e24\u4e2a\u65b9\u6cd5\u8fd4\u56de\u5728\u914d\u7f6e\u4e2d\u5b9a\u4e49\u7684\u8fde\u63a5\u5b57\u7b26\u4e32": 42, "\u8fd9\u4e24\u4e2a\u67b6\u6784\u90fd\u6ca1\u6709\u53cd\u5411\u8ddf\u968f\u5173\u7cfb": 13, "\u8fd9\u4e2a\u522b\u540d\u5b57\u6bb5\u53ef\u4ee5\u5728\u8fc7\u6ee4\u65f6\u4f5c\u4e3a\u5b57\u6bb5\u540d\u79f0\u4f7f\u7528": 38, "\u8fd9\u4e9b": 29, "\u8fd9\u4e9b\u51fd\u6570\u4e0d\u662f\u5185\u7f6e\u7684": 31, "\u8fd9\u4e9b\u5b57\u6bb5\u4f1a\u81ea\u52a8\u5728\u6d3e\u751f\u7c7b\u4e2d\u53ef\u7528": 38, "\u8fd9\u4e9b\u65b9\u6cd5\u8fd4\u56de\u4e00\u4e2a": 39, "\u8fd9\u4e9b\u6a21\u578b\u4e0d\u4f1a\u5728\u67b6\u6784\u751f\u6210\u4e2d\u88ab\u521b\u5efa": 38, "\u8fd9\u4e9b\u7f16\u8f91\u5668\u53ef\u4ee5\u5e2e\u52a9\u4f60\u7f16\u5199\u4ee3\u7801\u5e76\u63d0\u4f9b\u826f\u597d\u7684\u6a21\u578b\u548c\u4e0d\u540c\u5173\u7cfb\u7684\u81ea\u52a8\u5b8c\u6210": 38, "\u8fd9\u4e9b\u89c4\u5219\u53ef\u80fd\u4e0d\u4e00\u81f4\u5730\u5e94\u7528": 33, "\u8fd9\u4f7f\u5f97": 33, "\u8fd9\u4f7f\u7528": 39, "\u8fd9\u513f\u662f\u4e00\u4e2a\u5185\u7f6e\u6821\u9a8c\u5668\u7684\u5217\u8868": 49, "\u8fd9\u53ef\u4ee5\u88ab\u89c6\u4e3a\u4e00\u79cd\u4f18\u5316": 38, "\u8fd9\u5728\u4e0e\u5176\u4ed6\u5305\u4e00\u8d77\u4f7f\u7528\u65f6\u53ef\u80fd\u975e\u5e38\u65b9\u4fbf": 32, "\u8fd9\u5728\u9700\u8981\u4e0d\u7ed1\u5b9a\u5230\u6570\u636e\u5e93\u4f46\u4ecd\u7136\u5b8c\u6574\u7684\u6a21\u578b\u65f6\u975e\u5e38\u6709\u7528": 0, "\u8fd9\u597d\u5f97\u591a": 13, "\u8fd9\u5bf9\u4e8e\u6807\u51c6": 13, "\u8fd9\u5c06\u4e3a\u6bcf\u4e2a": 31, "\u8fd9\u5c06\u4ec5\u5728\u8868\u4e0d\u5b58\u5728\u65f6\u63d2\u5165\u8868": [43, 44], "\u8fd9\u5c06\u521b\u5efa\u4e00\u4e2a\u65b0\u8bb0\u5f55": 0, "\u8fd9\u5c06\u521b\u5efa\u4ec5\u5305\u542b\u8fd9\u4e9b\u503c\u7684\u6a21\u578b\u5b9e\u4f8b": 0, "\u8fd9\u5c06\u5f15\u53d1": 49, "\u8fd9\u5c06\u6539\u5584\u7f16\u8f91\u5668\u4e2d\u7684\u81ea\u52a8\u8865\u5168\u548c\u66f4\u597d\u7684\u9759\u6001\u5206\u6790": 2, "\u8fd9\u5c06\u6b63\u786e\u5efa\u6a21": 0, "\u8fd9\u5c06\u83b7\u53d6\u4e8b\u4ef6": 39, "\u8fd9\u5c06\u83b7\u53d6\u56e2\u961f\u7684\u6240\u6709\u4e8b\u4ef6": 39, "\u8fd9\u5c06\u83b7\u53d6\u6240\u6709\u961f\u4f0d\u7684\u4e8b\u4ef6": 32, "\u8fd9\u5c06\u83b7\u53d6\u9526\u6807\u8d5b\u53ca\u5176\u4e8b\u4ef6\u548c\u6bcf\u4e2a\u4e8b\u4ef6\u7684\u56e2\u961f": 39, "\u8fd9\u5c06\u8fd4\u56de\u4e00\u4e2a\u5e26\u6709\u9884\u5b9a\u4e49\u8fc7\u6ee4\u6761\u4ef6\u7684": 39, "\u8fd9\u5c06\u8fd4\u56de\u5305\u542b\u952e": 39, "\u8fd9\u5f88\u597d": 49, "\u8fd9\u610f\u5473\u7740\u5b83\u6ca1\u6709\u76f4\u63a5\u7684\u6570\u636e\u5e93\u652f\u6301": 38, "\u8fd9\u662f": [0, 20, 22, 23, 25, 26, 27], "\u8fd9\u662f\u4e00\u4e2a\u5b89\u5168\u4fee\u590d\u7248\u672c": 0, "\u8fd9\u662f\u4e00\u4e2a\u6bd4\u8d5b\u7684\u5f15\u7528": 13, "\u8fd9\u662f\u4e00\u4e2a\u91cd\u8981\u7ec6\u8282": 38, "\u8fd9\u662f\u5b9e\u9645\u7684\u6570\u636e\u5e93\u652f\u6301\u5b57\u6bb5": 38, "\u8fd9\u662f\u6bd4\u8d5b\u4e2d\u7684\u4e00\u4e2a\u4e8b\u4ef6\u7684\u5f15\u7528": 13, "\u8fd9\u662f\u9ed8\u8ba4\u8bbe\u7f6e": 13, "\u8fd9\u6837": 38, "\u8fd9\u6837\u505a\u662f\u56e0\u4e3a\u63cf\u8ff0\u4f1a\u63d0\u4ea4\u7ed9\u6570\u636e\u5e93": 0, "\u8fd9\u6837\u5c31\u66f4\u5bb9\u6613\u6d4b\u8bd5": 2, "\u8fd9\u6837\u60a8\u53ef\u4ee5\u7acb\u5373\u5904\u7406\u76f8\u5173\u5bf9\u8c61": 32, "\u8fd9\u6837\u7c7b\u578b\u68c0\u67e5": 13, "\u8fd9\u73b0\u5728\u88ab\u6e05\u7406\u5e76\u4f5c\u4e3a": 0, "\u8fd9\u76ee\u524d\u662f": 17, "\u8fd9\u91cc": 18, "\u8fd9\u91cc\u5217\u51fa\u4e86\u6240\u6709\u7a0d\u8fdc\u671f\u7684\u529f\u80fd": 41, "\u8fd9\u91cc\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u4e0e": 43, "\u8fd9\u91cc\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7684": 18, "\u8fd9\u91cc\u6211\u4eec\u8fdb\u884c\u8be6\u7ec6\u521d\u59cb\u5316": 18, "\u8fd9\u91cc\u6709\u5f88\u591a\u5185\u5bb9\u9700\u8981\u89e3\u91ca": 13, "\u8fdb\u4e00\u6b65\u6765\u770b": 38, "\u8fdb\u884c": 0, "\u8fdb\u884c\u6ce8\u91ca": 31, "\u8fdb\u884c\u6d4b\u8bd5": 2, "\u8fdb\u884c\u76f8\u5173\u67e5\u8be2\u540e": 32, "\u8fdb\u884c\u7b80\u5355\u5e8f\u5217\u5316": 13, "\u8fdb\u884c\u8fc1\u79fb": 37, "\u8fdd\u89c4": 2, "\u8fde\u63a5": [40, 42, 47], "\u8fde\u63a5\u4e0a\u7684\u6ce8\u91ca\u73b0\u5728\u53ef\u4ee5\u4e0e": 0, "\u8fde\u63a5\u5b57\u7b26\u4e32\u4e2d": 0, "\u8fde\u63a5\u6240\u7528\u7684\u7528\u6237\u540d": 18, "\u8fde\u63a5\u65f6\u4f7f\u7528\u7684\u7528\u6237\u540d": 18, "\u8fde\u63a5\u6c60": 0, "\u8fde\u63a5\u6c60\u56de\u6536\u8d85\u65f6\u65f6\u95f4": 18, "\u8fde\u63a5\u6c60\u7684\u6700\u5927\u5927\u5c0f": 18, "\u8fde\u63a5\u6c60\u7684\u6700\u5c0f\u5927\u5c0f": 18, "\u8fed\u4ee3": 32, "\u9002\u5408\u4e0d\u719f\u6089\u4f4d\u8fd0\u7b97\u7b26\u7684\u7528\u6237": 29, "\u9002\u5408\u7528\u4e8e\u672c\u5730\u5f00\u53d1\u6216\u4ee3\u7801\u903b\u8f91\u7684\u6d4b\u8bd5": 18, "\u9002\u7528\u4e8e": 33, "\u9009\u9879": [0, 37, 38, 39], "\u9009\u9879\u5230": 0, "\u9009\u9879\u7684\u5904\u7406": 0, "\u9012\u5f52\u5173\u7cfb": [19, 47], "\u9012\u5f52\u6a21\u578b": [19, 47], "\u901a\u5e38": 39, "\u901a\u5e38\u65e0\u6cd5\u7406\u89e3\u6a21\u578b\u7684\u884c\u4e3a": 10, "\u901a\u5e38\u662f": 2, "\u901a\u5e38\u683c\u5f0f\u4e3a": 18, "\u901a\u5e38\u7684\u5f62\u5f0f\u4e3a": 18, "\u901a\u5e38\u91c7\u7528\u4ee5\u4e0b\u5f62\u5f0f": 18, "\u901a\u7528\u6570\u636e\u5e93\u540e\u7aef\u4ee3\u7801": 2, "\u901a\u8fc7": [13, 32], "\u901a\u8fc7\u4e00\u4e9b\u5c0f\u7684\u5de5\u4f5c": 38, "\u901a\u8fc7\u4f7f\u7528": 35, "\u901a\u8fc7\u4fdd\u5b58\u521b\u5efa\u5b9e\u4f8b": [32, 33], "\u901a\u8fc7\u5728\u8c03\u7528": 0, "\u901a\u8fc7\u5728\u8fde\u63a5\u5b57\u7b26\u4e32\u4e2d\u6dfb\u52a0\u6570\u636e\u5e93\u4fe1\u606f\u4fee\u590d\u4e0e": 0, "\u901a\u8fc7\u5b83\u53ef\u4ee5\u4e0e": 36, "\u901a\u8fc7\u5c06\u503c\u5b58\u50a8\u4e3a\u5b57\u7b26\u4e32\u6765\u4fdd\u6301\u7cbe\u5ea6": 18, "\u901a\u8fc7\u5f15\u7528\u6a21\u578b\u7684\u5b57\u9762\u91cf": 38, "\u901a\u8fc7\u96c6\u4e2d\u60a8\u7684\u6570\u636e\u6a21\u578b\u548c\u6570\u636e\u89c4\u5219": 33, "\u9075\u5faa\u4ee5\u4e0b\u7ea6\u5b9a\u7684\u98ce\u683c": 2, "\u90a3\u4e48\u53ef\u4ee5\u63d0\u4f9b\u7edd\u5bf9\u5730\u5740": 17, "\u90a3\u4e48\u8fd9\u5c06\u662f\u5b8c\u5168\u6a21\u7cca\u7684": 38, "\u90e8\u5206\u7d22\u5f15\u652f\u6301": 0, "\u90e8\u5206\u9605\u8bfb\u6709\u5173\u8fc7\u6ee4\u4fee\u9970\u7b26\u7684\u66f4\u591a\u4fe1\u606f": 39, "\u914d\u5408\u4f7f\u7528": 0, "\u914d\u7f6e": 5, "\u914d\u7f6e\u4e2d": 37, "\u914d\u7f6e\u4e2d\u5b9a\u4e49": 32, "\u914d\u7f6e\u5b57\u5178\u8def\u5f84": 4, "\u914d\u7f6e\u5bf9\u8c61": 4, "\u914d\u7f6e\u6587\u4ef6": 37, "\u914d\u7f6e\u6a21\u5757\u5b57\u5178\u53d8\u91cf": 37, "\u914d\u7f6e\u7684": 37, "\u914d\u7f6e\u8def\u7531": [40, 47], "\u91cc\u9762\u662f": 13, "\u91cd\u5199": 38, "\u91cd\u547d\u540d\u4e3a": 0, "\u91cd\u6784": 0, "\u9519\u8bef": 0, "\u952e\u7684\u4e0b\u9650": 0, "\u957f\u671f\u8ba1\u5212": 47, "\u95ee\u9898": 0, "\u961f\u4f0d": 32, "\u964d\u7ea7\u5230\u6307\u5b9a\u7248\u672c": [40, 47], "\u9664\u4e86": 32, "\u9664\u975e\u60a8\u663e\u5f0f\u4f20\u9012": 38, "\u96c6\u6210": [20, 22, 23, 25, 26, 27, 47], "\u96c6\u6210\u5230\u5b89\u88c5\u4e2d": 0, "\u9700\u8981\u4f7f\u7528\u8be6\u7ec6\u7684\u521d\u59cb\u5316\u7ed3\u6784": 18, "\u9700\u8981\u5728\u7cfb\u7edf\u4e2d\u5b89\u88c5": 18, "\u9700\u8981\u5bf9": 31, "\u9700\u8981\u60a8\u521d\u59cb\u5316\u5b83\u4eec": [32, 44], "\u975e\u5e38\u611f\u8c22": 3, "\u975e\u7ec4\u5408": 38, "\u9879\u76ee\u7ed3\u6784": 47, "\u987a\u5e8f\u4e0d\u5206\u5148\u540e": 41, "\u9884\u53d6": [19, 39, 47], "\u9884\u671f\u4f1a\u5931\u8d25": 5, "\u9884\u8ba1\u4f1a\u6709\u91cd\u5927\u53d8\u66f4": 33, "\u989d\u5916\u7684\u6570\u636e\u5e93\u652f\u6301": 41, "\u9996\u5148": [4, 13, 32], "\u9996\u5148\u5e94\u8be5\u5bfc\u5165\u5b83\u4eec": 38, "\u9a71\u52a8": 41, "\u9a71\u52a8\u7a0b\u5e8f": 18, "\u9a71\u52a8\u7a0b\u5e8f\u5728": 2, "\u9a71\u52a8\u7a0b\u5e8f\u7528\u4e8e\u6b64\u6570\u636e\u5e93": 32, "\u9a71\u52a8\u7a0b\u5e8f\u7684\u5b9e\u9645\u540d\u79f0": 18, "\u9a71\u52a8\u7a0b\u5e8f\u8fdb\u884c\u5b89\u88c5": 32, "\u9a8c\u8bc1\u5668": 49, "\u9a8c\u8bc1\u5668\u662f\u6a21\u578b\u5b57\u6bb5\u7684\u53ef\u8c03\u7528\u51fd\u6570": 49, "\u9ed8\u8ba4": 37, "\u9ed8\u8ba4\u4e3a": [17, 18], "\u9ed8\u8ba4\u4f7f\u7528\u7528\u6237\u7684\u9ed8\u8ba4\u6a21\u5f0f": 18, "\u9ed8\u8ba4\u4f7f\u7528\u7684\u7279\u5b9a\u6a21\u5f0f": 18, "\u9ed8\u8ba4\u503c\u8f6c\u6362": 0, "\u9ed8\u8ba4\u540d\u4e3a": 38, "\u9ed8\u8ba4\u5b57\u6bb5": 0, "\u9ed8\u8ba4\u60c5\u51b5\u4e0b": 34, "\u9ed8\u8ba4\u6392\u5e8f\u5f97\u4ee5\u4fdd\u7559": 13, "\u9ed8\u8ba4\u7684": 0, "\u9ed8\u8ba4\u7684\u8def\u7531\u65b9\u6848\u786e\u4fdd\u5982\u679c\u6ca1\u6709\u6307\u5b9a\u6570\u636e\u5e93": 42, "\u9ed8\u8ba4\u7684\u8def\u7531\u65b9\u6848\u786e\u4fdd\u5bf9\u8c61\u59cb\u7ec8": 42}, "titles": ["\u53d8\u66f4\u65e5\u5fd7", "Contributor Covenant Code of Conduct", "\u8d21\u732e\u6307\u5357", "\u611f\u8c22", "TortoiseCLI", "\u8fde\u63a5", "\u96c6\u6210/\u63d2\u4ef6", "Tortoise-ORM aiohttp \u96c6\u6210", "Tortoise-ORM BlackSheep \u96c6\u6210", "Tortoise-ORM FastAPI \u96c6\u6210", "Linters", "MySQL", "Postgres", "Pydantic \u5e8f\u5217\u5316", "Tortoise-ORM Quart \u96c6\u6210", "Tortoise-ORM Sanic \u96c6\u6210", "Tortoise-ORM Starlette \u96c6\u6210", "\u5355\u5143\u6d4b\u8bd5\u652f\u6301", "\u6570\u636e\u5e93", "\u6837\u4f8b", "AIOHTTP \u6837\u4f8b", "\u7b80\u5355\u6837\u4f8b", "BlackSheep \u6837\u4f8b", "FastAPI \u6837\u4f8b", "Pydantic \u6837\u4f8b", "Quart \u6837\u4f8b", "Sanic \u6837\u4f8b", "Starlette \u6837\u4f8b", "\u5f02\u5e38", "\u8868\u8fbe\u5f0f", "\u5b57\u6bb5", "\u51fd\u6570\u548c\u805a\u5408", "\u5f00\u59cb\u5165\u95e8", "Tortoise ORM", "\u7d22\u5f15", "Logging", "Manager", "\u8fc1\u79fb", "\u6a21\u578b", "\u67e5\u8be2API", "\u53c2\u8003", "\u8def\u7ebf\u56fe", "\u8def\u7531", "Schema \u521b\u5efa", "\u542f\u52a8", "\u4fe1\u53f7", "\u65f6\u533a", "\u76ee\u5f55", "\u4e8b\u52a1", "\u6821\u9a8c"], "titleterms": {"0": 0, "01": 0, "03": 0, "05": 0, "06": 0, "07": 0, "1": [0, 13, 24], "10": 0, "11": 0, "12": 0, "13": 0, "14": 0, "15": 0, "16": 0, "17": 0, "18": 0, "19": 0, "2": [0, 13, 24], "20": 0, "2024": 0, "21": 0, "22": 0, "23": 0, "24": 0, "25": 0, "3": [0, 13, 24], "4": [0, 13, 24], "5": 0, "6": 0, "7": 0, "8": 0, "9": 0, "By": 21, "__models__": 38, "ad": 0, "aiohttp": [7, 20], "api": 5, "attribut": 1, "basic": 21, "blacksheep": [8, 22], "break": 0, "bugfix": 0, "callabl": [13, 24], "case": 29, "caution": [0, 18], "chang": 0, "code": 1, "comment": 21, "conduct": 1, "contributor": 1, "coven": 1, "creation": 21, "databas": 21, "db_url": 18, "db\u7279\u5b9a\u5b57\u6bb5": 30, "deprec": 0, "doc": 0, "earli": 24, "enforc": 1, "enhanc": 0, "enumer": 21, "exampl": [0, 7, 8, 9, 14, 15, 16, 44], "f": 29, "fastapi": [9, 23], "featur": 0, "field": 21, "filter": 21, "fix": 0, "function": 21, "group": 21, "header": 37, "import": 5, "init": 24, "linter": 10, "list": 24, "log": 35, "main": [20, 23, 25, 26, 27], "manag": 36, "manual": 21, "mariadb": 18, "meta\u7c7b": 38, "model": [20, 21, 22, 23, 25, 26, 27], "mssql": 18, "mysql": [11, 18, 30], "new": 0, "nose2": 17, "note": [0, 5, 13, 17, 29, 32, 33, 38, 39, 44], "older": 0, "oracl": 18, "oracle\u4e2d\u7684\u7f16\u7801": 18, "orm": [7, 8, 9, 14, 15, 16, 33], "other": 0, "our": 1, "pledg": 1, "postgr": [12, 30], "postgresql": 18, "prefetch": 21, "py": [17, 20, 22, 23, 25, 26, 27], "pydant": [13, 24], "pydanticmeta": [13, 24], "pylint": 10, "python": 33, "quart": [14, 25], "queryset": [24, 39], "queryset\u548clist": 13, "q\u8868\u8fbe\u5f0f": 29, "recurs": 21, "refer": 5, "relat": [21, 24], "remov": 0, "respons": 1, "retract": 0, "router": 21, "sanic": [15, 26], "schema": [21, 43], "schema\u521b\u5efa": 21, "scope": 1, "secur": 0, "server": 22, "shell": 4, "signal": 21, "sql": 21, "sqlite": 18, "standard": 1, "starlett": [16, 27], "test": [17, 23], "test_api": 22, "timezon": 46, "tortois": [7, 8, 9, 14, 15, 16, 33], "tortoisecli": 4, "transact": 21, "two": 21, "uniqu": 21, "use_tz": 46, "warn": [0, 44], "when": 29, "\u4e00\u5bf9\u4e00": 39, "\u4e2d\u671f\u8ba1\u5212": 41, "\u4e3a\u4ec0\u4e48\u8981\u6784\u5efa": 33, "\u4e3b\u952e": 38, "\u4e8b\u52a1": [21, 48], "\u4ea4\u4e92\u5f0f": 4, "\u4ee5\u53ca\u66f4\u591a": 33, "\u4f18\u5148\u4e8b\u9879": 2, "\u4f20\u9012\u81ea\u5b9a\u4e49ssl\u8bc1\u4e66": 18, "\u4f7f\u7528\u65b9\u6cd5": 38, "\u4fe1\u53f7": 45, "\u5173\u7cfb": 21, "\u5173\u7cfb\u548c\u521d\u59cb\u5316": 13, "\u5173\u7cfb\u5b57\u6bb5": 30, "\u5185\u7f6e\u6821\u9a8c\u5668": 49, "\u51fd\u6570": [12, 21, 31], "\u51fd\u6570\u548c\u805a\u5408": 31, "\u5206\u7ec4": 21, "\u521b\u5efa": 43, "\u521b\u5efa\u5668": 13, "\u521d\u59cb\u5316": 37, "\u521d\u59cb\u5316app": 44, "\u521d\u59cb\u5316db": 37, "\u524d\u8a00": 46, "\u529f\u80fd": [18, 33], "\u5347\u7ea7\u5230\u6700\u65b0\u7248\u672c": 37, "\u5355\u5143\u6d4b\u8bd5\u652f\u6301": 17, "\u539f\u751fsql": 29, "\u53c2\u8003": [7, 8, 9, 14, 15, 16, 17, 30, 38, 40, 44, 46], "\u53d8\u66f4\u65e5\u5fd7": 0, "\u53ef\u63d2\u5165\u6570\u636e\u5e93\u540e\u7aef": 33, "\u53ef\u9009\u52a0\u901f\u5668": 32, "\u53ef\u9009\u53c2\u6570": 18, "\u542f\u52a8": 44, "\u548c": 13, "\u552f\u4e00\u5b57\u6bb5\u5173\u7cfb": 21, "\u57fa\u672cdb\u5ba2\u6237\u7aef": 18, "\u57fa\u672c\u4f7f\u7528": 21, "\u57fa\u672c\u5b57\u6bb5": 30, "\u57fa\u672c\u7528\u6cd5": [13, 24], "\u57fa\u672c\u975e\u5173\u7cfb\u793a\u4f8b": [22, 23], "\u57fa\u7840\u51fd\u6570\u7c7b": 31, "\u5907\u6ce8": 21, "\u590d\u6742\u7684\u9884\u83b7\u53d6": 39, "\u5916\u952e": [38, 39], "\u591a\u5bf9\u591a": 39, "\u591a\u5bf9\u591a\u5173\u7cfb": 38, "\u591a\u6570\u636e\u5e93": 21, "\u5b50\u67e5\u8be2": 29, "\u5b57\u6bb5": [11, 12, 30], "\u5b89\u88c5": 32, "\u5b9a\u4e49\u8def\u7531": 42, "\u5e2e\u52a9\u51fd\u6570": 43, "\u5e72\u51c0": 33, "\u5e8f\u5217\u5316": 13, "\u5f00\u59cb\u5165\u95e8": 32, "\u5f02\u5e38": 28, "\u5f15\u8a00": 33, "\u5fc5\u9009\u53c2\u6570": 18, "\u5fc5\u987b\u53c2\u6570": 18, "\u5feb\u901f\u5f00\u59cb": [4, 37], "\u611f\u8c22": 3, "\u624b\u5199sql": 21, "\u6269\u5c55\u4e00\u4e2a\u5b57\u6bb5": 30, "\u6269\u5c55\u7d22\u5f15": 34, "\u63d0\u4ea4\u9519\u8bef\u6216\u8bf7\u6c42\u529f\u80fd": 2, "\u63d2\u4ef6": [6, 10], "\u641c\u7d22": [11, 12], "\u6539\u8fdb\u5173\u7cfb\u7c7b\u578b\u63d0\u793a": 38, "\u6559\u7a0b": [13, 32], "\u6559\u7a0b\u6765\u6e90": 24, "\u6570\u636e\u5b57\u6bb5": 30, "\u6570\u636e\u5e93": 18, "\u6570\u636e\u5e93\u5b57\u6bb5": 38, "\u65e9\u671f\u6a21\u578b\u521d\u59cb\u5316": 24, "\u65f6\u533a": 46, "\u663e\u793a\u5386\u53f2": 37, "\u663e\u793a\u5df2\u8fc1\u79fb\u7684\u5934": 37, "\u66f4\u65b0\u6a21\u578b\u5e76\u751f\u6210\u8fc1\u79fb\u6587\u4ef6": 37, "\u6709\u4f55\u7528\u5904": 33, "\u679a\u4e3e\u5b57\u6bb5": 21, "\u67e5\u8be2api": 39, "\u6821\u9a8c": 49, "\u6837\u4f8b": [19, 20, 22, 23, 24, 25, 26, 27], "\u6837\u5f0f": 2, "\u6a21\u578b": 38, "\u6a21\u578b\u4fe1\u53f7": 21, "\u6a21\u578b\u7c7b": 13, "\u6d4b\u8bd5\u7684\u4e0d\u540c\u79cd\u7c7b": 2, "\u6d4b\u8bd5\u8fd0\u884c\u5668": 17, "\u6e05\u7406\u7684\u91cd\u8981\u6027": 44, "\u719f\u6089\u7684": 33, "\u7279\u522b\u611f\u8c22": 3, "\u7528\u6cd5": [4, 10, 14, 17, 30, 34, 36, 37, 42, 49], "\u754c\u9762": 33, "\u7684\u7528\u6cd5": 38, "\u76ee\u5f55": 47, "\u77ed\u671f\u8ba1\u5212": 41, "\u7b80\u5355\u6837\u4f8b": 21, "\u7d22\u5f15": [11, 12, 34], "\u7ee7\u627f": 38, "\u7eff\u8272": 17, "\u7f16\u7801\u6307\u5357": 2, "\u804a\u5929": 2, "\u805a\u5408": 31, "\u81ea\u5b9a\u4e49\u51fd\u6570": 31, "\u81ea\u5b9a\u4e49\u6821\u9a8c\u5668": 49, "\u83b7\u53d6\u5916\u952e\u5bf9\u8c61": 38, "\u8868\u8fbe\u5f0f": 29, "\u8ba1\u7b97\u5b57\u6bb5": 24, "\u8d21\u732e\u5217\u8868": 3, "\u8d21\u732e\u6307\u5357": 2, "\u8def\u7531": [21, 42], "\u8def\u7ebf\u56fe": 41, "\u8fc1\u79fb": 37, "\u8fc7\u6ee4": [21, 39], "\u8fd0\u884c\u6d4b\u8bd5": 2, "\u8fd0\u884c\u6d4b\u8bd5\u5957\u4ef6\u65f6\u9700\u8981\u6ce8\u610f\u7684\u4e8b\u9879": 2, "\u8fde\u63a5": 5, "\u9012\u5f52\u5173\u7cfb": 21, "\u9012\u5f52\u6a21\u578b": 24, "\u914d\u7f6e\u8def\u7531": 42, "\u957f\u671f\u8ba1\u5212": 41, "\u964d\u7ea7\u5230\u6307\u5b9a\u7248\u672c": 37, "\u96c6\u6210": [6, 7, 8, 9, 14, 15, 16], "\u9879\u76ee\u7ed3\u6784": 2, "\u9884\u53d6": 21}})